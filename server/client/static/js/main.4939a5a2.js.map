{"version":3,"file":"static/js/main.4939a5a2.js","mappings":";oDAYa,IAAIA,EAAGC,EAAQ,KAASC,EAAGD,EAAQ,KAAa,SAASE,EAAEC,GAAG,IAAI,IAAIC,EAAE,yDAAyDD,EAAEE,EAAE,EAAEA,EAAEC,UAAUC,OAAOF,IAAID,GAAG,WAAWI,mBAAmBF,UAAUD,IAAI,MAAM,yBAAyBF,EAAE,WAAWC,EAAE,gHAAgH,CAAC,IAAIK,EAAG,IAAIC,IAAIC,EAAG,CAAC,EAAE,SAASC,EAAGT,EAAEC,GAAGS,EAAGV,EAAEC,GAAGS,EAAGV,EAAE,UAAUC,EAAE,CACxb,SAASS,EAAGV,EAAEC,GAAW,IAARO,EAAGR,GAAGC,EAAMD,EAAE,EAAEA,EAAEC,EAAEG,OAAOJ,IAAIM,EAAGK,IAAIV,EAAED,GAAG,CAC5D,IAAIY,IAAK,qBAAqBC,QAAQ,qBAAqBA,OAAOC,UAAU,qBAAqBD,OAAOC,SAASC,eAAeC,EAAGC,OAAOC,UAAUC,eAAeC,EAAG,8VAA8VC,EACpgB,CAAC,EAAEC,EAAG,CAAC,EACiN,SAASC,EAAEvB,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,GAAGC,KAAKC,gBAAgB,IAAI5B,GAAG,IAAIA,GAAG,IAAIA,EAAE2B,KAAKE,cAAcN,EAAEI,KAAKG,mBAAmBN,EAAEG,KAAKI,gBAAgB9B,EAAE0B,KAAKK,aAAajC,EAAE4B,KAAKM,KAAKjC,EAAE2B,KAAKO,YAAYT,EAAEE,KAAKQ,kBAAkBT,CAAC,CAAC,IAAIU,EAAE,CAAC,EACpb,uIAAuIC,MAAM,KAAKC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,CAAC,gBAAgB,kBAAkB,CAAC,YAAY,SAAS,CAAC,UAAU,OAAO,CAAC,YAAY,eAAeuC,SAAQ,SAASvC,GAAG,IAAIC,EAAED,EAAE,GAAGqC,EAAEpC,GAAG,IAAIsB,EAAEtB,EAAE,GAAE,EAAGD,EAAE,GAAG,MAAK,GAAG,EAAG,IAAG,CAAC,kBAAkB,YAAY,aAAa,SAASuC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAEwC,cAAc,MAAK,GAAG,EAAG,IAC1e,CAAC,cAAc,4BAA4B,YAAY,iBAAiBD,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,8OAA8OsC,MAAM,KAAKC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAEwC,cAAc,MAAK,GAAG,EAAG,IACxb,CAAC,UAAU,WAAW,QAAQ,YAAYD,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,UAAU,YAAYuC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,OAAO,OAAO,OAAO,QAAQuC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,UAAU,SAASuC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAEwC,cAAc,MAAK,GAAG,EAAG,IAAG,IAAIC,EAAG,gBAAgB,SAASC,EAAG1C,GAAG,OAAOA,EAAE,GAAG2C,aAAa,CAIxZ,SAASC,EAAG5C,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAEY,EAAElB,eAAelB,GAAGoC,EAAEpC,GAAG,MAAQ,OAAOwB,EAAE,IAAIA,EAAES,KAAKV,KAAK,EAAEvB,EAAEG,SAAS,MAAMH,EAAE,IAAI,MAAMA,EAAE,IAAI,MAAMA,EAAE,IAAI,MAAMA,EAAE,MAP9I,SAAYD,EAAEC,EAAEC,EAAEsB,GAAG,GAAG,OAAOvB,GAAG,qBAAqBA,GADqE,SAAYD,EAAEC,EAAEC,EAAEsB,GAAG,GAAG,OAAOtB,GAAG,IAAIA,EAAEgC,KAAK,OAAM,EAAG,cAAcjC,GAAG,IAAK,WAAW,IAAK,SAAS,OAAM,EAAG,IAAK,UAAU,OAAGuB,IAAc,OAAOtB,GAASA,EAAE2B,gBAAmD,WAAnC7B,EAAEA,EAAEwC,cAAcK,MAAM,EAAE,KAAsB,UAAU7C,GAAE,QAAQ,OAAM,EAAG,CAC/T8C,CAAG9C,EAAEC,EAAEC,EAAEsB,GAAG,OAAM,EAAG,GAAGA,EAAE,OAAM,EAAG,GAAG,OAAOtB,EAAE,OAAOA,EAAEgC,MAAM,KAAK,EAAE,OAAOjC,EAAE,KAAK,EAAE,OAAM,IAAKA,EAAE,KAAK,EAAE,OAAO8C,MAAM9C,GAAG,KAAK,EAAE,OAAO8C,MAAM9C,IAAI,EAAEA,EAAE,OAAM,CAAE,CAOtE+C,CAAG/C,EAAEC,EAAEuB,EAAED,KAAKtB,EAAE,MAAMsB,GAAG,OAAOC,EARxK,SAAYzB,GAAG,QAAGgB,EAAGiC,KAAK3B,EAAGtB,KAAegB,EAAGiC,KAAK5B,EAAGrB,KAAeoB,EAAG8B,KAAKlD,GAAUsB,EAAGtB,IAAG,GAAGqB,EAAGrB,IAAG,GAAS,GAAE,CAQwDmD,CAAGlD,KAAK,OAAOC,EAAEF,EAAEoD,gBAAgBnD,GAAGD,EAAEqD,aAAapD,EAAE,GAAGC,IAAIuB,EAAEO,gBAAgBhC,EAAEyB,EAAEQ,cAAc,OAAO/B,EAAE,IAAIuB,EAAES,MAAQ,GAAGhC,GAAGD,EAAEwB,EAAEK,cAAcN,EAAEC,EAAEM,mBAAmB,OAAO7B,EAAEF,EAAEoD,gBAAgBnD,IAAaC,EAAE,KAAXuB,EAAEA,EAAES,OAAc,IAAIT,IAAG,IAAKvB,EAAE,GAAG,GAAGA,EAAEsB,EAAExB,EAAEsD,eAAe9B,EAAEvB,EAAEC,GAAGF,EAAEqD,aAAapD,EAAEC,KAAI,CAHjd,0jCAA0jCoC,MAAM,KAAKC,SAAQ,SAASvC,GAAG,IAAIC,EAAED,EAAEuD,QAAQd,EACzmCC,GAAIL,EAAEpC,GAAG,IAAIsB,EAAEtB,EAAE,GAAE,EAAGD,EAAE,MAAK,GAAG,EAAG,IAAG,2EAA2EsC,MAAM,KAAKC,SAAQ,SAASvC,GAAG,IAAIC,EAAED,EAAEuD,QAAQd,EAAGC,GAAIL,EAAEpC,GAAG,IAAIsB,EAAEtB,EAAE,GAAE,EAAGD,EAAE,gCAA+B,GAAG,EAAG,IAAG,CAAC,WAAW,WAAW,aAAauC,SAAQ,SAASvC,GAAG,IAAIC,EAAED,EAAEuD,QAAQd,EAAGC,GAAIL,EAAEpC,GAAG,IAAIsB,EAAEtB,EAAE,GAAE,EAAGD,EAAE,wCAAuC,GAAG,EAAG,IAAG,CAAC,WAAW,eAAeuC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAEwC,cAAc,MAAK,GAAG,EAAG,IACldH,EAAEmB,UAAU,IAAIjC,EAAE,YAAY,GAAE,EAAG,aAAa,gCAA+B,GAAG,GAAI,CAAC,MAAM,OAAO,SAAS,cAAcgB,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAEwC,cAAc,MAAK,GAAG,EAAG,IAE5L,IAAIiB,EAAG7D,EAAG8D,mDAAmDC,EAAGC,OAAOC,IAAI,iBAAiBC,EAAGF,OAAOC,IAAI,gBAAgBE,EAAGH,OAAOC,IAAI,kBAAkBG,EAAGJ,OAAOC,IAAI,qBAAqBI,EAAGL,OAAOC,IAAI,kBAAkBK,EAAGN,OAAOC,IAAI,kBAAkBM,EAAGP,OAAOC,IAAI,iBAAiBO,EAAGR,OAAOC,IAAI,qBAAqBQ,EAAGT,OAAOC,IAAI,kBAAkBS,EAAGV,OAAOC,IAAI,uBAAuBU,EAAGX,OAAOC,IAAI,cAAcW,EAAGZ,OAAOC,IAAI,cAAcD,OAAOC,IAAI,eAAeD,OAAOC,IAAI,0BACje,IAAIY,EAAGb,OAAOC,IAAI,mBAAmBD,OAAOC,IAAI,uBAAuBD,OAAOC,IAAI,eAAeD,OAAOC,IAAI,wBAAwB,IAAIa,EAAGd,OAAOe,SAAS,SAASC,EAAG5E,GAAG,OAAG,OAAOA,GAAG,kBAAkBA,EAAS,KAAwC,oBAAnCA,EAAE0E,GAAI1E,EAAE0E,IAAK1E,EAAE,eAA0CA,EAAE,IAAI,CAAC,IAAoB6E,EAAhBC,EAAE7D,OAAO8D,OAAU,SAASC,EAAGhF,GAAG,QAAG,IAAS6E,EAAG,IAAI,MAAMI,OAAQ,CAAC,MAAM/E,GAAG,IAAID,EAAEC,EAAEgF,MAAMC,OAAOC,MAAM,gBAAgBP,EAAG5E,GAAGA,EAAE,IAAI,EAAE,CAAC,MAAM,KAAK4E,EAAG7E,CAAC,CAAC,IAAIqF,GAAG,EACzb,SAASC,EAAGtF,EAAEC,GAAG,IAAID,GAAGqF,EAAG,MAAM,GAAGA,GAAG,EAAG,IAAInF,EAAE+E,MAAMM,kBAAkBN,MAAMM,uBAAkB,EAAO,IAAI,GAAGtF,EAAE,GAAGA,EAAE,WAAW,MAAMgF,OAAQ,EAAEhE,OAAOuE,eAAevF,EAAEiB,UAAU,QAAQ,CAACuE,IAAI,WAAW,MAAMR,OAAQ,IAAI,kBAAkBS,SAASA,QAAQC,UAAU,CAAC,IAAID,QAAQC,UAAU1F,EAAE,GAAG,CAAC,MAAM2F,GAAG,IAAIpE,EAAEoE,CAAC,CAACF,QAAQC,UAAU3F,EAAE,GAAGC,EAAE,KAAK,CAAC,IAAIA,EAAEgD,MAAM,CAAC,MAAM2C,GAAGpE,EAAEoE,CAAC,CAAC5F,EAAEiD,KAAKhD,EAAEiB,UAAU,KAAK,CAAC,IAAI,MAAM+D,OAAQ,CAAC,MAAMW,GAAGpE,EAAEoE,CAAC,CAAC5F,GAAG,CAAC,CAAC,MAAM4F,GAAG,GAAGA,GAAGpE,GAAG,kBAAkBoE,EAAEV,MAAM,CAAC,IAAI,IAAIzD,EAAEmE,EAAEV,MAAM5C,MAAM,MACnfZ,EAAEF,EAAE0D,MAAM5C,MAAM,MAAMX,EAAEF,EAAErB,OAAO,EAAEyF,EAAEnE,EAAEtB,OAAO,EAAE,GAAGuB,GAAG,GAAGkE,GAAGpE,EAAEE,KAAKD,EAAEmE,IAAIA,IAAI,KAAK,GAAGlE,GAAG,GAAGkE,EAAElE,IAAIkE,IAAI,GAAGpE,EAAEE,KAAKD,EAAEmE,GAAG,CAAC,GAAG,IAAIlE,GAAG,IAAIkE,EAAG,MAAMlE,IAAQ,IAAJkE,GAASpE,EAAEE,KAAKD,EAAEmE,GAAG,CAAC,IAAIC,EAAE,KAAKrE,EAAEE,GAAG4B,QAAQ,WAAW,QAA6F,OAArFvD,EAAE+F,aAAaD,EAAEE,SAAS,iBAAiBF,EAAEA,EAAEvC,QAAQ,cAAcvD,EAAE+F,cAAqBD,CAAC,QAAO,GAAGnE,GAAG,GAAGkE,GAAG,KAAK,CAAC,CAAC,CAAC,QAAQR,GAAG,EAAGJ,MAAMM,kBAAkBrF,CAAC,CAAC,OAAOF,EAAEA,EAAEA,EAAE+F,aAAa/F,EAAEiG,KAAK,IAAIjB,EAAGhF,GAAG,EAAE,CAC9Z,SAASkG,EAAGlG,GAAG,OAAOA,EAAEmG,KAAK,KAAK,EAAE,OAAOnB,EAAGhF,EAAEkC,MAAM,KAAK,GAAG,OAAO8C,EAAG,QAAQ,KAAK,GAAG,OAAOA,EAAG,YAAY,KAAK,GAAG,OAAOA,EAAG,gBAAgB,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,OAAOhF,EAAEsF,EAAGtF,EAAEkC,MAAK,GAAM,KAAK,GAAG,OAAOlC,EAAEsF,EAAGtF,EAAEkC,KAAKkE,QAAO,GAAM,KAAK,EAAE,OAAOpG,EAAEsF,EAAGtF,EAAEkC,MAAK,GAAM,QAAQ,MAAM,GAAG,CACxR,SAASmE,EAAGrG,GAAG,GAAG,MAAMA,EAAE,OAAO,KAAK,GAAG,oBAAoBA,EAAE,OAAOA,EAAE+F,aAAa/F,EAAEiG,MAAM,KAAK,GAAG,kBAAkBjG,EAAE,OAAOA,EAAE,OAAOA,GAAG,KAAK+D,EAAG,MAAM,WAAW,KAAKD,EAAG,MAAM,SAAS,KAAKG,EAAG,MAAM,WAAW,KAAKD,EAAG,MAAM,aAAa,KAAKK,EAAG,MAAM,WAAW,KAAKC,EAAG,MAAM,eAAe,GAAG,kBAAkBtE,EAAE,OAAOA,EAAEsG,UAAU,KAAKnC,EAAG,OAAOnE,EAAE+F,aAAa,WAAW,YAAY,KAAK7B,EAAG,OAAOlE,EAAEuG,SAASR,aAAa,WAAW,YAAY,KAAK3B,EAAG,IAAInE,EAAED,EAAEoG,OAC7Z,OADoapG,EAAEA,EAAE+F,eACnd/F,EAAE,MADieA,EAAEC,EAAE8F,aAClf9F,EAAEgG,MAAM,IAAY,cAAcjG,EAAE,IAAI,cAAqBA,EAAE,KAAKuE,EAAG,OAA6B,QAAtBtE,EAAED,EAAE+F,aAAa,MAAc9F,EAAEoG,EAAGrG,EAAEkC,OAAO,OAAO,KAAKsC,EAAGvE,EAAED,EAAEwG,SAASxG,EAAEA,EAAEyG,MAAM,IAAI,OAAOJ,EAAGrG,EAAEC,GAAG,CAAC,MAAMC,GAAG,EAAE,OAAO,IAAI,CAC3M,SAASwG,EAAG1G,GAAG,IAAIC,EAAED,EAAEkC,KAAK,OAAOlC,EAAEmG,KAAK,KAAK,GAAG,MAAM,QAAQ,KAAK,EAAE,OAAOlG,EAAE8F,aAAa,WAAW,YAAY,KAAK,GAAG,OAAO9F,EAAEsG,SAASR,aAAa,WAAW,YAAY,KAAK,GAAG,MAAM,qBAAqB,KAAK,GAAG,OAAkB/F,GAAXA,EAAEC,EAAEmG,QAAWL,aAAa/F,EAAEiG,MAAM,GAAGhG,EAAE8F,cAAc,KAAK/F,EAAE,cAAcA,EAAE,IAAI,cAAc,KAAK,EAAE,MAAM,WAAW,KAAK,EAAE,OAAOC,EAAE,KAAK,EAAE,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,KAAK,EAAE,MAAM,OAAO,KAAK,GAAG,OAAOoG,EAAGpG,GAAG,KAAK,EAAE,OAAOA,IAAI+D,EAAG,aAAa,OAAO,KAAK,GAAG,MAAM,YACtf,KAAK,GAAG,MAAM,WAAW,KAAK,GAAG,MAAM,QAAQ,KAAK,GAAG,MAAM,WAAW,KAAK,GAAG,MAAM,eAAe,KAAK,GAAG,MAAM,gBAAgB,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,GAAG,oBAAoB/D,EAAE,OAAOA,EAAE8F,aAAa9F,EAAEgG,MAAM,KAAK,GAAG,kBAAkBhG,EAAE,OAAOA,EAAE,OAAO,IAAI,CAAC,SAAS0G,EAAG3G,GAAG,cAAcA,GAAG,IAAK,UAAU,IAAK,SAAS,IAAK,SAAS,IAAK,YAAqB,IAAK,SAAS,OAAOA,EAAE,QAAQ,MAAM,GAAG,CACra,SAAS4G,EAAG5G,GAAG,IAAIC,EAAED,EAAEkC,KAAK,OAAOlC,EAAEA,EAAE6G,WAAW,UAAU7G,EAAEwC,gBAAgB,aAAavC,GAAG,UAAUA,EAAE,CAEtF,SAAS6G,EAAG9G,GAAGA,EAAE+G,gBAAgB/G,EAAE+G,cADvD,SAAY/G,GAAG,IAAIC,EAAE2G,EAAG5G,GAAG,UAAU,QAAQE,EAAEe,OAAO+F,yBAAyBhH,EAAEiH,YAAY/F,UAAUjB,GAAGuB,EAAE,GAAGxB,EAAEC,GAAG,IAAID,EAAEmB,eAAelB,IAAI,qBAAqBC,GAAG,oBAAoBA,EAAEgH,KAAK,oBAAoBhH,EAAEuF,IAAI,CAAC,IAAIhE,EAAEvB,EAAEgH,IAAIxF,EAAExB,EAAEuF,IAAiL,OAA7KxE,OAAOuE,eAAexF,EAAEC,EAAE,CAACkH,cAAa,EAAGD,IAAI,WAAW,OAAOzF,EAAEwB,KAAKrB,KAAK,EAAE6D,IAAI,SAASzF,GAAGwB,EAAE,GAAGxB,EAAE0B,EAAEuB,KAAKrB,KAAK5B,EAAE,IAAIiB,OAAOuE,eAAexF,EAAEC,EAAE,CAACmH,WAAWlH,EAAEkH,aAAmB,CAACC,SAAS,WAAW,OAAO7F,CAAC,EAAE8F,SAAS,SAAStH,GAAGwB,EAAE,GAAGxB,CAAC,EAAEuH,aAAa,WAAWvH,EAAE+G,cACxf,YAAY/G,EAAEC,EAAE,EAAE,CAAC,CAAkDuH,CAAGxH,GAAG,CAAC,SAASyH,EAAGzH,GAAG,IAAIA,EAAE,OAAM,EAAG,IAAIC,EAAED,EAAE+G,cAAc,IAAI9G,EAAE,OAAM,EAAG,IAAIC,EAAED,EAAEoH,WAAe7F,EAAE,GAAqD,OAAlDxB,IAAIwB,EAAEoF,EAAG5G,GAAGA,EAAE0H,QAAQ,OAAO,QAAQ1H,EAAE2H,QAAO3H,EAAEwB,KAAatB,IAAGD,EAAEqH,SAAStH,IAAG,EAAM,CAAC,SAAS4H,EAAG5H,GAAwD,GAAG,qBAAxDA,EAAEA,IAAI,qBAAqBc,SAASA,cAAS,IAAkC,OAAO,KAAK,IAAI,OAAOd,EAAE6H,eAAe7H,EAAE8H,IAAI,CAAC,MAAM7H,GAAG,OAAOD,EAAE8H,IAAI,CAAC,CACpa,SAASC,EAAG/H,EAAEC,GAAG,IAAIC,EAAED,EAAEyH,QAAQ,OAAO5C,EAAE,CAAC,EAAE7E,EAAE,CAAC+H,oBAAe,EAAOC,kBAAa,EAAON,WAAM,EAAOD,QAAQ,MAAMxH,EAAEA,EAAEF,EAAEkI,cAAcC,gBAAgB,CAAC,SAASC,EAAGpI,EAAEC,GAAG,IAAIC,EAAE,MAAMD,EAAEgI,aAAa,GAAGhI,EAAEgI,aAAazG,EAAE,MAAMvB,EAAEyH,QAAQzH,EAAEyH,QAAQzH,EAAE+H,eAAe9H,EAAEyG,EAAG,MAAM1G,EAAE0H,MAAM1H,EAAE0H,MAAMzH,GAAGF,EAAEkI,cAAc,CAACC,eAAe3G,EAAE6G,aAAanI,EAAEoI,WAAW,aAAarI,EAAEiC,MAAM,UAAUjC,EAAEiC,KAAK,MAAMjC,EAAEyH,QAAQ,MAAMzH,EAAE0H,MAAM,CAAC,SAASY,EAAGvI,EAAEC,GAAe,OAAZA,EAAEA,EAAEyH,UAAiB9E,EAAG5C,EAAE,UAAUC,GAAE,EAAG,CAC9d,SAASuI,EAAGxI,EAAEC,GAAGsI,EAAGvI,EAAEC,GAAG,IAAIC,EAAEyG,EAAG1G,EAAE0H,OAAOnG,EAAEvB,EAAEiC,KAAK,GAAG,MAAMhC,EAAK,WAAWsB,GAAM,IAAItB,GAAG,KAAKF,EAAE2H,OAAO3H,EAAE2H,OAAOzH,KAAEF,EAAE2H,MAAM,GAAGzH,GAAOF,EAAE2H,QAAQ,GAAGzH,IAAIF,EAAE2H,MAAM,GAAGzH,QAAQ,GAAG,WAAWsB,GAAG,UAAUA,EAA8B,YAA3BxB,EAAEoD,gBAAgB,SAAgBnD,EAAEkB,eAAe,SAASsH,GAAGzI,EAAEC,EAAEiC,KAAKhC,GAAGD,EAAEkB,eAAe,iBAAiBsH,GAAGzI,EAAEC,EAAEiC,KAAKyE,EAAG1G,EAAEgI,eAAe,MAAMhI,EAAEyH,SAAS,MAAMzH,EAAE+H,iBAAiBhI,EAAEgI,iBAAiB/H,EAAE+H,eAAe,CACla,SAASU,EAAG1I,EAAEC,EAAEC,GAAG,GAAGD,EAAEkB,eAAe,UAAUlB,EAAEkB,eAAe,gBAAgB,CAAC,IAAIK,EAAEvB,EAAEiC,KAAK,KAAK,WAAWV,GAAG,UAAUA,QAAG,IAASvB,EAAE0H,OAAO,OAAO1H,EAAE0H,OAAO,OAAO1H,EAAE,GAAGD,EAAEkI,cAAcG,aAAanI,GAAGD,IAAID,EAAE2H,QAAQ3H,EAAE2H,MAAM1H,GAAGD,EAAEiI,aAAahI,CAAC,CAAU,MAATC,EAAEF,EAAEiG,QAAcjG,EAAEiG,KAAK,IAAIjG,EAAEgI,iBAAiBhI,EAAEkI,cAAcC,eAAe,KAAKjI,IAAIF,EAAEiG,KAAK/F,EAAE,CACzV,SAASuI,GAAGzI,EAAEC,EAAEC,GAAM,WAAWD,GAAG2H,EAAG5H,EAAE2I,iBAAiB3I,IAAE,MAAME,EAAEF,EAAEiI,aAAa,GAAGjI,EAAEkI,cAAcG,aAAarI,EAAEiI,eAAe,GAAG/H,IAAIF,EAAEiI,aAAa,GAAG/H,GAAE,CAAC,IAAI0I,GAAGC,MAAMC,QAC7K,SAASC,GAAG/I,EAAEC,EAAEC,EAAEsB,GAAe,GAAZxB,EAAEA,EAAEgJ,QAAW/I,EAAE,CAACA,EAAE,CAAC,EAAE,IAAI,IAAIwB,EAAE,EAAEA,EAAEvB,EAAEE,OAAOqB,IAAIxB,EAAE,IAAIC,EAAEuB,KAAI,EAAG,IAAIvB,EAAE,EAAEA,EAAEF,EAAEI,OAAOF,IAAIuB,EAAExB,EAAEkB,eAAe,IAAInB,EAAEE,GAAGyH,OAAO3H,EAAEE,GAAG+I,WAAWxH,IAAIzB,EAAEE,GAAG+I,SAASxH,GAAGA,GAAGD,IAAIxB,EAAEE,GAAGgJ,iBAAgB,EAAG,KAAK,CAAmB,IAAlBhJ,EAAE,GAAGyG,EAAGzG,GAAGD,EAAE,KAASwB,EAAE,EAAEA,EAAEzB,EAAEI,OAAOqB,IAAI,CAAC,GAAGzB,EAAEyB,GAAGkG,QAAQzH,EAAiD,OAA9CF,EAAEyB,GAAGwH,UAAS,OAAGzH,IAAIxB,EAAEyB,GAAGyH,iBAAgB,IAAW,OAAOjJ,GAAGD,EAAEyB,GAAG0H,WAAWlJ,EAAED,EAAEyB,GAAG,CAAC,OAAOxB,IAAIA,EAAEgJ,UAAS,EAAG,CAAC,CACxY,SAASG,GAAGpJ,EAAEC,GAAG,GAAG,MAAMA,EAAEoJ,wBAAwB,MAAMpE,MAAMlF,EAAE,KAAK,OAAO+E,EAAE,CAAC,EAAE7E,EAAE,CAAC0H,WAAM,EAAOM,kBAAa,EAAOqB,SAAS,GAAGtJ,EAAEkI,cAAcG,cAAc,CAAC,SAASkB,GAAGvJ,EAAEC,GAAG,IAAIC,EAAED,EAAE0H,MAAM,GAAG,MAAMzH,EAAE,CAA+B,GAA9BA,EAAED,EAAEqJ,SAASrJ,EAAEA,EAAEgI,aAAgB,MAAM/H,EAAE,CAAC,GAAG,MAAMD,EAAE,MAAMgF,MAAMlF,EAAE,KAAK,GAAG6I,GAAG1I,GAAG,CAAC,GAAG,EAAEA,EAAEE,OAAO,MAAM6E,MAAMlF,EAAE,KAAKG,EAAEA,EAAE,EAAE,CAACD,EAAEC,CAAC,CAAC,MAAMD,IAAIA,EAAE,IAAIC,EAAED,CAAC,CAACD,EAAEkI,cAAc,CAACG,aAAa1B,EAAGzG,GAAG,CACnY,SAASsJ,GAAGxJ,EAAEC,GAAG,IAAIC,EAAEyG,EAAG1G,EAAE0H,OAAOnG,EAAEmF,EAAG1G,EAAEgI,cAAc,MAAM/H,KAAIA,EAAE,GAAGA,KAAMF,EAAE2H,QAAQ3H,EAAE2H,MAAMzH,GAAG,MAAMD,EAAEgI,cAAcjI,EAAEiI,eAAe/H,IAAIF,EAAEiI,aAAa/H,IAAI,MAAMsB,IAAIxB,EAAEiI,aAAa,GAAGzG,EAAE,CAAC,SAASiI,GAAGzJ,GAAG,IAAIC,EAAED,EAAE0J,YAAYzJ,IAAID,EAAEkI,cAAcG,cAAc,KAAKpI,GAAG,OAAOA,IAAID,EAAE2H,MAAM1H,EAAE,CAAC,SAAS0J,GAAG3J,GAAG,OAAOA,GAAG,IAAK,MAAM,MAAM,6BAA6B,IAAK,OAAO,MAAM,qCAAqC,QAAQ,MAAM,+BAA+B,CAC7c,SAAS4J,GAAG5J,EAAEC,GAAG,OAAO,MAAMD,GAAG,iCAAiCA,EAAE2J,GAAG1J,GAAG,+BAA+BD,GAAG,kBAAkBC,EAAE,+BAA+BD,CAAC,CAChK,IAAI6J,GAAe7J,GAAZ8J,IAAY9J,GAAsJ,SAASA,EAAEC,GAAG,GAAG,+BAA+BD,EAAE+J,cAAc,cAAc/J,EAAEA,EAAEgK,UAAU/J,MAAM,CAA2F,KAA1F4J,GAAGA,IAAI/I,SAASC,cAAc,QAAUiJ,UAAU,QAAQ/J,EAAEgK,UAAUC,WAAW,SAAajK,EAAE4J,GAAGM,WAAWnK,EAAEmK,YAAYnK,EAAEoK,YAAYpK,EAAEmK,YAAY,KAAKlK,EAAEkK,YAAYnK,EAAEqK,YAAYpK,EAAEkK,WAAW,CAAC,EAAvb,qBAAqBG,OAAOA,MAAMC,wBAAwB,SAAStK,EAAEC,EAAEsB,EAAEC,GAAG6I,MAAMC,yBAAwB,WAAW,OAAOvK,GAAEC,EAAEC,EAAM,GAAE,EAAEF,IACtK,SAASwK,GAAGxK,EAAEC,GAAG,GAAGA,EAAE,CAAC,IAAIC,EAAEF,EAAEmK,WAAW,GAAGjK,GAAGA,IAAIF,EAAEyK,WAAW,IAAIvK,EAAEwK,SAAwB,YAAdxK,EAAEyK,UAAU1K,EAAS,CAACD,EAAE0J,YAAYzJ,CAAC,CACtH,IAAI2K,GAAG,CAACC,yBAAwB,EAAGC,aAAY,EAAGC,mBAAkB,EAAGC,kBAAiB,EAAGC,kBAAiB,EAAGC,SAAQ,EAAGC,cAAa,EAAGC,iBAAgB,EAAGC,aAAY,EAAGC,SAAQ,EAAGC,MAAK,EAAGC,UAAS,EAAGC,cAAa,EAAGC,YAAW,EAAGC,cAAa,EAAGC,WAAU,EAAGC,UAAS,EAAGC,SAAQ,EAAGC,YAAW,EAAGC,aAAY,EAAGC,cAAa,EAAGC,YAAW,EAAGC,eAAc,EAAGC,gBAAe,EAAGC,iBAAgB,EAAGC,YAAW,EAAGC,WAAU,EAAGC,YAAW,EAAGC,SAAQ,EAAGC,OAAM,EAAGC,SAAQ,EAAGC,SAAQ,EAAGC,QAAO,EAAGC,QAAO,EAClfC,MAAK,EAAGC,aAAY,EAAGC,cAAa,EAAGC,aAAY,EAAGC,iBAAgB,EAAGC,kBAAiB,EAAGC,kBAAiB,EAAGC,eAAc,EAAGC,aAAY,GAAIC,GAAG,CAAC,SAAS,KAAK,MAAM,KAA6H,SAASC,GAAGzN,EAAEC,EAAEC,GAAG,OAAO,MAAMD,GAAG,mBAAmBA,GAAG,KAAKA,EAAE,GAAGC,GAAG,kBAAkBD,GAAG,IAAIA,GAAG2K,GAAGzJ,eAAenB,IAAI4K,GAAG5K,IAAI,GAAGC,GAAGkF,OAAOlF,EAAE,IAAI,CACzb,SAASyN,GAAG1N,EAAEC,GAAa,IAAI,IAAIC,KAAlBF,EAAEA,EAAE2N,MAAmB1N,EAAE,GAAGA,EAAEkB,eAAejB,GAAG,CAAC,IAAIsB,EAAE,IAAItB,EAAE0N,QAAQ,MAAMnM,EAAEgM,GAAGvN,EAAED,EAAEC,GAAGsB,GAAG,UAAUtB,IAAIA,EAAE,YAAYsB,EAAExB,EAAE6N,YAAY3N,EAAEuB,GAAGzB,EAAEE,GAAGuB,CAAC,CAAC,CADYR,OAAO6M,KAAKlD,IAAIrI,SAAQ,SAASvC,GAAGwN,GAAGjL,SAAQ,SAAStC,GAAGA,EAAEA,EAAED,EAAE+N,OAAO,GAAGpL,cAAc3C,EAAEgO,UAAU,GAAGpD,GAAG3K,GAAG2K,GAAG5K,EAAE,GAAE,IAChI,IAAIiO,GAAGnJ,EAAE,CAACoJ,UAAS,GAAI,CAACC,MAAK,EAAGC,MAAK,EAAGC,IAAG,EAAGC,KAAI,EAAGC,OAAM,EAAGC,IAAG,EAAGC,KAAI,EAAGC,OAAM,EAAGC,QAAO,EAAGC,MAAK,EAAGC,MAAK,EAAGC,OAAM,EAAGC,QAAO,EAAGC,OAAM,EAAGC,KAAI,IAClT,SAASC,GAAGlP,EAAEC,GAAG,GAAGA,EAAE,CAAC,GAAGgO,GAAGjO,KAAK,MAAMC,EAAEqJ,UAAU,MAAMrJ,EAAEoJ,yBAAyB,MAAMpE,MAAMlF,EAAE,IAAIC,IAAI,GAAG,MAAMC,EAAEoJ,wBAAwB,CAAC,GAAG,MAAMpJ,EAAEqJ,SAAS,MAAMrE,MAAMlF,EAAE,KAAK,GAAG,kBAAkBE,EAAEoJ,2BAA2B,WAAWpJ,EAAEoJ,yBAAyB,MAAMpE,MAAMlF,EAAE,IAAK,CAAC,GAAG,MAAME,EAAE0N,OAAO,kBAAkB1N,EAAE0N,MAAM,MAAM1I,MAAMlF,EAAE,IAAK,CAAC,CAClW,SAASoP,GAAGnP,EAAEC,GAAG,IAAI,IAAID,EAAE4N,QAAQ,KAAK,MAAM,kBAAkB3N,EAAEmP,GAAG,OAAOpP,GAAG,IAAK,iBAAiB,IAAK,gBAAgB,IAAK,YAAY,IAAK,gBAAgB,IAAK,gBAAgB,IAAK,mBAAmB,IAAK,iBAAiB,IAAK,gBAAgB,OAAM,EAAG,QAAQ,OAAM,EAAG,CAAC,IAAIqP,GAAG,KAAK,SAASC,GAAGtP,GAA6F,OAA1FA,EAAEA,EAAEuP,QAAQvP,EAAEwP,YAAY3O,QAAS4O,0BAA0BzP,EAAEA,EAAEyP,yBAAgC,IAAIzP,EAAE0K,SAAS1K,EAAE0P,WAAW1P,CAAC,CAAC,IAAI2P,GAAG,KAAKC,GAAG,KAAKC,GAAG,KACpc,SAASC,GAAG9P,GAAG,GAAGA,EAAE+P,GAAG/P,GAAG,CAAC,GAAG,oBAAoB2P,GAAG,MAAM1K,MAAMlF,EAAE,MAAM,IAAIE,EAAED,EAAEgQ,UAAU/P,IAAIA,EAAEgQ,GAAGhQ,GAAG0P,GAAG3P,EAAEgQ,UAAUhQ,EAAEkC,KAAKjC,GAAG,CAAC,CAAC,SAASiQ,GAAGlQ,GAAG4P,GAAGC,GAAGA,GAAGM,KAAKnQ,GAAG6P,GAAG,CAAC7P,GAAG4P,GAAG5P,CAAC,CAAC,SAASoQ,KAAK,GAAGR,GAAG,CAAC,IAAI5P,EAAE4P,GAAG3P,EAAE4P,GAAoB,GAAjBA,GAAGD,GAAG,KAAKE,GAAG9P,GAAMC,EAAE,IAAID,EAAE,EAAEA,EAAEC,EAAEG,OAAOJ,IAAI8P,GAAG7P,EAAED,GAAG,CAAC,CAAC,SAASqQ,GAAGrQ,EAAEC,GAAG,OAAOD,EAAEC,EAAE,CAAC,SAASqQ,KAAK,CAAC,IAAIC,IAAG,EAAG,SAASC,GAAGxQ,EAAEC,EAAEC,GAAG,GAAGqQ,GAAG,OAAOvQ,EAAEC,EAAEC,GAAGqQ,IAAG,EAAG,IAAI,OAAOF,GAAGrQ,EAAEC,EAAEC,EAAE,CAAC,QAAWqQ,IAAG,GAAG,OAAOX,IAAI,OAAOC,MAAGS,KAAKF,KAAI,CAAC,CAChb,SAASK,GAAGzQ,EAAEC,GAAG,IAAIC,EAAEF,EAAEgQ,UAAU,GAAG,OAAO9P,EAAE,OAAO,KAAK,IAAIsB,EAAEyO,GAAG/P,GAAG,GAAG,OAAOsB,EAAE,OAAO,KAAKtB,EAAEsB,EAAEvB,GAAGD,EAAE,OAAOC,GAAG,IAAK,UAAU,IAAK,iBAAiB,IAAK,gBAAgB,IAAK,uBAAuB,IAAK,cAAc,IAAK,qBAAqB,IAAK,cAAc,IAAK,qBAAqB,IAAK,YAAY,IAAK,mBAAmB,IAAK,gBAAgBuB,GAAGA,EAAE2H,YAAqB3H,IAAI,YAAbxB,EAAEA,EAAEkC,OAAuB,UAAUlC,GAAG,WAAWA,GAAG,aAAaA,IAAIA,GAAGwB,EAAE,MAAMxB,EAAE,QAAQA,GAAE,EAAG,GAAGA,EAAE,OAAO,KAAK,GAAGE,GAAG,oBACleA,EAAE,MAAM+E,MAAMlF,EAAE,IAAIE,SAASC,IAAI,OAAOA,CAAC,CAAC,IAAIwQ,IAAG,EAAG,GAAG9P,EAAG,IAAI,IAAI+P,GAAG,CAAC,EAAE1P,OAAOuE,eAAemL,GAAG,UAAU,CAACzJ,IAAI,WAAWwJ,IAAG,CAAE,IAAI7P,OAAO+P,iBAAiB,OAAOD,GAAGA,IAAI9P,OAAOgQ,oBAAoB,OAAOF,GAAGA,GAAG,CAAC,MAAM3Q,IAAG0Q,IAAG,CAAE,CAAC,SAASI,GAAG9Q,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,EAAEkE,EAAEC,GAAG,IAAIF,EAAEiD,MAAM3H,UAAU2B,MAAMI,KAAK9C,UAAU,GAAG,IAAIF,EAAE8Q,MAAM7Q,EAAE0F,EAAE,CAAC,MAAMoL,GAAGpP,KAAKqP,QAAQD,EAAE,CAAC,CAAC,IAAIE,IAAG,EAAGC,GAAG,KAAKC,IAAG,EAAGC,GAAG,KAAKC,GAAG,CAACL,QAAQ,SAASjR,GAAGkR,IAAG,EAAGC,GAAGnR,CAAC,GAAG,SAASuR,GAAGvR,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,EAAEkE,EAAEC,GAAGoL,IAAG,EAAGC,GAAG,KAAKL,GAAGC,MAAMO,GAAGnR,UAAU,CACjW,SAASqR,GAAGxR,GAAG,IAAIC,EAAED,EAAEE,EAAEF,EAAE,GAAGA,EAAEyR,UAAU,KAAKxR,EAAEyR,QAAQzR,EAAEA,EAAEyR,WAAW,CAAC1R,EAAEC,EAAE,GAAO,KAAa,MAAjBA,EAAED,GAAS2R,SAAczR,EAAED,EAAEyR,QAAQ1R,EAAEC,EAAEyR,aAAa1R,EAAE,CAAC,OAAO,IAAIC,EAAEkG,IAAIjG,EAAE,IAAI,CAAC,SAAS0R,GAAG5R,GAAG,GAAG,KAAKA,EAAEmG,IAAI,CAAC,IAAIlG,EAAED,EAAE6R,cAAsE,GAAxD,OAAO5R,IAAkB,QAAdD,EAAEA,EAAEyR,aAAqBxR,EAAED,EAAE6R,gBAAmB,OAAO5R,EAAE,OAAOA,EAAE6R,UAAU,CAAC,OAAO,IAAI,CAAC,SAASC,GAAG/R,GAAG,GAAGwR,GAAGxR,KAAKA,EAAE,MAAMiF,MAAMlF,EAAE,KAAM,CAE1S,SAASiS,GAAGhS,GAAW,OAAO,QAAfA,EADtN,SAAYA,GAAG,IAAIC,EAAED,EAAEyR,UAAU,IAAIxR,EAAE,CAAS,GAAG,QAAXA,EAAEuR,GAAGxR,IAAe,MAAMiF,MAAMlF,EAAE,MAAM,OAAOE,IAAID,EAAE,KAAKA,CAAC,CAAC,IAAI,IAAIE,EAAEF,EAAEwB,EAAEvB,IAAI,CAAC,IAAIwB,EAAEvB,EAAEwR,OAAO,GAAG,OAAOjQ,EAAE,MAAM,IAAIC,EAAED,EAAEgQ,UAAU,GAAG,OAAO/P,EAAE,CAAY,GAAG,QAAdF,EAAEC,EAAEiQ,QAAmB,CAACxR,EAAEsB,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAGC,EAAEwQ,QAAQvQ,EAAEuQ,MAAM,CAAC,IAAIvQ,EAAED,EAAEwQ,MAAMvQ,GAAG,CAAC,GAAGA,IAAIxB,EAAE,OAAO6R,GAAGtQ,GAAGzB,EAAE,GAAG0B,IAAIF,EAAE,OAAOuQ,GAAGtQ,GAAGxB,EAAEyB,EAAEA,EAAEwQ,OAAO,CAAC,MAAMjN,MAAMlF,EAAE,KAAM,CAAC,GAAGG,EAAEwR,SAASlQ,EAAEkQ,OAAOxR,EAAEuB,EAAED,EAAEE,MAAM,CAAC,IAAI,IAAIC,GAAE,EAAGkE,EAAEpE,EAAEwQ,MAAMpM,GAAG,CAAC,GAAGA,IAAI3F,EAAE,CAACyB,GAAE,EAAGzB,EAAEuB,EAAED,EAAEE,EAAE,KAAK,CAAC,GAAGmE,IAAIrE,EAAE,CAACG,GAAE,EAAGH,EAAEC,EAAEvB,EAAEwB,EAAE,KAAK,CAACmE,EAAEA,EAAEqM,OAAO,CAAC,IAAIvQ,EAAE,CAAC,IAAIkE,EAAEnE,EAAEuQ,MAAMpM,GAAG,CAAC,GAAGA,IAC5f3F,EAAE,CAACyB,GAAE,EAAGzB,EAAEwB,EAAEF,EAAEC,EAAE,KAAK,CAAC,GAAGoE,IAAIrE,EAAE,CAACG,GAAE,EAAGH,EAAEE,EAAExB,EAAEuB,EAAE,KAAK,CAACoE,EAAEA,EAAEqM,OAAO,CAAC,IAAIvQ,EAAE,MAAMsD,MAAMlF,EAAE,KAAM,CAAC,CAAC,GAAGG,EAAEuR,YAAYjQ,EAAE,MAAMyD,MAAMlF,EAAE,KAAM,CAAC,GAAG,IAAIG,EAAEiG,IAAI,MAAMlB,MAAMlF,EAAE,MAAM,OAAOG,EAAE8P,UAAUmC,UAAUjS,EAAEF,EAAEC,CAAC,CAAkBmS,CAAGpS,IAAmBqS,GAAGrS,GAAG,IAAI,CAAC,SAASqS,GAAGrS,GAAG,GAAG,IAAIA,EAAEmG,KAAK,IAAInG,EAAEmG,IAAI,OAAOnG,EAAE,IAAIA,EAAEA,EAAEiS,MAAM,OAAOjS,GAAG,CAAC,IAAIC,EAAEoS,GAAGrS,GAAG,GAAG,OAAOC,EAAE,OAAOA,EAAED,EAAEA,EAAEkS,OAAO,CAAC,OAAO,IAAI,CAC1X,IAAII,GAAGxS,EAAGyS,0BAA0BC,GAAG1S,EAAG2S,wBAAwBC,GAAG5S,EAAG6S,qBAAqBC,GAAG9S,EAAG+S,sBAAsBC,GAAEhT,EAAGiT,aAAaC,GAAGlT,EAAGmT,iCAAiCC,GAAGpT,EAAGqT,2BAA2BC,GAAGtT,EAAGuT,8BAA8BC,GAAGxT,EAAGyT,wBAAwBC,GAAG1T,EAAG2T,qBAAqBC,GAAG5T,EAAG6T,sBAAsBC,GAAG,KAAKC,GAAG,KACvV,IAAIC,GAAGC,KAAKC,MAAMD,KAAKC,MAAiC,SAAYhU,GAAU,OAAPA,KAAK,EAAS,IAAIA,EAAE,GAAG,IAAIiU,GAAGjU,GAAGkU,GAAG,GAAG,CAAC,EAA/ED,GAAGF,KAAKI,IAAID,GAAGH,KAAKK,IAA4D,IAAIC,GAAG,GAAGC,GAAG,QAC7H,SAASC,GAAGvU,GAAG,OAAOA,GAAGA,GAAG,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,OAAS,QAAFA,EAAU,KAAK,QAAQ,KAAK,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,OAAS,UAAFA,EAAY,KAAK,UAAU,OAAO,UAAU,KAAK,UAAU,OAAO,UAAU,KAAK,UAAU,OAAO,UAAU,KAAK,WAAW,OAAO,WACzgB,QAAQ,OAAOA,EAAE,CAAC,SAASwU,GAAGxU,EAAEC,GAAG,IAAIC,EAAEF,EAAEyU,aAAa,GAAG,IAAIvU,EAAE,OAAO,EAAE,IAAIsB,EAAE,EAAEC,EAAEzB,EAAE0U,eAAehT,EAAE1B,EAAE2U,YAAYhT,EAAI,UAAFzB,EAAY,GAAG,IAAIyB,EAAE,CAAC,IAAIkE,EAAElE,GAAGF,EAAE,IAAIoE,EAAErE,EAAE+S,GAAG1O,GAAS,KAALnE,GAAGC,KAAUH,EAAE+S,GAAG7S,GAAI,MAAa,KAAPC,EAAEzB,GAAGuB,GAAQD,EAAE+S,GAAG5S,GAAG,IAAID,IAAIF,EAAE+S,GAAG7S,IAAI,GAAG,IAAIF,EAAE,OAAO,EAAE,GAAG,IAAIvB,GAAGA,IAAIuB,GAAG,KAAKvB,EAAEwB,MAAKA,EAAED,GAAGA,KAAEE,EAAEzB,GAAGA,IAAQ,KAAKwB,GAAG,KAAO,QAAFC,IAAY,OAAOzB,EAA0C,GAAxC,KAAO,EAAFuB,KAAOA,GAAK,GAAFtB,GAA4B,KAAtBD,EAAED,EAAE4U,gBAAwB,IAAI5U,EAAEA,EAAE6U,cAAc5U,GAAGuB,EAAE,EAAEvB,GAAcwB,EAAE,IAAbvB,EAAE,GAAG4T,GAAG7T,IAAUuB,GAAGxB,EAAEE,GAAGD,IAAIwB,EAAE,OAAOD,CAAC,CACvc,SAASsT,GAAG9U,EAAEC,GAAG,OAAOD,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAOC,EAAE,IAAI,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,OAAOA,EAAE,IAAuJ,QAAQ,OAAO,EAAE,CACrN,SAAS8U,GAAG/U,GAAgC,OAAO,KAApCA,GAAkB,WAAhBA,EAAEyU,cAAsCzU,EAAI,WAAFA,EAAa,WAAW,CAAC,CAAC,SAASgV,KAAK,IAAIhV,EAAEqU,GAAoC,OAA1B,KAAQ,SAAfA,KAAK,MAAqBA,GAAG,IAAWrU,CAAC,CAAC,SAASiV,GAAGjV,GAAG,IAAI,IAAIC,EAAE,GAAGC,EAAE,EAAE,GAAGA,EAAEA,IAAID,EAAEkQ,KAAKnQ,GAAG,OAAOC,CAAC,CAC3a,SAASiV,GAAGlV,EAAEC,EAAEC,GAAGF,EAAEyU,cAAcxU,EAAE,YAAYA,IAAID,EAAE0U,eAAe,EAAE1U,EAAE2U,YAAY,IAAG3U,EAAEA,EAAEmV,YAAWlV,EAAE,GAAG6T,GAAG7T,IAAQC,CAAC,CACzH,SAASkV,GAAGpV,EAAEC,GAAG,IAAIC,EAAEF,EAAE4U,gBAAgB3U,EAAE,IAAID,EAAEA,EAAE6U,cAAc3U,GAAG,CAAC,IAAIsB,EAAE,GAAGsS,GAAG5T,GAAGuB,EAAE,GAAGD,EAAEC,EAAExB,EAAED,EAAEwB,GAAGvB,IAAID,EAAEwB,IAAIvB,GAAGC,IAAIuB,CAAC,CAAC,CAAC,IAAI4T,GAAE,EAAE,SAASC,GAAGtV,GAAS,OAAO,GAAbA,IAAIA,GAAa,EAAEA,EAAE,KAAO,UAAFA,GAAa,GAAG,UAAU,EAAE,CAAC,CAAC,IAAIuV,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,IAAG,EAAGC,GAAG,GAAGC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,IAAIC,GAAG,IAAID,IAAIE,GAAG,GAAGC,GAAG,6PAA6P/T,MAAM,KAChiB,SAASgU,GAAGtW,EAAEC,GAAG,OAAOD,GAAG,IAAK,UAAU,IAAK,WAAW8V,GAAG,KAAK,MAAM,IAAK,YAAY,IAAK,YAAYC,GAAG,KAAK,MAAM,IAAK,YAAY,IAAK,WAAWC,GAAG,KAAK,MAAM,IAAK,cAAc,IAAK,aAAaC,GAAGM,OAAOtW,EAAEuW,WAAW,MAAM,IAAK,oBAAoB,IAAK,qBAAqBL,GAAGI,OAAOtW,EAAEuW,WAAW,CACnT,SAASC,GAAGzW,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,GAAG,OAAG,OAAO1B,GAAGA,EAAE0W,cAAchV,GAAS1B,EAAE,CAAC2W,UAAU1W,EAAE2W,aAAa1W,EAAE2W,iBAAiBrV,EAAEkV,YAAYhV,EAAEoV,iBAAiB,CAACrV,IAAI,OAAOxB,IAAY,QAARA,EAAE8P,GAAG9P,KAAauV,GAAGvV,IAAID,IAAEA,EAAE6W,kBAAkBrV,EAAEvB,EAAED,EAAE8W,iBAAiB,OAAOrV,IAAI,IAAIxB,EAAE2N,QAAQnM,IAAIxB,EAAEkQ,KAAK1O,GAAUzB,EAAC,CAEpR,SAAS+W,GAAG/W,GAAG,IAAIC,EAAE+W,GAAGhX,EAAEuP,QAAQ,GAAG,OAAOtP,EAAE,CAAC,IAAIC,EAAEsR,GAAGvR,GAAG,GAAG,OAAOC,EAAE,GAAW,MAARD,EAAEC,EAAEiG,MAAY,GAAW,QAARlG,EAAE2R,GAAG1R,IAA4D,OAA/CF,EAAE2W,UAAU1W,OAAE0V,GAAG3V,EAAEiX,UAAS,WAAWxB,GAAGvV,EAAE,SAAgB,GAAG,IAAID,GAAGC,EAAE8P,UAAUmC,QAAQN,cAAcqF,aAAmE,YAArDlX,EAAE2W,UAAU,IAAIzW,EAAEiG,IAAIjG,EAAE8P,UAAUmH,cAAc,KAAY,CAACnX,EAAE2W,UAAU,IAAI,CAClT,SAASS,GAAGpX,GAAG,GAAG,OAAOA,EAAE2W,UAAU,OAAM,EAAG,IAAI,IAAI1W,EAAED,EAAE8W,iBAAiB,EAAE7W,EAAEG,QAAQ,CAAC,IAAIF,EAAEmX,GAAGrX,EAAE4W,aAAa5W,EAAE6W,iBAAiB5W,EAAE,GAAGD,EAAE0W,aAAa,GAAG,OAAOxW,EAAiG,OAAe,QAARD,EAAE8P,GAAG7P,KAAasV,GAAGvV,GAAGD,EAAE2W,UAAUzW,GAAE,EAA3H,IAAIsB,EAAE,IAAtBtB,EAAEF,EAAE0W,aAAwBzP,YAAY/G,EAAEgC,KAAKhC,GAAGmP,GAAG7N,EAAEtB,EAAEqP,OAAO+H,cAAc9V,GAAG6N,GAAG,KAA0DpP,EAAEsX,OAAO,CAAC,OAAM,CAAE,CAAC,SAASC,GAAGxX,EAAEC,EAAEC,GAAGkX,GAAGpX,IAAIE,EAAEqW,OAAOtW,EAAE,CAAC,SAASwX,KAAK7B,IAAG,EAAG,OAAOE,IAAIsB,GAAGtB,MAAMA,GAAG,MAAM,OAAOC,IAAIqB,GAAGrB,MAAMA,GAAG,MAAM,OAAOC,IAAIoB,GAAGpB,MAAMA,GAAG,MAAMC,GAAG1T,QAAQiV,IAAIrB,GAAG5T,QAAQiV,GAAG,CACnf,SAASE,GAAG1X,EAAEC,GAAGD,EAAE2W,YAAY1W,IAAID,EAAE2W,UAAU,KAAKf,KAAKA,IAAG,EAAG9V,EAAGyS,0BAA0BzS,EAAGyT,wBAAwBkE,KAAK,CAC5H,SAASE,GAAG3X,GAAG,SAASC,EAAEA,GAAG,OAAOyX,GAAGzX,EAAED,EAAE,CAAC,GAAG,EAAE6V,GAAGzV,OAAO,CAACsX,GAAG7B,GAAG,GAAG7V,GAAG,IAAI,IAAIE,EAAE,EAAEA,EAAE2V,GAAGzV,OAAOF,IAAI,CAAC,IAAIsB,EAAEqU,GAAG3V,GAAGsB,EAAEmV,YAAY3W,IAAIwB,EAAEmV,UAAU,KAAK,CAAC,CAAyF,IAAxF,OAAOb,IAAI4B,GAAG5B,GAAG9V,GAAG,OAAO+V,IAAI2B,GAAG3B,GAAG/V,GAAG,OAAOgW,IAAI0B,GAAG1B,GAAGhW,GAAGiW,GAAG1T,QAAQtC,GAAGkW,GAAG5T,QAAQtC,GAAOC,EAAE,EAAEA,EAAEkW,GAAGhW,OAAOF,KAAIsB,EAAE4U,GAAGlW,IAAKyW,YAAY3W,IAAIwB,EAAEmV,UAAU,MAAM,KAAK,EAAEP,GAAGhW,QAAiB,QAARF,EAAEkW,GAAG,IAAYO,WAAYI,GAAG7W,GAAG,OAAOA,EAAEyW,WAAWP,GAAGmB,OAAO,CAAC,IAAIK,GAAGnU,EAAGoU,wBAAwBC,IAAG,EAC5a,SAASC,GAAG/X,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAE4T,GAAE3T,EAAEkW,GAAGI,WAAWJ,GAAGI,WAAW,KAAK,IAAI3C,GAAE,EAAE4C,GAAGjY,EAAEC,EAAEC,EAAEsB,EAAE,CAAC,QAAQ6T,GAAE5T,EAAEmW,GAAGI,WAAWtW,CAAC,CAAC,CAAC,SAASwW,GAAGlY,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAE4T,GAAE3T,EAAEkW,GAAGI,WAAWJ,GAAGI,WAAW,KAAK,IAAI3C,GAAE,EAAE4C,GAAGjY,EAAEC,EAAEC,EAAEsB,EAAE,CAAC,QAAQ6T,GAAE5T,EAAEmW,GAAGI,WAAWtW,CAAC,CAAC,CACjO,SAASuW,GAAGjY,EAAEC,EAAEC,EAAEsB,GAAG,GAAGsW,GAAG,CAAC,IAAIrW,EAAE4V,GAAGrX,EAAEC,EAAEC,EAAEsB,GAAG,GAAG,OAAOC,EAAE0W,GAAGnY,EAAEC,EAAEuB,EAAE4W,GAAGlY,GAAGoW,GAAGtW,EAAEwB,QAAQ,GANtF,SAAYxB,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,OAAOxB,GAAG,IAAK,UAAU,OAAO6V,GAAGW,GAAGX,GAAG9V,EAAEC,EAAEC,EAAEsB,EAAEC,IAAG,EAAG,IAAK,YAAY,OAAOsU,GAAGU,GAAGV,GAAG/V,EAAEC,EAAEC,EAAEsB,EAAEC,IAAG,EAAG,IAAK,YAAY,OAAOuU,GAAGS,GAAGT,GAAGhW,EAAEC,EAAEC,EAAEsB,EAAEC,IAAG,EAAG,IAAK,cAAc,IAAIC,EAAED,EAAE+U,UAAkD,OAAxCP,GAAGxQ,IAAI/D,EAAE+U,GAAGR,GAAG/O,IAAIxF,IAAI,KAAK1B,EAAEC,EAAEC,EAAEsB,EAAEC,KAAU,EAAG,IAAK,oBAAoB,OAAOC,EAAED,EAAE+U,UAAUL,GAAG1Q,IAAI/D,EAAE+U,GAAGN,GAAGjP,IAAIxF,IAAI,KAAK1B,EAAEC,EAAEC,EAAEsB,EAAEC,KAAI,EAAG,OAAM,CAAE,CAM1Q4W,CAAG5W,EAAEzB,EAAEC,EAAEC,EAAEsB,GAAGA,EAAE8W,uBAAuB,GAAGhC,GAAGtW,EAAEwB,GAAK,EAAFvB,IAAM,EAAEoW,GAAGzI,QAAQ5N,GAAG,CAAC,KAAK,OAAOyB,GAAG,CAAC,IAAIC,EAAEqO,GAAGtO,GAA0D,GAAvD,OAAOC,GAAG6T,GAAG7T,GAAiB,QAAdA,EAAE2V,GAAGrX,EAAEC,EAAEC,EAAEsB,KAAa2W,GAAGnY,EAAEC,EAAEuB,EAAE4W,GAAGlY,GAAMwB,IAAID,EAAE,MAAMA,EAAEC,CAAC,CAAC,OAAOD,GAAGD,EAAE8W,iBAAiB,MAAMH,GAAGnY,EAAEC,EAAEuB,EAAE,KAAKtB,EAAE,CAAC,CAAC,IAAIkY,GAAG,KACpU,SAASf,GAAGrX,EAAEC,EAAEC,EAAEsB,GAA2B,GAAxB4W,GAAG,KAAwB,QAAXpY,EAAEgX,GAAVhX,EAAEsP,GAAG9N,KAAuB,GAAW,QAARvB,EAAEuR,GAAGxR,IAAYA,EAAE,UAAU,GAAW,MAARE,EAAED,EAAEkG,KAAW,CAAS,GAAG,QAAXnG,EAAE4R,GAAG3R,IAAe,OAAOD,EAAEA,EAAE,IAAI,MAAM,GAAG,IAAIE,EAAE,CAAC,GAAGD,EAAE+P,UAAUmC,QAAQN,cAAcqF,aAAa,OAAO,IAAIjX,EAAEkG,IAAIlG,EAAE+P,UAAUmH,cAAc,KAAKnX,EAAE,IAAI,MAAMC,IAAID,IAAIA,EAAE,MAAW,OAALoY,GAAGpY,EAAS,IAAI,CAC7S,SAASuY,GAAGvY,GAAG,OAAOA,GAAG,IAAK,SAAS,IAAK,QAAQ,IAAK,QAAQ,IAAK,cAAc,IAAK,OAAO,IAAK,MAAM,IAAK,WAAW,IAAK,WAAW,IAAK,UAAU,IAAK,YAAY,IAAK,OAAO,IAAK,UAAU,IAAK,WAAW,IAAK,QAAQ,IAAK,UAAU,IAAK,UAAU,IAAK,WAAW,IAAK,QAAQ,IAAK,YAAY,IAAK,UAAU,IAAK,QAAQ,IAAK,QAAQ,IAAK,OAAO,IAAK,gBAAgB,IAAK,cAAc,IAAK,YAAY,IAAK,aAAa,IAAK,QAAQ,IAAK,SAAS,IAAK,SAAS,IAAK,SAAS,IAAK,cAAc,IAAK,WAAW,IAAK,aAAa,IAAK,eAAe,IAAK,SAAS,IAAK,kBAAkB,IAAK,YAAY,IAAK,mBAAmB,IAAK,iBAAiB,IAAK,oBAAoB,IAAK,aAAa,IAAK,YAAY,IAAK,cAAc,IAAK,OAAO,IAAK,mBAAmB,IAAK,QAAQ,IAAK,aAAa,IAAK,WAAW,IAAK,SAAS,IAAK,cAAc,OAAO,EAAE,IAAK,OAAO,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,cAAc,IAAK,aAAa,IAAK,cAAc,IAAK,SAAS,IAAK,SAAS,IAAK,YAAY,IAAK,QAAQ,IAAK,aAAa,IAAK,aAAa,IAAK,eAAe,IAAK,eAAe,OAAO,EACpqC,IAAK,UAAU,OAAOgT,MAAM,KAAKE,GAAG,OAAO,EAAE,KAAKE,GAAG,OAAO,EAAE,KAAKE,GAAG,KAAKE,GAAG,OAAO,GAAG,KAAKE,GAAG,OAAO,UAAU,QAAQ,OAAO,GAAG,QAAQ,OAAO,GAAG,CAAC,IAAI8E,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAK,SAASC,KAAK,GAAGD,GAAG,OAAOA,GAAG,IAAI1Y,EAAkBwB,EAAhBvB,EAAEwY,GAAGvY,EAAED,EAAEG,OAASqB,EAAE,UAAU+W,GAAGA,GAAG7Q,MAAM6Q,GAAG9O,YAAYhI,EAAED,EAAErB,OAAO,IAAIJ,EAAE,EAAEA,EAAEE,GAAGD,EAAED,KAAKyB,EAAEzB,GAAGA,KAAK,IAAI2B,EAAEzB,EAAEF,EAAE,IAAIwB,EAAE,EAAEA,GAAGG,GAAG1B,EAAEC,EAAEsB,KAAKC,EAAEC,EAAEF,GAAGA,KAAK,OAAOkX,GAAGjX,EAAEoB,MAAM7C,EAAE,EAAEwB,EAAE,EAAEA,OAAE,EAAO,CACxY,SAASoX,GAAG5Y,GAAG,IAAIC,EAAED,EAAE6Y,QAA+E,MAAvE,aAAa7Y,EAAgB,KAAbA,EAAEA,EAAE8Y,WAAgB,KAAK7Y,IAAID,EAAE,IAAKA,EAAEC,EAAE,KAAKD,IAAIA,EAAE,IAAW,IAAIA,GAAG,KAAKA,EAAEA,EAAE,CAAC,CAAC,SAAS+Y,KAAK,OAAM,CAAE,CAAC,SAASC,KAAK,OAAM,CAAE,CAC5K,SAASC,GAAGjZ,GAAG,SAASC,EAAEA,EAAEuB,EAAEC,EAAEC,EAAEC,GAA6G,IAAI,IAAIzB,KAAlH0B,KAAKsX,WAAWjZ,EAAE2B,KAAKuX,YAAY1X,EAAEG,KAAKM,KAAKV,EAAEI,KAAK8U,YAAYhV,EAAEE,KAAK2N,OAAO5N,EAAEC,KAAKwX,cAAc,KAAkBpZ,EAAEA,EAAEmB,eAAejB,KAAKD,EAAED,EAAEE,GAAG0B,KAAK1B,GAAGD,EAAEA,EAAEyB,GAAGA,EAAExB,IAAgI,OAA5H0B,KAAKyX,oBAAoB,MAAM3X,EAAE4X,iBAAiB5X,EAAE4X,kBAAiB,IAAK5X,EAAE6X,aAAaR,GAAGC,GAAGpX,KAAK4X,qBAAqBR,GAAUpX,IAAI,CAC9E,OAD+EkD,EAAE7E,EAAEiB,UAAU,CAACuY,eAAe,WAAW7X,KAAK0X,kBAAiB,EAAG,IAAItZ,EAAE4B,KAAK8U,YAAY1W,IAAIA,EAAEyZ,eAAezZ,EAAEyZ,iBAAiB,mBAAmBzZ,EAAEuZ,cAC7evZ,EAAEuZ,aAAY,GAAI3X,KAAKyX,mBAAmBN,GAAG,EAAET,gBAAgB,WAAW,IAAItY,EAAE4B,KAAK8U,YAAY1W,IAAIA,EAAEsY,gBAAgBtY,EAAEsY,kBAAkB,mBAAmBtY,EAAE0Z,eAAe1Z,EAAE0Z,cAAa,GAAI9X,KAAK4X,qBAAqBT,GAAG,EAAEY,QAAQ,WAAW,EAAEC,aAAab,KAAY9Y,CAAC,CACjR,IAAoL4Z,GAAGC,GAAGC,GAAtLC,GAAG,CAACC,WAAW,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,SAASpa,GAAG,OAAOA,EAAEoa,WAAWC,KAAKC,KAAK,EAAEhB,iBAAiB,EAAEiB,UAAU,GAAGC,GAAGvB,GAAGe,IAAIS,GAAG3V,EAAE,CAAC,EAAEkV,GAAG,CAACU,KAAK,EAAEC,OAAO,IAAIC,GAAG3B,GAAGwB,IAAaI,GAAG/V,EAAE,CAAC,EAAE2V,GAAG,CAACK,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,iBAAiBC,GAAGC,OAAO,EAAEC,QAAQ,EAAEC,cAAc,SAAS5b,GAAG,YAAO,IAASA,EAAE4b,cAAc5b,EAAE6b,cAAc7b,EAAEwP,WAAWxP,EAAE8b,UAAU9b,EAAE6b,YAAY7b,EAAE4b,aAAa,EAAEG,UAAU,SAAS/b,GAAG,MAAG,cAC3eA,EAASA,EAAE+b,WAAU/b,IAAI+Z,KAAKA,IAAI,cAAc/Z,EAAEkC,MAAM2X,GAAG7Z,EAAE8a,QAAQf,GAAGe,QAAQhB,GAAG9Z,EAAE+a,QAAQhB,GAAGgB,SAASjB,GAAGD,GAAG,EAAEE,GAAG/Z,GAAU6Z,GAAE,EAAEmC,UAAU,SAAShc,GAAG,MAAM,cAAcA,EAAEA,EAAEgc,UAAUlC,EAAE,IAAImC,GAAGhD,GAAG4B,IAAiCqB,GAAGjD,GAA7BnU,EAAE,CAAC,EAAE+V,GAAG,CAACsB,aAAa,KAA4CC,GAAGnD,GAA9BnU,EAAE,CAAC,EAAE2V,GAAG,CAACmB,cAAc,KAA0ES,GAAGpD,GAA5DnU,EAAE,CAAC,EAAEkV,GAAG,CAACsC,cAAc,EAAEC,YAAY,EAAEC,cAAc,KAAcC,GAAG3X,EAAE,CAAC,EAAEkV,GAAG,CAAC0C,cAAc,SAAS1c,GAAG,MAAM,kBAAkBA,EAAEA,EAAE0c,cAAc7b,OAAO6b,aAAa,IAAIC,GAAG1D,GAAGwD,IAAyBG,GAAG3D,GAArBnU,EAAE,CAAC,EAAEkV,GAAG,CAAC6C,KAAK,KAAcC,GAAG,CAACC,IAAI,SACxfC,SAAS,IAAIC,KAAK,YAAYC,GAAG,UAAUC,MAAM,aAAaC,KAAK,YAAYC,IAAI,SAASC,IAAI,KAAKC,KAAK,cAAcC,KAAK,cAAcC,OAAO,aAAaC,gBAAgB,gBAAgBC,GAAG,CAAC,EAAE,YAAY,EAAE,MAAM,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,UAAU,GAAG,MAAM,GAAG,QAAQ,GAAG,WAAW,GAAG,SAAS,GAAG,IAAI,GAAG,SAAS,GAAG,WAAW,GAAG,MAAM,GAAG,OAAO,GAAG,YAAY,GAAG,UAAU,GAAG,aAAa,GAAG,YAAY,GAAG,SAAS,GAAG,SAAS,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KACtf,IAAI,KAAK,IAAI,KAAK,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,UAAU,IAAI,aAAa,IAAI,QAAQC,GAAG,CAACC,IAAI,SAASC,QAAQ,UAAUC,KAAK,UAAUC,MAAM,YAAY,SAASC,GAAGje,GAAG,IAAIC,EAAE2B,KAAK8U,YAAY,OAAOzW,EAAEub,iBAAiBvb,EAAEub,iBAAiBxb,MAAIA,EAAE4d,GAAG5d,OAAMC,EAAED,EAAK,CAAC,SAASyb,KAAK,OAAOwC,EAAE,CAChS,IAAIC,GAAGpZ,EAAE,CAAC,EAAE2V,GAAG,CAAC0D,IAAI,SAASne,GAAG,GAAGA,EAAEme,IAAI,CAAC,IAAIle,EAAE6c,GAAG9c,EAAEme,MAAMne,EAAEme,IAAI,GAAG,iBAAiBle,EAAE,OAAOA,CAAC,CAAC,MAAM,aAAaD,EAAEkC,KAAc,MAARlC,EAAE4Y,GAAG5Y,IAAU,QAAQoe,OAAOC,aAAare,GAAI,YAAYA,EAAEkC,MAAM,UAAUlC,EAAEkC,KAAKyb,GAAG3d,EAAE6Y,UAAU,eAAe,EAAE,EAAEyF,KAAK,EAAEC,SAAS,EAAEnD,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAEiD,OAAO,EAAEC,OAAO,EAAEjD,iBAAiBC,GAAG3C,SAAS,SAAS9Y,GAAG,MAAM,aAAaA,EAAEkC,KAAK0W,GAAG5Y,GAAG,CAAC,EAAE6Y,QAAQ,SAAS7Y,GAAG,MAAM,YAAYA,EAAEkC,MAAM,UAAUlC,EAAEkC,KAAKlC,EAAE6Y,QAAQ,CAAC,EAAE6F,MAAM,SAAS1e,GAAG,MAAM,aAC7eA,EAAEkC,KAAK0W,GAAG5Y,GAAG,YAAYA,EAAEkC,MAAM,UAAUlC,EAAEkC,KAAKlC,EAAE6Y,QAAQ,CAAC,IAAI8F,GAAG1F,GAAGiF,IAAiIU,GAAG3F,GAA7HnU,EAAE,CAAC,EAAE+V,GAAG,CAACrE,UAAU,EAAEqI,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEC,mBAAmB,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,YAAY,EAAEC,UAAU,KAAmIC,GAAGrG,GAArHnU,EAAE,CAAC,EAAE2V,GAAG,CAAC8E,QAAQ,EAAEC,cAAc,EAAEC,eAAe,EAAEnE,OAAO,EAAEC,QAAQ,EAAEH,QAAQ,EAAEC,SAAS,EAAEG,iBAAiBC,MAA0EiE,GAAGzG,GAA3DnU,EAAE,CAAC,EAAEkV,GAAG,CAAC/X,aAAa,EAAEsa,YAAY,EAAEC,cAAc,KAAcmD,GAAG7a,EAAE,CAAC,EAAE+V,GAAG,CAAC+E,OAAO,SAAS5f,GAAG,MAAM,WAAWA,EAAEA,EAAE4f,OAAO,gBAAgB5f,GAAGA,EAAE6f,YAAY,CAAC,EACnfC,OAAO,SAAS9f,GAAG,MAAM,WAAWA,EAAEA,EAAE8f,OAAO,gBAAgB9f,GAAGA,EAAE+f,YAAY,eAAe/f,GAAGA,EAAEggB,WAAW,CAAC,EAAEC,OAAO,EAAEC,UAAU,IAAIC,GAAGlH,GAAG0G,IAAIS,GAAG,CAAC,EAAE,GAAG,GAAG,IAAIC,GAAGzf,GAAI,qBAAqBC,OAAOyf,GAAG,KAAK1f,GAAI,iBAAiBE,WAAWwf,GAAGxf,SAASyf,cAAc,IAAIC,GAAG5f,GAAI,cAAcC,SAASyf,GAAGG,GAAG7f,KAAMyf,IAAIC,IAAI,EAAEA,IAAI,IAAIA,IAAII,GAAGtC,OAAOC,aAAa,IAAIsC,IAAG,EAC1W,SAASC,GAAG5gB,EAAEC,GAAG,OAAOD,GAAG,IAAK,QAAQ,OAAO,IAAIogB,GAAGxS,QAAQ3N,EAAE4Y,SAAS,IAAK,UAAU,OAAO,MAAM5Y,EAAE4Y,QAAQ,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,OAAM,EAAG,QAAQ,OAAM,EAAG,CAAC,SAASgI,GAAG7gB,GAAc,MAAM,kBAAjBA,EAAEA,EAAE2a,SAAkC,SAAS3a,EAAEA,EAAE6c,KAAK,IAAI,CAAC,IAAIiE,IAAG,EAE9Q,IAAIC,GAAG,CAACC,OAAM,EAAGC,MAAK,EAAGC,UAAS,EAAG,kBAAiB,EAAGC,OAAM,EAAGC,OAAM,EAAGC,QAAO,EAAGC,UAAS,EAAGC,OAAM,EAAGC,QAAO,EAAGC,KAAI,EAAGC,MAAK,EAAGC,MAAK,EAAGC,KAAI,EAAGC,MAAK,GAAI,SAASC,GAAG9hB,GAAG,IAAIC,EAAED,GAAGA,EAAE6G,UAAU7G,EAAE6G,SAASrE,cAAc,MAAM,UAAUvC,IAAI8gB,GAAG/gB,EAAEkC,MAAM,aAAajC,CAAO,CAAC,SAAS8hB,GAAG/hB,EAAEC,EAAEC,EAAEsB,GAAG0O,GAAG1O,GAAsB,GAAnBvB,EAAE+hB,GAAG/hB,EAAE,aAAgBG,SAASF,EAAE,IAAIsa,GAAG,WAAW,SAAS,KAAKta,EAAEsB,GAAGxB,EAAEmQ,KAAK,CAAC8R,MAAM/hB,EAAEgiB,UAAUjiB,IAAI,CAAC,IAAIkiB,GAAG,KAAKC,GAAG,KAAK,SAASC,GAAGriB,GAAGsiB,GAAGtiB,EAAE,EAAE,CAAC,SAASuiB,GAAGviB,GAAe,GAAGyH,EAAT+a,GAAGxiB,IAAY,OAAOA,CAAC,CACpe,SAASyiB,GAAGziB,EAAEC,GAAG,GAAG,WAAWD,EAAE,OAAOC,CAAC,CAAC,IAAIyiB,IAAG,EAAG,GAAG9hB,EAAG,CAAC,IAAI+hB,GAAG,GAAG/hB,EAAG,CAAC,IAAIgiB,GAAG,YAAY9hB,SAAS,IAAI8hB,GAAG,CAAC,IAAIC,GAAG/hB,SAASC,cAAc,OAAO8hB,GAAGxf,aAAa,UAAU,WAAWuf,GAAG,oBAAoBC,GAAGC,OAAO,CAACH,GAAGC,EAAE,MAAMD,IAAG,EAAGD,GAAGC,MAAM7hB,SAASyf,cAAc,EAAEzf,SAASyf,aAAa,CAAC,SAASwC,KAAKZ,KAAKA,GAAGa,YAAY,mBAAmBC,IAAIb,GAAGD,GAAG,KAAK,CAAC,SAASc,GAAGjjB,GAAG,GAAG,UAAUA,EAAEiC,cAAcsgB,GAAGH,IAAI,CAAC,IAAIniB,EAAE,GAAG8hB,GAAG9hB,EAAEmiB,GAAGpiB,EAAEsP,GAAGtP,IAAIwQ,GAAG6R,GAAGpiB,EAAE,CAAC,CAC/b,SAASijB,GAAGljB,EAAEC,EAAEC,GAAG,YAAYF,GAAG+iB,KAAUX,GAAGliB,GAARiiB,GAAGliB,GAAUkjB,YAAY,mBAAmBF,KAAK,aAAajjB,GAAG+iB,IAAI,CAAC,SAASK,GAAGpjB,GAAG,GAAG,oBAAoBA,GAAG,UAAUA,GAAG,YAAYA,EAAE,OAAOuiB,GAAGH,GAAG,CAAC,SAASiB,GAAGrjB,EAAEC,GAAG,GAAG,UAAUD,EAAE,OAAOuiB,GAAGtiB,EAAE,CAAC,SAASqjB,GAAGtjB,EAAEC,GAAG,GAAG,UAAUD,GAAG,WAAWA,EAAE,OAAOuiB,GAAGtiB,EAAE,CAAiE,IAAIsjB,GAAG,oBAAoBtiB,OAAOmO,GAAGnO,OAAOmO,GAA5G,SAAYpP,EAAEC,GAAG,OAAOD,IAAIC,IAAI,IAAID,GAAG,EAAEA,IAAI,EAAEC,IAAID,IAAIA,GAAGC,IAAIA,CAAC,EACtW,SAASujB,GAAGxjB,EAAEC,GAAG,GAAGsjB,GAAGvjB,EAAEC,GAAG,OAAM,EAAG,GAAG,kBAAkBD,GAAG,OAAOA,GAAG,kBAAkBC,GAAG,OAAOA,EAAE,OAAM,EAAG,IAAIC,EAAEe,OAAO6M,KAAK9N,GAAGwB,EAAEP,OAAO6M,KAAK7N,GAAG,GAAGC,EAAEE,SAASoB,EAAEpB,OAAO,OAAM,EAAG,IAAIoB,EAAE,EAAEA,EAAEtB,EAAEE,OAAOoB,IAAI,CAAC,IAAIC,EAAEvB,EAAEsB,GAAG,IAAIR,EAAGiC,KAAKhD,EAAEwB,KAAK8hB,GAAGvjB,EAAEyB,GAAGxB,EAAEwB,IAAI,OAAM,CAAE,CAAC,OAAM,CAAE,CAAC,SAASgiB,GAAGzjB,GAAG,KAAKA,GAAGA,EAAEmK,YAAYnK,EAAEA,EAAEmK,WAAW,OAAOnK,CAAC,CACtU,SAAS0jB,GAAG1jB,EAAEC,GAAG,IAAwBuB,EAApBtB,EAAEujB,GAAGzjB,GAAO,IAAJA,EAAE,EAAYE,GAAG,CAAC,GAAG,IAAIA,EAAEwK,SAAS,CAA0B,GAAzBlJ,EAAExB,EAAEE,EAAEwJ,YAAYtJ,OAAUJ,GAAGC,GAAGuB,GAAGvB,EAAE,MAAM,CAAC0jB,KAAKzjB,EAAE0jB,OAAO3jB,EAAED,GAAGA,EAAEwB,CAAC,CAACxB,EAAE,CAAC,KAAKE,GAAG,CAAC,GAAGA,EAAE2jB,YAAY,CAAC3jB,EAAEA,EAAE2jB,YAAY,MAAM7jB,CAAC,CAACE,EAAEA,EAAEwP,UAAU,CAACxP,OAAE,CAAM,CAACA,EAAEujB,GAAGvjB,EAAE,CAAC,CAAC,SAAS4jB,GAAG9jB,EAAEC,GAAG,SAAOD,IAAGC,KAAED,IAAIC,KAAKD,GAAG,IAAIA,EAAE0K,YAAYzK,GAAG,IAAIA,EAAEyK,SAASoZ,GAAG9jB,EAAEC,EAAEyP,YAAY,aAAa1P,EAAEA,EAAE+jB,SAAS9jB,KAAGD,EAAEgkB,4BAAwD,GAA7BhkB,EAAEgkB,wBAAwB/jB,KAAY,CAC9Z,SAASgkB,KAAK,IAAI,IAAIjkB,EAAEa,OAAOZ,EAAE2H,IAAK3H,aAAaD,EAAEkkB,mBAAmB,CAAC,IAAI,IAAIhkB,EAAE,kBAAkBD,EAAEkkB,cAAc5F,SAAS6F,IAAI,CAAC,MAAM5iB,GAAGtB,GAAE,CAAE,CAAC,IAAGA,EAAyB,MAAMD,EAAE2H,GAA/B5H,EAAEC,EAAEkkB,eAAgCrjB,SAAS,CAAC,OAAOb,CAAC,CAAC,SAASokB,GAAGrkB,GAAG,IAAIC,EAAED,GAAGA,EAAE6G,UAAU7G,EAAE6G,SAASrE,cAAc,OAAOvC,IAAI,UAAUA,IAAI,SAASD,EAAEkC,MAAM,WAAWlC,EAAEkC,MAAM,QAAQlC,EAAEkC,MAAM,QAAQlC,EAAEkC,MAAM,aAAalC,EAAEkC,OAAO,aAAajC,GAAG,SAASD,EAAEskB,gBAAgB,CACxa,SAASC,GAAGvkB,GAAG,IAAIC,EAAEgkB,KAAK/jB,EAAEF,EAAEwkB,YAAYhjB,EAAExB,EAAEykB,eAAe,GAAGxkB,IAAIC,GAAGA,GAAGA,EAAEyI,eAAemb,GAAG5jB,EAAEyI,cAAc+b,gBAAgBxkB,GAAG,CAAC,GAAG,OAAOsB,GAAG6iB,GAAGnkB,GAAG,GAAGD,EAAEuB,EAAEmjB,WAAc,KAAR3kB,EAAEwB,EAAEojB,OAAiB5kB,EAAEC,GAAG,mBAAmBC,EAAEA,EAAE2kB,eAAe5kB,EAAEC,EAAE4kB,aAAa/Q,KAAKgR,IAAI/kB,EAAEE,EAAEyH,MAAMvH,aAAa,IAAGJ,GAAGC,EAAEC,EAAEyI,eAAe7H,WAAWb,EAAE+kB,aAAankB,QAASokB,aAAa,CAACjlB,EAAEA,EAAEilB,eAAe,IAAIxjB,EAAEvB,EAAEwJ,YAAYtJ,OAAOsB,EAAEqS,KAAKgR,IAAIvjB,EAAEmjB,MAAMljB,GAAGD,OAAE,IAASA,EAAEojB,IAAIljB,EAAEqS,KAAKgR,IAAIvjB,EAAEojB,IAAInjB,IAAIzB,EAAEklB,QAAQxjB,EAAEF,IAAIC,EAAED,EAAEA,EAAEE,EAAEA,EAAED,GAAGA,EAAEiiB,GAAGxjB,EAAEwB,GAAG,IAAIC,EAAE+hB,GAAGxjB,EACvfsB,GAAGC,GAAGE,IAAI,IAAI3B,EAAEmlB,YAAYnlB,EAAEolB,aAAa3jB,EAAEkiB,MAAM3jB,EAAEqlB,eAAe5jB,EAAEmiB,QAAQ5jB,EAAEslB,YAAY3jB,EAAEgiB,MAAM3jB,EAAEulB,cAAc5jB,EAAEiiB,WAAU3jB,EAAEA,EAAEulB,eAAgBC,SAAShkB,EAAEkiB,KAAKliB,EAAEmiB,QAAQ5jB,EAAE0lB,kBAAkBhkB,EAAEF,GAAGxB,EAAE2lB,SAAS1lB,GAAGD,EAAEklB,OAAOvjB,EAAEgiB,KAAKhiB,EAAEiiB,UAAU3jB,EAAE2lB,OAAOjkB,EAAEgiB,KAAKhiB,EAAEiiB,QAAQ5jB,EAAE2lB,SAAS1lB,IAAI,CAAM,IAALA,EAAE,GAAOD,EAAEE,EAAEF,EAAEA,EAAE0P,YAAY,IAAI1P,EAAE0K,UAAUzK,EAAEkQ,KAAK,CAAC0V,QAAQ7lB,EAAE8lB,KAAK9lB,EAAE+lB,WAAWC,IAAIhmB,EAAEimB,YAAmD,IAAvC,oBAAoB/lB,EAAEgmB,OAAOhmB,EAAEgmB,QAAYhmB,EAAE,EAAEA,EAAED,EAAEG,OAAOF,KAAIF,EAAEC,EAAEC,IAAK2lB,QAAQE,WAAW/lB,EAAE8lB,KAAK9lB,EAAE6lB,QAAQI,UAAUjmB,EAAEgmB,GAAG,CAAC,CACzf,IAAIG,GAAGvlB,GAAI,iBAAiBE,UAAU,IAAIA,SAASyf,aAAa6F,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,IAAG,EAC3F,SAASC,GAAGxmB,EAAEC,EAAEC,GAAG,IAAIsB,EAAEtB,EAAEW,SAASX,EAAEA,EAAEY,SAAS,IAAIZ,EAAEwK,SAASxK,EAAEA,EAAEyI,cAAc4d,IAAI,MAAMH,IAAIA,KAAKxe,EAAGpG,KAAU,mBAALA,EAAE4kB,KAAyB/B,GAAG7iB,GAAGA,EAAE,CAACmjB,MAAMnjB,EAAEqjB,eAAeD,IAAIpjB,EAAEsjB,cAAuFtjB,EAAE,CAAC4jB,YAA3E5jB,GAAGA,EAAEmH,eAAenH,EAAEmH,cAAcqc,aAAankB,QAAQokB,gBAA+BG,WAAWC,aAAa7jB,EAAE6jB,aAAaC,UAAU9jB,EAAE8jB,UAAUC,YAAY/jB,EAAE+jB,aAAce,IAAI9C,GAAG8C,GAAG9kB,KAAK8kB,GAAG9kB,EAAsB,GAApBA,EAAEwgB,GAAGqE,GAAG,aAAgBjmB,SAASH,EAAE,IAAIua,GAAG,WAAW,SAAS,KAAKva,EAAEC,GAAGF,EAAEmQ,KAAK,CAAC8R,MAAMhiB,EAAEiiB,UAAU1gB,IAAIvB,EAAEsP,OAAO6W,KAAK,CACtf,SAASK,GAAGzmB,EAAEC,GAAG,IAAIC,EAAE,CAAC,EAAiF,OAA/EA,EAAEF,EAAEwC,eAAevC,EAAEuC,cAActC,EAAE,SAASF,GAAG,SAASC,EAAEC,EAAE,MAAMF,GAAG,MAAMC,EAASC,CAAC,CAAC,IAAIwmB,GAAG,CAACC,aAAaF,GAAG,YAAY,gBAAgBG,mBAAmBH,GAAG,YAAY,sBAAsBI,eAAeJ,GAAG,YAAY,kBAAkBK,cAAcL,GAAG,aAAa,kBAAkBM,GAAG,CAAC,EAAEC,GAAG,CAAC,EACpF,SAASC,GAAGjnB,GAAG,GAAG+mB,GAAG/mB,GAAG,OAAO+mB,GAAG/mB,GAAG,IAAI0mB,GAAG1mB,GAAG,OAAOA,EAAE,IAAYE,EAARD,EAAEymB,GAAG1mB,GAAK,IAAIE,KAAKD,EAAE,GAAGA,EAAEkB,eAAejB,IAAIA,KAAK8mB,GAAG,OAAOD,GAAG/mB,GAAGC,EAAEC,GAAG,OAAOF,CAAC,CAA/XY,IAAKomB,GAAGlmB,SAASC,cAAc,OAAO4M,MAAM,mBAAmB9M,gBAAgB6lB,GAAGC,aAAaO,iBAAiBR,GAAGE,mBAAmBM,iBAAiBR,GAAGG,eAAeK,WAAW,oBAAoBrmB,eAAe6lB,GAAGI,cAAc9O,YAAwJ,IAAImP,GAAGF,GAAG,gBAAgBG,GAAGH,GAAG,sBAAsBI,GAAGJ,GAAG,kBAAkBK,GAAGL,GAAG,iBAAiBM,GAAG,IAAIrR,IAAIsR,GAAG,smBAAsmBllB,MAAM,KAC/lC,SAASmlB,GAAGznB,EAAEC,GAAGsnB,GAAG9hB,IAAIzF,EAAEC,GAAGQ,EAAGR,EAAE,CAACD,GAAG,CAAC,IAAI,IAAI0nB,GAAG,EAAEA,GAAGF,GAAGpnB,OAAOsnB,KAAK,CAAC,IAAIC,GAAGH,GAAGE,IAA2DD,GAApDE,GAAGnlB,cAAuD,MAAtCmlB,GAAG,GAAGhlB,cAAcglB,GAAG9kB,MAAM,IAAiB,CAAC4kB,GAAGN,GAAG,kBAAkBM,GAAGL,GAAG,wBAAwBK,GAAGJ,GAAG,oBAAoBI,GAAG,WAAW,iBAAiBA,GAAG,UAAU,WAAWA,GAAG,WAAW,UAAUA,GAAGH,GAAG,mBAAmB5mB,EAAG,eAAe,CAAC,WAAW,cAAcA,EAAG,eAAe,CAAC,WAAW,cAAcA,EAAG,iBAAiB,CAAC,aAAa,gBAC7cA,EAAG,iBAAiB,CAAC,aAAa,gBAAgBD,EAAG,WAAW,oEAAoE6B,MAAM,MAAM7B,EAAG,WAAW,uFAAuF6B,MAAM,MAAM7B,EAAG,gBAAgB,CAAC,iBAAiB,WAAW,YAAY,UAAUA,EAAG,mBAAmB,2DAA2D6B,MAAM,MAAM7B,EAAG,qBAAqB,6DAA6D6B,MAAM,MAC/f7B,EAAG,sBAAsB,8DAA8D6B,MAAM,MAAM,IAAIslB,GAAG,6NAA6NtlB,MAAM,KAAKulB,GAAG,IAAItnB,IAAI,0CAA0C+B,MAAM,KAAKwlB,OAAOF,KACzZ,SAASG,GAAG/nB,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEkC,MAAM,gBAAgBlC,EAAEoZ,cAAclZ,EAlDjE,SAAYF,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,EAAEkE,EAAEC,GAA4B,GAAzByL,GAAGR,MAAMnP,KAAKzB,WAAc+Q,GAAG,CAAC,IAAGA,GAAgC,MAAMjM,MAAMlF,EAAE,MAA1C,IAAI6F,EAAEuL,GAAGD,IAAG,EAAGC,GAAG,KAA8BC,KAAKA,IAAG,EAAGC,GAAGzL,EAAE,CAAC,CAkDpEoiB,CAAGxmB,EAAEvB,OAAE,EAAOD,GAAGA,EAAEoZ,cAAc,IAAI,CACxG,SAASkJ,GAAGtiB,EAAEC,GAAGA,EAAE,KAAO,EAAFA,GAAK,IAAI,IAAIC,EAAE,EAAEA,EAAEF,EAAEI,OAAOF,IAAI,CAAC,IAAIsB,EAAExB,EAAEE,GAAGuB,EAAED,EAAEygB,MAAMzgB,EAAEA,EAAE0gB,UAAUliB,EAAE,CAAC,IAAI0B,OAAE,EAAO,GAAGzB,EAAE,IAAI,IAAI0B,EAAEH,EAAEpB,OAAO,EAAE,GAAGuB,EAAEA,IAAI,CAAC,IAAIkE,EAAErE,EAAEG,GAAGmE,EAAED,EAAEoiB,SAASriB,EAAEC,EAAEuT,cAA2B,GAAbvT,EAAEA,EAAEqiB,SAAYpiB,IAAIpE,GAAGD,EAAE+X,uBAAuB,MAAMxZ,EAAE+nB,GAAGtmB,EAAEoE,EAAED,GAAGlE,EAAEoE,CAAC,MAAM,IAAInE,EAAE,EAAEA,EAAEH,EAAEpB,OAAOuB,IAAI,CAAoD,GAA5CmE,GAAPD,EAAErE,EAAEG,IAAOsmB,SAASriB,EAAEC,EAAEuT,cAAcvT,EAAEA,EAAEqiB,SAAYpiB,IAAIpE,GAAGD,EAAE+X,uBAAuB,MAAMxZ,EAAE+nB,GAAGtmB,EAAEoE,EAAED,GAAGlE,EAAEoE,CAAC,CAAC,CAAC,CAAC,GAAGsL,GAAG,MAAMpR,EAAEqR,GAAGD,IAAG,EAAGC,GAAG,KAAKrR,CAAE,CAC5a,SAASmoB,GAAEnoB,EAAEC,GAAG,IAAIC,EAAED,EAAEmoB,SAAI,IAASloB,IAAIA,EAAED,EAAEmoB,IAAI,IAAI7nB,KAAK,IAAIiB,EAAExB,EAAE,WAAWE,EAAEmoB,IAAI7mB,KAAK8mB,GAAGroB,EAAED,EAAE,GAAE,GAAIE,EAAES,IAAIa,GAAG,CAAC,SAAS+mB,GAAGvoB,EAAEC,EAAEC,GAAG,IAAIsB,EAAE,EAAEvB,IAAIuB,GAAG,GAAG8mB,GAAGpoB,EAAEF,EAAEwB,EAAEvB,EAAE,CAAC,IAAIuoB,GAAG,kBAAkBzU,KAAK0U,SAASve,SAAS,IAAIrH,MAAM,GAAG,SAAS6lB,GAAG1oB,GAAG,IAAIA,EAAEwoB,IAAI,CAACxoB,EAAEwoB,KAAI,EAAGloB,EAAGiC,SAAQ,SAAStC,GAAG,oBAAoBA,IAAI4nB,GAAGQ,IAAIpoB,IAAIsoB,GAAGtoB,GAAE,EAAGD,GAAGuoB,GAAGtoB,GAAE,EAAGD,GAAG,IAAG,IAAIC,EAAE,IAAID,EAAE0K,SAAS1K,EAAEA,EAAE2I,cAAc,OAAO1I,GAAGA,EAAEuoB,MAAMvoB,EAAEuoB,KAAI,EAAGD,GAAG,mBAAkB,EAAGtoB,GAAG,CAAC,CACjb,SAASqoB,GAAGtoB,EAAEC,EAAEC,EAAEsB,GAAG,OAAO+W,GAAGtY,IAAI,KAAK,EAAE,IAAIwB,EAAEsW,GAAG,MAAM,KAAK,EAAEtW,EAAEyW,GAAG,MAAM,QAAQzW,EAAEwW,GAAG/X,EAAEuB,EAAEknB,KAAK,KAAK1oB,EAAEC,EAAEF,GAAGyB,OAAE,GAAQiP,IAAI,eAAezQ,GAAG,cAAcA,GAAG,UAAUA,IAAIwB,GAAE,GAAID,OAAE,IAASC,EAAEzB,EAAE4Q,iBAAiB3Q,EAAEC,EAAE,CAAC0oB,SAAQ,EAAGC,QAAQpnB,IAAIzB,EAAE4Q,iBAAiB3Q,EAAEC,GAAE,QAAI,IAASuB,EAAEzB,EAAE4Q,iBAAiB3Q,EAAEC,EAAE,CAAC2oB,QAAQpnB,IAAIzB,EAAE4Q,iBAAiB3Q,EAAEC,GAAE,EAAG,CAClV,SAASiY,GAAGnY,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,IAAIC,EAAEF,EAAE,GAAG,KAAO,EAAFvB,IAAM,KAAO,EAAFA,IAAM,OAAOuB,EAAExB,EAAE,OAAO,CAAC,GAAG,OAAOwB,EAAE,OAAO,IAAIG,EAAEH,EAAE2E,IAAI,GAAG,IAAIxE,GAAG,IAAIA,EAAE,CAAC,IAAIkE,EAAErE,EAAEwO,UAAUmH,cAAc,GAAGtR,IAAIpE,GAAG,IAAIoE,EAAE6E,UAAU7E,EAAE6J,aAAajO,EAAE,MAAM,GAAG,IAAIE,EAAE,IAAIA,EAAEH,EAAEkQ,OAAO,OAAO/P,GAAG,CAAC,IAAImE,EAAEnE,EAAEwE,IAAI,IAAG,IAAIL,GAAG,IAAIA,MAAKA,EAAEnE,EAAEqO,UAAUmH,iBAAkB1V,GAAG,IAAIqE,EAAE4E,UAAU5E,EAAE4J,aAAajO,GAAE,OAAOE,EAAEA,EAAE+P,MAAM,CAAC,KAAK,OAAO7L,GAAG,CAAS,GAAG,QAAXlE,EAAEqV,GAAGnR,IAAe,OAAe,GAAG,KAAXC,EAAEnE,EAAEwE,MAAc,IAAIL,EAAE,CAACtE,EAAEE,EAAEC,EAAE,SAAS3B,CAAC,CAAC6F,EAAEA,EAAE6J,UAAU,CAAC,CAAClO,EAAEA,EAAEkQ,MAAM,CAAClB,IAAG,WAAW,IAAIhP,EAAEE,EAAED,EAAE6N,GAAGpP,GAAGyB,EAAE,GACpf3B,EAAE,CAAC,IAAI6F,EAAE0hB,GAAGrgB,IAAIlH,GAAG,QAAG,IAAS6F,EAAE,CAAC,IAAIC,EAAE0U,GAAGsO,EAAE9oB,EAAE,OAAOA,GAAG,IAAK,WAAW,GAAG,IAAI4Y,GAAG1Y,GAAG,MAAMF,EAAE,IAAK,UAAU,IAAK,QAAQ8F,EAAE6Y,GAAG,MAAM,IAAK,UAAUmK,EAAE,QAAQhjB,EAAEsW,GAAG,MAAM,IAAK,WAAW0M,EAAE,OAAOhjB,EAAEsW,GAAG,MAAM,IAAK,aAAa,IAAK,YAAYtW,EAAEsW,GAAG,MAAM,IAAK,QAAQ,GAAG,IAAIlc,EAAEwb,OAAO,MAAM1b,EAAE,IAAK,WAAW,IAAK,WAAW,IAAK,YAAY,IAAK,YAAY,IAAK,UAAU,IAAK,WAAW,IAAK,YAAY,IAAK,cAAc8F,EAAEmW,GAAG,MAAM,IAAK,OAAO,IAAK,UAAU,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,OAAOnW,EAC1iBoW,GAAG,MAAM,IAAK,cAAc,IAAK,WAAW,IAAK,YAAY,IAAK,aAAapW,EAAEwZ,GAAG,MAAM,KAAK6H,GAAG,KAAKC,GAAG,KAAKC,GAAGvhB,EAAEuW,GAAG,MAAM,KAAKiL,GAAGxhB,EAAE4Z,GAAG,MAAM,IAAK,SAAS5Z,EAAE8U,GAAG,MAAM,IAAK,QAAQ9U,EAAEqa,GAAG,MAAM,IAAK,OAAO,IAAK,MAAM,IAAK,QAAQra,EAAE6W,GAAG,MAAM,IAAK,oBAAoB,IAAK,qBAAqB,IAAK,gBAAgB,IAAK,cAAc,IAAK,cAAc,IAAK,aAAa,IAAK,cAAc,IAAK,YAAY7W,EAAE8Y,GAAG,IAAImK,EAAE,KAAO,EAAF9oB,GAAK+oB,GAAGD,GAAG,WAAW/oB,EAAEipB,EAAEF,EAAE,OAAOljB,EAAEA,EAAE,UAAU,KAAKA,EAAEkjB,EAAE,GAAG,IAAI,IAAQG,EAAJC,EAAE3nB,EAAI,OAC/e2nB,GAAG,CAAK,IAAIC,GAARF,EAAEC,GAAUnZ,UAAsF,GAA5E,IAAIkZ,EAAE/iB,KAAK,OAAOijB,IAAIF,EAAEE,EAAE,OAAOH,IAAc,OAAVG,EAAE3Y,GAAG0Y,EAAEF,KAAYF,EAAE5Y,KAAKkZ,GAAGF,EAAEC,EAAEF,MAASF,EAAE,MAAMG,EAAEA,EAAEzX,MAAM,CAAC,EAAEqX,EAAE3oB,SAASyF,EAAE,IAAIC,EAAED,EAAEijB,EAAE,KAAK5oB,EAAEuB,GAAGE,EAAEwO,KAAK,CAAC8R,MAAMpc,EAAEqc,UAAU6G,IAAI,CAAC,CAAC,GAAG,KAAO,EAAF9oB,GAAK,CAA4E,GAAnC6F,EAAE,aAAa9F,GAAG,eAAeA,KAAtE6F,EAAE,cAAc7F,GAAG,gBAAgBA,IAA2CE,IAAImP,MAAKyZ,EAAE5oB,EAAE0b,eAAe1b,EAAE2b,eAAe7E,GAAG8R,KAAIA,EAAEQ,OAAgBxjB,GAAGD,KAAGA,EAAEpE,EAAEZ,SAASY,EAAEA,GAAGoE,EAAEpE,EAAEkH,eAAe9C,EAAEmf,aAAanf,EAAE0jB,aAAa1oB,OAAUiF,GAAqCA,EAAEtE,EAAiB,QAAfsnB,GAAnCA,EAAE5oB,EAAE0b,eAAe1b,EAAE4b,WAAkB9E,GAAG8R,GAAG,QAC9dA,KAARE,EAAExX,GAAGsX,KAAU,IAAIA,EAAE3iB,KAAK,IAAI2iB,EAAE3iB,OAAK2iB,EAAE,QAAUhjB,EAAE,KAAKgjB,EAAEtnB,GAAKsE,IAAIgjB,GAAE,CAAgU,GAA/TC,EAAE9M,GAAGmN,EAAE,eAAeH,EAAE,eAAeE,EAAE,QAAW,eAAenpB,GAAG,gBAAgBA,IAAE+oB,EAAEnK,GAAGwK,EAAE,iBAAiBH,EAAE,iBAAiBE,EAAE,WAAUH,EAAE,MAAMljB,EAAED,EAAE2c,GAAG1c,GAAGojB,EAAE,MAAMJ,EAAEjjB,EAAE2c,GAAGsG,IAAGjjB,EAAE,IAAIkjB,EAAEK,EAAED,EAAE,QAAQrjB,EAAE5F,EAAEuB,IAAK8N,OAAOyZ,EAAEnjB,EAAE+V,cAAcsN,EAAEE,EAAE,KAAKpS,GAAGvV,KAAKD,KAAIunB,EAAE,IAAIA,EAAEE,EAAEE,EAAE,QAAQL,EAAE5oB,EAAEuB,IAAK8N,OAAO2Z,EAAEH,EAAEnN,cAAcoN,EAAEI,EAAEL,GAAGC,EAAEI,EAAKtjB,GAAGgjB,EAAE7oB,EAAE,CAAa,IAARgpB,EAAEH,EAAEK,EAAE,EAAMD,EAAhBH,EAAEjjB,EAAkBojB,EAAEA,EAAEM,GAAGN,GAAGC,IAAQ,IAAJD,EAAE,EAAME,EAAEH,EAAEG,EAAEA,EAAEI,GAAGJ,GAAGF,IAAI,KAAK,EAAEC,EAAED,GAAGH,EAAES,GAAGT,GAAGI,IAAI,KAAK,EAAED,EAAEC,GAAGF,EACpfO,GAAGP,GAAGC,IAAI,KAAKC,KAAK,CAAC,GAAGJ,IAAIE,GAAG,OAAOA,GAAGF,IAAIE,EAAExX,UAAU,MAAMxR,EAAE8oB,EAAES,GAAGT,GAAGE,EAAEO,GAAGP,EAAE,CAACF,EAAE,IAAI,MAAMA,EAAE,KAAK,OAAOjjB,GAAG2jB,GAAG9nB,EAAEkE,EAAEC,EAAEijB,GAAE,GAAI,OAAOD,GAAG,OAAOE,GAAGS,GAAG9nB,EAAEqnB,EAAEF,EAAEC,GAAE,EAAG,CAA8D,GAAG,YAA1CjjB,GAAjBD,EAAErE,EAAEghB,GAAGhhB,GAAGX,QAAWgG,UAAUhB,EAAEgB,SAASrE,gBAA+B,UAAUsD,GAAG,SAASD,EAAE3D,KAAK,IAAIwnB,EAAGjH,QAAQ,GAAGX,GAAGjc,GAAG,GAAG6c,GAAGgH,EAAGpG,OAAO,CAACoG,EAAGtG,GAAG,IAAIuG,EAAGzG,EAAE,MAAMpd,EAAED,EAAEgB,WAAW,UAAUf,EAAEtD,gBAAgB,aAAaqD,EAAE3D,MAAM,UAAU2D,EAAE3D,QAAQwnB,EAAGrG,IACrV,OAD4VqG,IAAKA,EAAGA,EAAG1pB,EAAEwB,IAAKugB,GAAGpgB,EAAE+nB,EAAGxpB,EAAEuB,IAAWkoB,GAAIA,EAAG3pB,EAAE6F,EAAErE,GAAG,aAAaxB,IAAI2pB,EAAG9jB,EAAEqC,gBAClfyhB,EAAGrhB,YAAY,WAAWzC,EAAE3D,MAAMuG,GAAG5C,EAAE,SAASA,EAAE8B,QAAOgiB,EAAGnoB,EAAEghB,GAAGhhB,GAAGX,OAAcb,GAAG,IAAK,WAAa8hB,GAAG6H,IAAK,SAASA,EAAGrF,mBAAgB8B,GAAGuD,EAAGtD,GAAG7kB,EAAE8kB,GAAG,MAAK,MAAM,IAAK,WAAWA,GAAGD,GAAGD,GAAG,KAAK,MAAM,IAAK,YAAYG,IAAG,EAAG,MAAM,IAAK,cAAc,IAAK,UAAU,IAAK,UAAUA,IAAG,EAAGC,GAAG7kB,EAAEzB,EAAEuB,GAAG,MAAM,IAAK,kBAAkB,GAAG0kB,GAAG,MAAM,IAAK,UAAU,IAAK,QAAQK,GAAG7kB,EAAEzB,EAAEuB,GAAG,IAAImoB,EAAG,GAAGvJ,GAAGpgB,EAAE,CAAC,OAAOD,GAAG,IAAK,mBAAmB,IAAI6pB,EAAG,qBAAqB,MAAM5pB,EAAE,IAAK,iBAAiB4pB,EAAG,mBACpe,MAAM5pB,EAAE,IAAK,oBAAoB4pB,EAAG,sBAAsB,MAAM5pB,EAAE4pB,OAAG,CAAM,MAAM/I,GAAGF,GAAG5gB,EAAEE,KAAK2pB,EAAG,oBAAoB,YAAY7pB,GAAG,MAAME,EAAE2Y,UAAUgR,EAAG,sBAAsBA,IAAKpJ,IAAI,OAAOvgB,EAAEue,SAASqC,IAAI,uBAAuB+I,EAAG,qBAAqBA,GAAI/I,KAAK8I,EAAGjR,OAAYF,GAAG,UAARD,GAAG/W,GAAkB+W,GAAG7Q,MAAM6Q,GAAG9O,YAAYoX,IAAG,IAAiB,GAAZ6I,EAAG3H,GAAGxgB,EAAEqoB,IAASzpB,SAASypB,EAAG,IAAIjN,GAAGiN,EAAG7pB,EAAE,KAAKE,EAAEuB,GAAGE,EAAEwO,KAAK,CAAC8R,MAAM4H,EAAG3H,UAAUyH,IAAKC,EAAGC,EAAGhN,KAAK+M,EAAa,QAATA,EAAG/I,GAAG3gB,MAAe2pB,EAAGhN,KAAK+M,MAAUA,EAAGpJ,GA5BhM,SAAYxgB,EAAEC,GAAG,OAAOD,GAAG,IAAK,iBAAiB,OAAO6gB,GAAG5gB,GAAG,IAAK,WAAW,OAAG,KAAKA,EAAEye,MAAa,MAAKiC,IAAG,EAAUD,IAAG,IAAK,YAAY,OAAO1gB,EAAEC,EAAE4c,QAAS6D,IAAIC,GAAG,KAAK3gB,EAAE,QAAQ,OAAO,KAAK,CA4BE8pB,CAAG9pB,EAAEE,GA3Bzd,SAAYF,EAAEC,GAAG,GAAG6gB,GAAG,MAAM,mBAAmB9gB,IAAIqgB,IAAIO,GAAG5gB,EAAEC,IAAID,EAAE2Y,KAAKD,GAAGD,GAAGD,GAAG,KAAKsI,IAAG,EAAG9gB,GAAG,KAAK,OAAOA,GAAG,IAAK,QAAgQ,QAAQ,OAAO,KAA3P,IAAK,WAAW,KAAKC,EAAEmb,SAASnb,EAAEqb,QAAQrb,EAAEsb,UAAUtb,EAAEmb,SAASnb,EAAEqb,OAAO,CAAC,GAAGrb,EAAE8pB,MAAM,EAAE9pB,EAAE8pB,KAAK3pB,OAAO,OAAOH,EAAE8pB,KAAK,GAAG9pB,EAAEye,MAAM,OAAON,OAAOC,aAAape,EAAEye,MAAM,CAAC,OAAO,KAAK,IAAK,iBAAiB,OAAO+B,IAAI,OAAOxgB,EAAEwe,OAAO,KAAKxe,EAAE4c,KAAyB,CA2BqFmN,CAAGhqB,EAAEE,MACje,GADoesB,EAAEwgB,GAAGxgB,EAAE,kBACvepB,SAASqB,EAAE,IAAImb,GAAG,gBAAgB,cAAc,KAAK1c,EAAEuB,GAAGE,EAAEwO,KAAK,CAAC8R,MAAMxgB,EAAEygB,UAAU1gB,IAAIC,EAAEob,KAAK+M,GAAG,CAACtH,GAAG3gB,EAAE1B,EAAE,GAAE,CAAC,SAASopB,GAAGrpB,EAAEC,EAAEC,GAAG,MAAM,CAAC+nB,SAASjoB,EAAEkoB,SAASjoB,EAAEmZ,cAAclZ,EAAE,CAAC,SAAS8hB,GAAGhiB,EAAEC,GAAG,IAAI,IAAIC,EAAED,EAAE,UAAUuB,EAAE,GAAG,OAAOxB,GAAG,CAAC,IAAIyB,EAAEzB,EAAE0B,EAAED,EAAEuO,UAAU,IAAIvO,EAAE0E,KAAK,OAAOzE,IAAID,EAAEC,EAAY,OAAVA,EAAE+O,GAAGzQ,EAAEE,KAAYsB,EAAEyoB,QAAQZ,GAAGrpB,EAAE0B,EAAED,IAAc,OAAVC,EAAE+O,GAAGzQ,EAAEC,KAAYuB,EAAE2O,KAAKkZ,GAAGrpB,EAAE0B,EAAED,KAAKzB,EAAEA,EAAE0R,MAAM,CAAC,OAAOlQ,CAAC,CAAC,SAASgoB,GAAGxpB,GAAG,GAAG,OAAOA,EAAE,OAAO,KAAK,GAAGA,EAAEA,EAAE0R,aAAa1R,GAAG,IAAIA,EAAEmG,KAAK,OAAOnG,GAAI,IAAI,CACnd,SAASypB,GAAGzpB,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,IAAI,IAAIC,EAAEzB,EAAEiZ,WAAWvX,EAAE,GAAG,OAAOzB,GAAGA,IAAIsB,GAAG,CAAC,IAAIqE,EAAE3F,EAAE4F,EAAED,EAAE4L,UAAU7L,EAAEC,EAAEmK,UAAU,GAAG,OAAOlK,GAAGA,IAAItE,EAAE,MAAM,IAAIqE,EAAEM,KAAK,OAAOP,IAAIC,EAAED,EAAEnE,EAAa,OAAVqE,EAAE2K,GAAGvQ,EAAEwB,KAAYC,EAAEsoB,QAAQZ,GAAGnpB,EAAE4F,EAAED,IAAKpE,GAAc,OAAVqE,EAAE2K,GAAGvQ,EAAEwB,KAAYC,EAAEwO,KAAKkZ,GAAGnpB,EAAE4F,EAAED,KAAM3F,EAAEA,EAAEwR,MAAM,CAAC,IAAI/P,EAAEvB,QAAQJ,EAAEmQ,KAAK,CAAC8R,MAAMhiB,EAAEiiB,UAAUvgB,GAAG,CAAC,IAAIuoB,GAAG,SAASC,GAAG,iBAAiB,SAASC,GAAGpqB,GAAG,OAAO,kBAAkBA,EAAEA,EAAE,GAAGA,GAAGuD,QAAQ2mB,GAAG,MAAM3mB,QAAQ4mB,GAAG,GAAG,CAAC,SAASE,GAAGrqB,EAAEC,EAAEC,GAAW,GAARD,EAAEmqB,GAAGnqB,GAAMmqB,GAAGpqB,KAAKC,GAAGC,EAAE,MAAM+E,MAAMlF,EAAE,KAAM,CAAC,SAASuqB,KAAK,CAC9e,IAAIC,GAAG,KAAKC,GAAG,KAAK,SAASC,GAAGzqB,EAAEC,GAAG,MAAM,aAAaD,GAAG,aAAaA,GAAG,kBAAkBC,EAAEqJ,UAAU,kBAAkBrJ,EAAEqJ,UAAU,kBAAkBrJ,EAAEoJ,yBAAyB,OAAOpJ,EAAEoJ,yBAAyB,MAAMpJ,EAAEoJ,wBAAwBqhB,MAAM,CAC5P,IAAIC,GAAG,oBAAoBC,WAAWA,gBAAW,EAAOC,GAAG,oBAAoBC,aAAaA,kBAAa,EAAOC,GAAG,oBAAoBC,QAAQA,aAAQ,EAAOC,GAAG,oBAAoBC,eAAeA,eAAe,qBAAqBH,GAAG,SAAS/qB,GAAG,OAAO+qB,GAAGI,QAAQ,MAAMC,KAAKprB,GAAGqrB,MAAMC,GAAG,EAAEX,GAAG,SAASW,GAAGtrB,GAAG4qB,YAAW,WAAW,MAAM5qB,CAAE,GAAE,CACpV,SAASurB,GAAGvrB,EAAEC,GAAG,IAAIC,EAAED,EAAEuB,EAAE,EAAE,EAAE,CAAC,IAAIC,EAAEvB,EAAE2jB,YAA6B,GAAjB7jB,EAAEoK,YAAYlK,GAAMuB,GAAG,IAAIA,EAAEiJ,SAAS,GAAY,QAATxK,EAAEuB,EAAEob,MAAc,CAAC,GAAG,IAAIrb,EAA0B,OAAvBxB,EAAEoK,YAAY3I,QAAGkW,GAAG1X,GAAUuB,GAAG,KAAK,MAAMtB,GAAG,OAAOA,GAAG,OAAOA,GAAGsB,IAAItB,EAAEuB,CAAC,OAAOvB,GAAGyX,GAAG1X,EAAE,CAAC,SAASurB,GAAGxrB,GAAG,KAAK,MAAMA,EAAEA,EAAEA,EAAE6jB,YAAY,CAAC,IAAI5jB,EAAED,EAAE0K,SAAS,GAAG,IAAIzK,GAAG,IAAIA,EAAE,MAAM,GAAG,IAAIA,EAAE,CAAU,GAAG,OAAZA,EAAED,EAAE6c,OAAiB,OAAO5c,GAAG,OAAOA,EAAE,MAAM,GAAG,OAAOA,EAAE,OAAO,IAAI,CAAC,CAAC,OAAOD,CAAC,CACjY,SAASyrB,GAAGzrB,GAAGA,EAAEA,EAAE0rB,gBAAgB,IAAI,IAAIzrB,EAAE,EAAED,GAAG,CAAC,GAAG,IAAIA,EAAE0K,SAAS,CAAC,IAAIxK,EAAEF,EAAE6c,KAAK,GAAG,MAAM3c,GAAG,OAAOA,GAAG,OAAOA,EAAE,CAAC,GAAG,IAAID,EAAE,OAAOD,EAAEC,GAAG,KAAK,OAAOC,GAAGD,GAAG,CAACD,EAAEA,EAAE0rB,eAAe,CAAC,OAAO,IAAI,CAAC,IAAIC,GAAG5X,KAAK0U,SAASve,SAAS,IAAIrH,MAAM,GAAG+oB,GAAG,gBAAgBD,GAAGE,GAAG,gBAAgBF,GAAGrC,GAAG,oBAAoBqC,GAAGvD,GAAG,iBAAiBuD,GAAGG,GAAG,oBAAoBH,GAAGI,GAAG,kBAAkBJ,GAClX,SAAS3U,GAAGhX,GAAG,IAAIC,EAAED,EAAE4rB,IAAI,GAAG3rB,EAAE,OAAOA,EAAE,IAAI,IAAIC,EAAEF,EAAE0P,WAAWxP,GAAG,CAAC,GAAGD,EAAEC,EAAEopB,KAAKppB,EAAE0rB,IAAI,CAAe,GAAd1rB,EAAED,EAAEwR,UAAa,OAAOxR,EAAEgS,OAAO,OAAO/R,GAAG,OAAOA,EAAE+R,MAAM,IAAIjS,EAAEyrB,GAAGzrB,GAAG,OAAOA,GAAG,CAAC,GAAGE,EAAEF,EAAE4rB,IAAI,OAAO1rB,EAAEF,EAAEyrB,GAAGzrB,EAAE,CAAC,OAAOC,CAAC,CAAKC,GAAJF,EAAEE,GAAMwP,UAAU,CAAC,OAAO,IAAI,CAAC,SAASK,GAAG/P,GAAkB,QAAfA,EAAEA,EAAE4rB,KAAK5rB,EAAEspB,MAAc,IAAItpB,EAAEmG,KAAK,IAAInG,EAAEmG,KAAK,KAAKnG,EAAEmG,KAAK,IAAInG,EAAEmG,IAAI,KAAKnG,CAAC,CAAC,SAASwiB,GAAGxiB,GAAG,GAAG,IAAIA,EAAEmG,KAAK,IAAInG,EAAEmG,IAAI,OAAOnG,EAAEgQ,UAAU,MAAM/K,MAAMlF,EAAE,IAAK,CAAC,SAASkQ,GAAGjQ,GAAG,OAAOA,EAAE6rB,KAAK,IAAI,CAAC,IAAIG,GAAG,GAAGC,IAAI,EAAE,SAASC,GAAGlsB,GAAG,MAAM,CAACmS,QAAQnS,EAAE,CACve,SAASmsB,GAAEnsB,GAAG,EAAEisB,KAAKjsB,EAAEmS,QAAQ6Z,GAAGC,IAAID,GAAGC,IAAI,KAAKA,KAAK,CAAC,SAASG,GAAEpsB,EAAEC,GAAGgsB,KAAKD,GAAGC,IAAIjsB,EAAEmS,QAAQnS,EAAEmS,QAAQlS,CAAC,CAAC,IAAIosB,GAAG,CAAC,EAAEC,GAAEJ,GAAGG,IAAIE,GAAGL,IAAG,GAAIM,GAAGH,GAAG,SAASI,GAAGzsB,EAAEC,GAAG,IAAIC,EAAEF,EAAEkC,KAAKwqB,aAAa,IAAIxsB,EAAE,OAAOmsB,GAAG,IAAI7qB,EAAExB,EAAEgQ,UAAU,GAAGxO,GAAGA,EAAEmrB,8CAA8C1sB,EAAE,OAAOuB,EAAEorB,0CAA0C,IAASlrB,EAALD,EAAE,CAAC,EAAI,IAAIC,KAAKxB,EAAEuB,EAAEC,GAAGzB,EAAEyB,GAAoH,OAAjHF,KAAIxB,EAAEA,EAAEgQ,WAAY2c,4CAA4C1sB,EAAED,EAAE4sB,0CAA0CnrB,GAAUA,CAAC,CAC9d,SAASorB,GAAG7sB,GAAyB,OAAO,QAA7BA,EAAEA,EAAE8sB,yBAAmC,IAAS9sB,CAAC,CAAC,SAAS+sB,KAAKZ,GAAEI,IAAIJ,GAAEG,GAAE,CAAC,SAASU,GAAGhtB,EAAEC,EAAEC,GAAG,GAAGosB,GAAEna,UAAUka,GAAG,MAAMpnB,MAAMlF,EAAE,MAAMqsB,GAAEE,GAAErsB,GAAGmsB,GAAEG,GAAGrsB,EAAE,CAAC,SAAS+sB,GAAGjtB,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEgQ,UAAgC,GAAtB/P,EAAEA,EAAE6sB,kBAAqB,oBAAoBtrB,EAAE0rB,gBAAgB,OAAOhtB,EAAwB,IAAI,IAAIuB,KAA9BD,EAAEA,EAAE0rB,kBAAiC,KAAKzrB,KAAKxB,GAAG,MAAMgF,MAAMlF,EAAE,IAAI2G,EAAG1G,IAAI,UAAUyB,IAAI,OAAOqD,EAAE,CAAC,EAAE5E,EAAEsB,EAAE,CACxX,SAAS2rB,GAAGntB,GAA2G,OAAxGA,GAAGA,EAAEA,EAAEgQ,YAAYhQ,EAAEotB,2CAA2Cf,GAAGG,GAAGF,GAAEna,QAAQia,GAAEE,GAAEtsB,GAAGosB,GAAEG,GAAGA,GAAGpa,UAAe,CAAE,CAAC,SAASkb,GAAGrtB,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEgQ,UAAU,IAAIxO,EAAE,MAAMyD,MAAMlF,EAAE,MAAMG,GAAGF,EAAEitB,GAAGjtB,EAAEC,EAAEusB,IAAIhrB,EAAE4rB,0CAA0CptB,EAAEmsB,GAAEI,IAAIJ,GAAEG,IAAGF,GAAEE,GAAEtsB,IAAImsB,GAAEI,IAAIH,GAAEG,GAAGrsB,EAAE,CAAC,IAAIotB,GAAG,KAAKC,IAAG,EAAGC,IAAG,EAAG,SAASC,GAAGztB,GAAG,OAAOstB,GAAGA,GAAG,CAACttB,GAAGstB,GAAGnd,KAAKnQ,EAAE,CAChW,SAAS0tB,KAAK,IAAIF,IAAI,OAAOF,GAAG,CAACE,IAAG,EAAG,IAAIxtB,EAAE,EAAEC,EAAEoV,GAAE,IAAI,IAAInV,EAAEotB,GAAG,IAAIjY,GAAE,EAAErV,EAAEE,EAAEE,OAAOJ,IAAI,CAAC,IAAIwB,EAAEtB,EAAEF,GAAG,GAAGwB,EAAEA,GAAE,SAAU,OAAOA,EAAE,CAAC8rB,GAAG,KAAKC,IAAG,CAAE,CAAC,MAAM9rB,GAAG,MAAM,OAAO6rB,KAAKA,GAAGA,GAAGzqB,MAAM7C,EAAE,IAAIsS,GAAGY,GAAGwa,IAAIjsB,CAAE,CAAC,QAAQ4T,GAAEpV,EAAEutB,IAAG,CAAE,CAAC,CAAC,OAAO,IAAI,CAAC,IAAIG,GAAG,GAAGC,GAAG,EAAEC,GAAG,KAAKC,GAAG,EAAEC,GAAG,GAAGC,GAAG,EAAEC,GAAG,KAAKC,GAAG,EAAEC,GAAG,GAAG,SAASC,GAAGpuB,EAAEC,GAAG0tB,GAAGC,MAAME,GAAGH,GAAGC,MAAMC,GAAGA,GAAG7tB,EAAE8tB,GAAG7tB,CAAC,CACjV,SAASouB,GAAGruB,EAAEC,EAAEC,GAAG6tB,GAAGC,MAAME,GAAGH,GAAGC,MAAMG,GAAGJ,GAAGC,MAAMC,GAAGA,GAAGjuB,EAAE,IAAIwB,EAAE0sB,GAAGluB,EAAEmuB,GAAG,IAAI1sB,EAAE,GAAGqS,GAAGtS,GAAG,EAAEA,KAAK,GAAGC,GAAGvB,GAAG,EAAE,IAAIwB,EAAE,GAAGoS,GAAG7T,GAAGwB,EAAE,GAAG,GAAGC,EAAE,CAAC,IAAIC,EAAEF,EAAEA,EAAE,EAAEC,GAAGF,GAAG,GAAGG,GAAG,GAAGuI,SAAS,IAAI1I,IAAIG,EAAEF,GAAGE,EAAEusB,GAAG,GAAG,GAAGpa,GAAG7T,GAAGwB,EAAEvB,GAAGuB,EAAED,EAAE2sB,GAAGzsB,EAAE1B,CAAC,MAAMkuB,GAAG,GAAGxsB,EAAExB,GAAGuB,EAAED,EAAE2sB,GAAGnuB,CAAC,CAAC,SAASsuB,GAAGtuB,GAAG,OAAOA,EAAE0R,SAAS0c,GAAGpuB,EAAE,GAAGquB,GAAGruB,EAAE,EAAE,GAAG,CAAC,SAASuuB,GAAGvuB,GAAG,KAAKA,IAAI6tB,IAAIA,GAAGF,KAAKC,IAAID,GAAGC,IAAI,KAAKE,GAAGH,KAAKC,IAAID,GAAGC,IAAI,KAAK,KAAK5tB,IAAIiuB,IAAIA,GAAGF,KAAKC,IAAID,GAAGC,IAAI,KAAKG,GAAGJ,KAAKC,IAAID,GAAGC,IAAI,KAAKE,GAAGH,KAAKC,IAAID,GAAGC,IAAI,IAAI,CAAC,IAAIQ,GAAG,KAAKC,GAAG,KAAKC,IAAE,EAAGC,GAAG,KACje,SAASC,GAAG5uB,EAAEC,GAAG,IAAIC,EAAE2uB,GAAG,EAAE,KAAK,KAAK,GAAG3uB,EAAE4uB,YAAY,UAAU5uB,EAAE8P,UAAU/P,EAAEC,EAAEwR,OAAO1R,EAAgB,QAAdC,EAAED,EAAE+uB,YAAoB/uB,EAAE+uB,UAAU,CAAC7uB,GAAGF,EAAE2R,OAAO,IAAI1R,EAAEkQ,KAAKjQ,EAAE,CACxJ,SAAS8uB,GAAGhvB,EAAEC,GAAG,OAAOD,EAAEmG,KAAK,KAAK,EAAE,IAAIjG,EAAEF,EAAEkC,KAAyE,OAAO,QAA3EjC,EAAE,IAAIA,EAAEyK,UAAUxK,EAAEsC,gBAAgBvC,EAAE4G,SAASrE,cAAc,KAAKvC,KAAmBD,EAAEgQ,UAAU/P,EAAEuuB,GAAGxuB,EAAEyuB,GAAGjD,GAAGvrB,EAAEkK,aAAY,GAAO,KAAK,EAAE,OAAoD,QAA7ClK,EAAE,KAAKD,EAAEivB,cAAc,IAAIhvB,EAAEyK,SAAS,KAAKzK,KAAYD,EAAEgQ,UAAU/P,EAAEuuB,GAAGxuB,EAAEyuB,GAAG,MAAK,GAAO,KAAK,GAAG,OAA+B,QAAxBxuB,EAAE,IAAIA,EAAEyK,SAAS,KAAKzK,KAAYC,EAAE,OAAO+tB,GAAG,CAAC7V,GAAG8V,GAAGgB,SAASf,IAAI,KAAKnuB,EAAE6R,cAAc,CAACC,WAAW7R,EAAEkvB,YAAYjvB,EAAEkvB,UAAU,aAAYlvB,EAAE2uB,GAAG,GAAG,KAAK,KAAK,IAAK7e,UAAU/P,EAAEC,EAAEwR,OAAO1R,EAAEA,EAAEiS,MAAM/R,EAAEsuB,GAAGxuB,EAAEyuB,GAClf,MAAK,GAAO,QAAQ,OAAM,EAAG,CAAC,SAASY,GAAGrvB,GAAG,OAAO,KAAY,EAAPA,EAAEsvB,OAAS,KAAa,IAARtvB,EAAE2R,MAAU,CAAC,SAAS4d,GAAGvvB,GAAG,GAAG0uB,GAAE,CAAC,IAAIzuB,EAAEwuB,GAAG,GAAGxuB,EAAE,CAAC,IAAIC,EAAED,EAAE,IAAI+uB,GAAGhvB,EAAEC,GAAG,CAAC,GAAGovB,GAAGrvB,GAAG,MAAMiF,MAAMlF,EAAE,MAAME,EAAEurB,GAAGtrB,EAAE2jB,aAAa,IAAIriB,EAAEgtB,GAAGvuB,GAAG+uB,GAAGhvB,EAAEC,GAAG2uB,GAAGptB,EAAEtB,IAAIF,EAAE2R,OAAe,KAAT3R,EAAE2R,MAAY,EAAE+c,IAAE,EAAGF,GAAGxuB,EAAE,CAAC,KAAK,CAAC,GAAGqvB,GAAGrvB,GAAG,MAAMiF,MAAMlF,EAAE,MAAMC,EAAE2R,OAAe,KAAT3R,EAAE2R,MAAY,EAAE+c,IAAE,EAAGF,GAAGxuB,CAAC,CAAC,CAAC,CAAC,SAASwvB,GAAGxvB,GAAG,IAAIA,EAAEA,EAAE0R,OAAO,OAAO1R,GAAG,IAAIA,EAAEmG,KAAK,IAAInG,EAAEmG,KAAK,KAAKnG,EAAEmG,KAAKnG,EAAEA,EAAE0R,OAAO8c,GAAGxuB,CAAC,CACha,SAASyvB,GAAGzvB,GAAG,GAAGA,IAAIwuB,GAAG,OAAM,EAAG,IAAIE,GAAE,OAAOc,GAAGxvB,GAAG0uB,IAAE,GAAG,EAAG,IAAIzuB,EAAkG,IAA/FA,EAAE,IAAID,EAAEmG,QAAQlG,EAAE,IAAID,EAAEmG,OAAgBlG,EAAE,UAAXA,EAAED,EAAEkC,OAAmB,SAASjC,IAAIwqB,GAAGzqB,EAAEkC,KAAKlC,EAAE0vB,gBAAmBzvB,IAAIA,EAAEwuB,IAAI,CAAC,GAAGY,GAAGrvB,GAAG,MAAM2vB,KAAK1qB,MAAMlF,EAAE,MAAM,KAAKE,GAAG2uB,GAAG5uB,EAAEC,GAAGA,EAAEurB,GAAGvrB,EAAE4jB,YAAY,CAAO,GAAN2L,GAAGxvB,GAAM,KAAKA,EAAEmG,IAAI,CAAgD,KAA7BnG,EAAE,QAApBA,EAAEA,EAAE6R,eAAyB7R,EAAE8R,WAAW,MAAW,MAAM7M,MAAMlF,EAAE,MAAMC,EAAE,CAAiB,IAAhBA,EAAEA,EAAE6jB,YAAgB5jB,EAAE,EAAED,GAAG,CAAC,GAAG,IAAIA,EAAE0K,SAAS,CAAC,IAAIxK,EAAEF,EAAE6c,KAAK,GAAG,OAAO3c,EAAE,CAAC,GAAG,IAAID,EAAE,CAACwuB,GAAGjD,GAAGxrB,EAAE6jB,aAAa,MAAM7jB,CAAC,CAACC,GAAG,KAAK,MAAMC,GAAG,OAAOA,GAAG,OAAOA,GAAGD,GAAG,CAACD,EAAEA,EAAE6jB,WAAW,CAAC4K,GACjgB,IAAI,CAAC,MAAMA,GAAGD,GAAGhD,GAAGxrB,EAAEgQ,UAAU6T,aAAa,KAAK,OAAM,CAAE,CAAC,SAAS8L,KAAK,IAAI,IAAI3vB,EAAEyuB,GAAGzuB,GAAGA,EAAEwrB,GAAGxrB,EAAE6jB,YAAY,CAAC,SAAS+L,KAAKnB,GAAGD,GAAG,KAAKE,IAAE,CAAE,CAAC,SAASmB,GAAG7vB,GAAG,OAAO2uB,GAAGA,GAAG,CAAC3uB,GAAG2uB,GAAGxe,KAAKnQ,EAAE,CAAC,IAAI8vB,GAAGrsB,EAAGoU,wBAAwB,SAASkY,GAAG/vB,EAAEC,GAAG,GAAGD,GAAGA,EAAEgwB,aAAa,CAA4B,IAAI,IAAI9vB,KAAnCD,EAAE6E,EAAE,CAAC,EAAE7E,GAAGD,EAAEA,EAAEgwB,kBAA4B,IAAS/vB,EAAEC,KAAKD,EAAEC,GAAGF,EAAEE,IAAI,OAAOD,CAAC,CAAC,OAAOA,CAAC,CAAC,IAAIgwB,GAAG/D,GAAG,MAAMgE,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAK,SAASC,KAAKD,GAAGD,GAAGD,GAAG,IAAI,CAAC,SAASI,GAAGtwB,GAAG,IAAIC,EAAEgwB,GAAG9d,QAAQga,GAAE8D,IAAIjwB,EAAEuwB,cAActwB,CAAC,CACjd,SAASuwB,GAAGxwB,EAAEC,EAAEC,GAAG,KAAK,OAAOF,GAAG,CAAC,IAAIwB,EAAExB,EAAEyR,UAA+H,IAApHzR,EAAEywB,WAAWxwB,KAAKA,GAAGD,EAAEywB,YAAYxwB,EAAE,OAAOuB,IAAIA,EAAEivB,YAAYxwB,IAAI,OAAOuB,IAAIA,EAAEivB,WAAWxwB,KAAKA,IAAIuB,EAAEivB,YAAYxwB,GAAMD,IAAIE,EAAE,MAAMF,EAAEA,EAAE0R,MAAM,CAAC,CAAC,SAASgf,GAAG1wB,EAAEC,GAAGiwB,GAAGlwB,EAAEowB,GAAGD,GAAG,KAAsB,QAAjBnwB,EAAEA,EAAE2wB,eAAuB,OAAO3wB,EAAE4wB,eAAe,KAAK5wB,EAAE6wB,MAAM5wB,KAAK6wB,IAAG,GAAI9wB,EAAE4wB,aAAa,KAAK,CACtU,SAASG,GAAG/wB,GAAG,IAAIC,EAAED,EAAEuwB,cAAc,GAAGH,KAAKpwB,EAAE,GAAGA,EAAE,CAACgxB,QAAQhxB,EAAEixB,cAAchxB,EAAEixB,KAAK,MAAM,OAAOf,GAAG,CAAC,GAAG,OAAOD,GAAG,MAAMjrB,MAAMlF,EAAE,MAAMowB,GAAGnwB,EAAEkwB,GAAGS,aAAa,CAACE,MAAM,EAAED,aAAa5wB,EAAE,MAAMmwB,GAAGA,GAAGe,KAAKlxB,EAAE,OAAOC,CAAC,CAAC,IAAIkxB,GAAG,KAAK,SAASC,GAAGpxB,GAAG,OAAOmxB,GAAGA,GAAG,CAACnxB,GAAGmxB,GAAGhhB,KAAKnQ,EAAE,CAAC,SAASqxB,GAAGrxB,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAExB,EAAEqxB,YAA+E,OAAnE,OAAO7vB,GAAGvB,EAAEgxB,KAAKhxB,EAAEkxB,GAAGnxB,KAAKC,EAAEgxB,KAAKzvB,EAAEyvB,KAAKzvB,EAAEyvB,KAAKhxB,GAAGD,EAAEqxB,YAAYpxB,EAASqxB,GAAGvxB,EAAEwB,EAAE,CAChY,SAAS+vB,GAAGvxB,EAAEC,GAAGD,EAAE6wB,OAAO5wB,EAAE,IAAIC,EAAEF,EAAEyR,UAAqC,IAA3B,OAAOvR,IAAIA,EAAE2wB,OAAO5wB,GAAGC,EAAEF,EAAMA,EAAEA,EAAE0R,OAAO,OAAO1R,GAAGA,EAAEywB,YAAYxwB,EAAgB,QAAdC,EAAEF,EAAEyR,aAAqBvR,EAAEuwB,YAAYxwB,GAAGC,EAAEF,EAAEA,EAAEA,EAAE0R,OAAO,OAAO,IAAIxR,EAAEiG,IAAIjG,EAAE8P,UAAU,IAAI,CAAC,IAAIwhB,IAAG,EAAG,SAASC,GAAGzxB,GAAGA,EAAE0xB,YAAY,CAACC,UAAU3xB,EAAE6R,cAAc+f,gBAAgB,KAAKC,eAAe,KAAKC,OAAO,CAACC,QAAQ,KAAKT,YAAY,KAAKT,MAAM,GAAGmB,QAAQ,KAAK,CACpX,SAASC,GAAGjyB,EAAEC,GAAGD,EAAEA,EAAE0xB,YAAYzxB,EAAEyxB,cAAc1xB,IAAIC,EAAEyxB,YAAY,CAACC,UAAU3xB,EAAE2xB,UAAUC,gBAAgB5xB,EAAE4xB,gBAAgBC,eAAe7xB,EAAE6xB,eAAeC,OAAO9xB,EAAE8xB,OAAOE,QAAQhyB,EAAEgyB,SAAS,CAAC,SAASE,GAAGlyB,EAAEC,GAAG,MAAM,CAACkyB,UAAUnyB,EAAEoyB,KAAKnyB,EAAEkG,IAAI,EAAEksB,QAAQ,KAAKC,SAAS,KAAKpB,KAAK,KAAK,CACtR,SAASqB,GAAGvyB,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAE0xB,YAAY,GAAG,OAAOlwB,EAAE,OAAO,KAAgB,GAAXA,EAAEA,EAAEswB,OAAU,KAAO,EAAFU,IAAK,CAAC,IAAI/wB,EAAED,EAAEuwB,QAA+D,OAAvD,OAAOtwB,EAAExB,EAAEixB,KAAKjxB,GAAGA,EAAEixB,KAAKzvB,EAAEyvB,KAAKzvB,EAAEyvB,KAAKjxB,GAAGuB,EAAEuwB,QAAQ9xB,EAASsxB,GAAGvxB,EAAEE,EAAE,CAAoF,OAAnE,QAAhBuB,EAAED,EAAE8vB,cAAsBrxB,EAAEixB,KAAKjxB,EAAEmxB,GAAG5vB,KAAKvB,EAAEixB,KAAKzvB,EAAEyvB,KAAKzvB,EAAEyvB,KAAKjxB,GAAGuB,EAAE8vB,YAAYrxB,EAASsxB,GAAGvxB,EAAEE,EAAE,CAAC,SAASuyB,GAAGzyB,EAAEC,EAAEC,GAAmB,GAAG,QAAnBD,EAAEA,EAAEyxB,eAA0BzxB,EAAEA,EAAE6xB,OAAO,KAAO,QAAF5xB,IAAY,CAAC,IAAIsB,EAAEvB,EAAE4wB,MAAwB3wB,GAAlBsB,GAAGxB,EAAEyU,aAAkBxU,EAAE4wB,MAAM3wB,EAAEkV,GAAGpV,EAAEE,EAAE,CAAC,CACrZ,SAASwyB,GAAG1yB,EAAEC,GAAG,IAAIC,EAAEF,EAAE0xB,YAAYlwB,EAAExB,EAAEyR,UAAU,GAAG,OAAOjQ,GAAoBtB,KAAhBsB,EAAEA,EAAEkwB,aAAmB,CAAC,IAAIjwB,EAAE,KAAKC,EAAE,KAAyB,GAAG,QAAvBxB,EAAEA,EAAE0xB,iBAA4B,CAAC,EAAE,CAAC,IAAIjwB,EAAE,CAACwwB,UAAUjyB,EAAEiyB,UAAUC,KAAKlyB,EAAEkyB,KAAKjsB,IAAIjG,EAAEiG,IAAIksB,QAAQnyB,EAAEmyB,QAAQC,SAASpyB,EAAEoyB,SAASpB,KAAK,MAAM,OAAOxvB,EAAED,EAAEC,EAAEC,EAAED,EAAEA,EAAEwvB,KAAKvvB,EAAEzB,EAAEA,EAAEgxB,IAAI,OAAO,OAAOhxB,GAAG,OAAOwB,EAAED,EAAEC,EAAEzB,EAAEyB,EAAEA,EAAEwvB,KAAKjxB,CAAC,MAAMwB,EAAEC,EAAEzB,EAAiH,OAA/GC,EAAE,CAACyxB,UAAUnwB,EAAEmwB,UAAUC,gBAAgBnwB,EAAEowB,eAAenwB,EAAEowB,OAAOtwB,EAAEswB,OAAOE,QAAQxwB,EAAEwwB,cAAShyB,EAAE0xB,YAAYxxB,EAAQ,CAAoB,QAAnBF,EAAEE,EAAE2xB,gBAAwB3xB,EAAE0xB,gBAAgB3xB,EAAED,EAAEkxB,KACnfjxB,EAAEC,EAAE2xB,eAAe5xB,CAAC,CACpB,SAAS0yB,GAAG3yB,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAEzB,EAAE0xB,YAAYF,IAAG,EAAG,IAAI9vB,EAAED,EAAEmwB,gBAAgBjwB,EAAEF,EAAEowB,eAAehsB,EAAEpE,EAAEqwB,OAAOC,QAAQ,GAAG,OAAOlsB,EAAE,CAACpE,EAAEqwB,OAAOC,QAAQ,KAAK,IAAIjsB,EAAED,EAAED,EAAEE,EAAEorB,KAAKprB,EAAEorB,KAAK,KAAK,OAAOvvB,EAAED,EAAEkE,EAAEjE,EAAEuvB,KAAKtrB,EAAEjE,EAAEmE,EAAE,IAAIkL,EAAEhR,EAAEyR,UAAU,OAAOT,KAAoBnL,GAAhBmL,EAAEA,EAAE0gB,aAAgBG,kBAAmBlwB,IAAI,OAAOkE,EAAEmL,EAAE4gB,gBAAgBhsB,EAAEC,EAAEqrB,KAAKtrB,EAAEoL,EAAE6gB,eAAe/rB,GAAG,CAAC,GAAG,OAAOpE,EAAE,CAAC,IAAIkxB,EAAEnxB,EAAEkwB,UAA6B,IAAnBhwB,EAAE,EAAEqP,EAAEpL,EAAEE,EAAE,KAAKD,EAAEnE,IAAI,CAAC,IAAImxB,EAAEhtB,EAAEusB,KAAKU,EAAEjtB,EAAEssB,UAAU,IAAI3wB,EAAEqxB,KAAKA,EAAE,CAAC,OAAO7hB,IAAIA,EAAEA,EAAEkgB,KAAK,CAACiB,UAAUW,EAAEV,KAAK,EAAEjsB,IAAIN,EAAEM,IAAIksB,QAAQxsB,EAAEwsB,QAAQC,SAASzsB,EAAEysB,SACvfpB,KAAK,OAAOlxB,EAAE,CAAC,IAAI8oB,EAAE9oB,EAAE+oB,EAAEljB,EAAU,OAARgtB,EAAE5yB,EAAE6yB,EAAE5yB,EAAS6oB,EAAE5iB,KAAK,KAAK,EAAc,GAAG,oBAAf2iB,EAAEC,EAAEsJ,SAAiC,CAACO,EAAE9J,EAAE7lB,KAAK6vB,EAAEF,EAAEC,GAAG,MAAM7yB,CAAC,CAAC4yB,EAAE9J,EAAE,MAAM9oB,EAAE,KAAK,EAAE8oB,EAAEnX,OAAe,MAATmX,EAAEnX,MAAa,IAAI,KAAK,EAAsD,GAAG,QAA3CkhB,EAAE,oBAAd/J,EAAEC,EAAEsJ,SAAgCvJ,EAAE7lB,KAAK6vB,EAAEF,EAAEC,GAAG/J,SAAe,IAAS+J,EAAE,MAAM7yB,EAAE4yB,EAAE9tB,EAAE,CAAC,EAAE8tB,EAAEC,GAAG,MAAM7yB,EAAE,KAAK,EAAEwxB,IAAG,EAAG,CAAC,OAAO3rB,EAAEysB,UAAU,IAAIzsB,EAAEusB,OAAOpyB,EAAE2R,OAAO,GAAe,QAAZkhB,EAAEpxB,EAAEuwB,SAAiBvwB,EAAEuwB,QAAQ,CAACnsB,GAAGgtB,EAAE1iB,KAAKtK,GAAG,MAAMitB,EAAE,CAACX,UAAUW,EAAEV,KAAKS,EAAE1sB,IAAIN,EAAEM,IAAIksB,QAAQxsB,EAAEwsB,QAAQC,SAASzsB,EAAEysB,SAASpB,KAAK,MAAM,OAAOlgB,GAAGpL,EAAEoL,EAAE8hB,EAAEhtB,EAAE8sB,GAAG5hB,EAAEA,EAAEkgB,KAAK4B,EAAEnxB,GAAGkxB,EAC3e,GAAG,QAAZhtB,EAAEA,EAAEqrB,MAAiB,IAAsB,QAAnBrrB,EAAEpE,EAAEqwB,OAAOC,SAAiB,MAAelsB,GAAJgtB,EAAEhtB,GAAMqrB,KAAK2B,EAAE3B,KAAK,KAAKzvB,EAAEowB,eAAegB,EAAEpxB,EAAEqwB,OAAOC,QAAQ,IAAI,EAAsG,GAA5F,OAAO/gB,IAAIlL,EAAE8sB,GAAGnxB,EAAEkwB,UAAU7rB,EAAErE,EAAEmwB,gBAAgBhsB,EAAEnE,EAAEowB,eAAe7gB,EAA4B,QAA1B/Q,EAAEwB,EAAEqwB,OAAOR,aAAwB,CAAC7vB,EAAExB,EAAE,GAAG0B,GAAGF,EAAE2wB,KAAK3wB,EAAEA,EAAEyvB,WAAWzvB,IAAIxB,EAAE,MAAM,OAAOyB,IAAID,EAAEqwB,OAAOjB,MAAM,GAAGkC,IAAIpxB,EAAE3B,EAAE6wB,MAAMlvB,EAAE3B,EAAE6R,cAAc+gB,CAAC,CAAC,CAC9V,SAASI,GAAGhzB,EAAEC,EAAEC,GAA8B,GAA3BF,EAAEC,EAAE+xB,QAAQ/xB,EAAE+xB,QAAQ,KAAQ,OAAOhyB,EAAE,IAAIC,EAAE,EAAEA,EAAED,EAAEI,OAAOH,IAAI,CAAC,IAAIuB,EAAExB,EAAEC,GAAGwB,EAAED,EAAE8wB,SAAS,GAAG,OAAO7wB,EAAE,CAAqB,GAApBD,EAAE8wB,SAAS,KAAK9wB,EAAEtB,EAAK,oBAAoBuB,EAAE,MAAMwD,MAAMlF,EAAE,IAAI0B,IAAIA,EAAEwB,KAAKzB,EAAE,CAAC,CAAC,CAAC,IAAIyxB,IAAI,IAAIrzB,EAAGszB,WAAWC,KAAK,SAASC,GAAGpzB,EAAEC,EAAEC,EAAEsB,GAA8BtB,EAAE,QAAXA,EAAEA,EAAEsB,EAAtBvB,EAAED,EAAE6R,sBAAmC,IAAS3R,EAAED,EAAE6E,EAAE,CAAC,EAAE7E,EAAEC,GAAGF,EAAE6R,cAAc3R,EAAE,IAAIF,EAAE6wB,QAAQ7wB,EAAE0xB,YAAYC,UAAUzxB,EAAE,CAClX,IAAImzB,GAAG,CAACC,UAAU,SAAStzB,GAAG,SAAOA,EAAEA,EAAEuzB,kBAAiB/hB,GAAGxR,KAAKA,CAAI,EAAEwzB,gBAAgB,SAASxzB,EAAEC,EAAEC,GAAGF,EAAEA,EAAEuzB,gBAAgB,IAAI/xB,EAAEiyB,KAAIhyB,EAAEiyB,GAAG1zB,GAAG0B,EAAEwwB,GAAG1wB,EAAEC,GAAGC,EAAE2wB,QAAQpyB,OAAE,IAASC,GAAG,OAAOA,IAAIwB,EAAE4wB,SAASpyB,GAAe,QAAZD,EAAEsyB,GAAGvyB,EAAE0B,EAAED,MAAckyB,GAAG1zB,EAAED,EAAEyB,EAAED,GAAGixB,GAAGxyB,EAAED,EAAEyB,GAAG,EAAEmyB,oBAAoB,SAAS5zB,EAAEC,EAAEC,GAAGF,EAAEA,EAAEuzB,gBAAgB,IAAI/xB,EAAEiyB,KAAIhyB,EAAEiyB,GAAG1zB,GAAG0B,EAAEwwB,GAAG1wB,EAAEC,GAAGC,EAAEyE,IAAI,EAAEzE,EAAE2wB,QAAQpyB,OAAE,IAASC,GAAG,OAAOA,IAAIwB,EAAE4wB,SAASpyB,GAAe,QAAZD,EAAEsyB,GAAGvyB,EAAE0B,EAAED,MAAckyB,GAAG1zB,EAAED,EAAEyB,EAAED,GAAGixB,GAAGxyB,EAAED,EAAEyB,GAAG,EAAEoyB,mBAAmB,SAAS7zB,EAAEC,GAAGD,EAAEA,EAAEuzB,gBAAgB,IAAIrzB,EAAEuzB,KAAIjyB,EACnfkyB,GAAG1zB,GAAGyB,EAAEywB,GAAGhyB,EAAEsB,GAAGC,EAAE0E,IAAI,OAAE,IAASlG,GAAG,OAAOA,IAAIwB,EAAE6wB,SAASryB,GAAe,QAAZA,EAAEsyB,GAAGvyB,EAAEyB,EAAED,MAAcmyB,GAAG1zB,EAAED,EAAEwB,EAAEtB,GAAGuyB,GAAGxyB,EAAED,EAAEwB,GAAG,GAAG,SAASsyB,GAAG9zB,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,GAAiB,MAAM,oBAApB3B,EAAEA,EAAEgQ,WAAsC+jB,sBAAsB/zB,EAAE+zB,sBAAsBvyB,EAAEE,EAAEC,IAAG1B,EAAEiB,YAAWjB,EAAEiB,UAAU8yB,wBAAsBxQ,GAAGtjB,EAAEsB,KAAKgiB,GAAG/hB,EAAEC,GAAK,CAC1S,SAASuyB,GAAGj0B,EAAEC,EAAEC,GAAG,IAAIsB,GAAE,EAAGC,EAAE4qB,GAAO3qB,EAAEzB,EAAEi0B,YAA2W,MAA/V,kBAAkBxyB,GAAG,OAAOA,EAAEA,EAAEqvB,GAAGrvB,IAAID,EAAEorB,GAAG5sB,GAAGusB,GAAGF,GAAEna,QAAyBzQ,GAAGF,EAAE,QAAtBA,EAAEvB,EAAEysB,oBAA4B,IAASlrB,GAAGirB,GAAGzsB,EAAEyB,GAAG4qB,IAAIpsB,EAAE,IAAIA,EAAEC,EAAEwB,GAAG1B,EAAE6R,cAAc,OAAO5R,EAAEk0B,YAAO,IAASl0B,EAAEk0B,MAAMl0B,EAAEk0B,MAAM,KAAKl0B,EAAEm0B,QAAQf,GAAGrzB,EAAEgQ,UAAU/P,EAAEA,EAAEszB,gBAAgBvzB,EAAEwB,KAAIxB,EAAEA,EAAEgQ,WAAY2c,4CAA4ClrB,EAAEzB,EAAE4sB,0CAA0ClrB,GAAUzB,CAAC,CAC5Z,SAASo0B,GAAGr0B,EAAEC,EAAEC,EAAEsB,GAAGxB,EAAEC,EAAEk0B,MAAM,oBAAoBl0B,EAAEq0B,2BAA2Br0B,EAAEq0B,0BAA0Bp0B,EAAEsB,GAAG,oBAAoBvB,EAAEs0B,kCAAkCt0B,EAAEs0B,iCAAiCr0B,EAAEsB,GAAGvB,EAAEk0B,QAAQn0B,GAAGqzB,GAAGO,oBAAoB3zB,EAAEA,EAAEk0B,MAAM,KAAK,CACpQ,SAASK,GAAGx0B,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAEzB,EAAEgQ,UAAUvO,EAAEgzB,MAAMv0B,EAAEuB,EAAE0yB,MAAMn0B,EAAE6R,cAAcpQ,EAAE0xB,KAAKF,GAAGxB,GAAGzxB,GAAG,IAAI0B,EAAEzB,EAAEi0B,YAAY,kBAAkBxyB,GAAG,OAAOA,EAAED,EAAEuvB,QAAQD,GAAGrvB,IAAIA,EAAEmrB,GAAG5sB,GAAGusB,GAAGF,GAAEna,QAAQ1Q,EAAEuvB,QAAQvE,GAAGzsB,EAAE0B,IAAID,EAAE0yB,MAAMn0B,EAAE6R,cAA2C,oBAA7BnQ,EAAEzB,EAAEy0B,4BAAiDtB,GAAGpzB,EAAEC,EAAEyB,EAAExB,GAAGuB,EAAE0yB,MAAMn0B,EAAE6R,eAAe,oBAAoB5R,EAAEy0B,0BAA0B,oBAAoBjzB,EAAEkzB,yBAAyB,oBAAoBlzB,EAAEmzB,2BAA2B,oBAAoBnzB,EAAEozB,qBAAqB50B,EAAEwB,EAAE0yB,MACrf,oBAAoB1yB,EAAEozB,oBAAoBpzB,EAAEozB,qBAAqB,oBAAoBpzB,EAAEmzB,2BAA2BnzB,EAAEmzB,4BAA4B30B,IAAIwB,EAAE0yB,OAAOd,GAAGO,oBAAoBnyB,EAAEA,EAAE0yB,MAAM,MAAMxB,GAAG3yB,EAAEE,EAAEuB,EAAED,GAAGC,EAAE0yB,MAAMn0B,EAAE6R,eAAe,oBAAoBpQ,EAAEqzB,oBAAoB90B,EAAE2R,OAAO,QAAQ,CACpS,SAASojB,GAAG/0B,EAAEC,EAAEC,GAAW,GAAG,QAAXF,EAAEE,EAAE80B,MAAiB,oBAAoBh1B,GAAG,kBAAkBA,EAAE,CAAC,GAAGE,EAAE+0B,OAAO,CAAY,GAAX/0B,EAAEA,EAAE+0B,OAAY,CAAC,GAAG,IAAI/0B,EAAEiG,IAAI,MAAMlB,MAAMlF,EAAE,MAAM,IAAIyB,EAAEtB,EAAE8P,SAAS,CAAC,IAAIxO,EAAE,MAAMyD,MAAMlF,EAAE,IAAIC,IAAI,IAAIyB,EAAED,EAAEE,EAAE,GAAG1B,EAAE,OAAG,OAAOC,GAAG,OAAOA,EAAE+0B,KAAK,oBAAoB/0B,EAAE+0B,KAAK/0B,EAAE+0B,IAAIE,aAAaxzB,EAASzB,EAAE+0B,KAAI/0B,EAAE,SAASD,GAAG,IAAIC,EAAEwB,EAAE0xB,KAAKlzB,IAAIgzB,KAAKhzB,EAAEwB,EAAE0xB,KAAK,CAAC,GAAG,OAAOnzB,SAASC,EAAEyB,GAAGzB,EAAEyB,GAAG1B,CAAC,EAAEC,EAAEi1B,WAAWxzB,EAASzB,EAAC,CAAC,GAAG,kBAAkBD,EAAE,MAAMiF,MAAMlF,EAAE,MAAM,IAAIG,EAAE+0B,OAAO,MAAMhwB,MAAMlF,EAAE,IAAIC,GAAI,CAAC,OAAOA,CAAC,CACre,SAASm1B,GAAGn1B,EAAEC,GAAuC,MAApCD,EAAEiB,OAAOC,UAAUgJ,SAASjH,KAAKhD,GAASgF,MAAMlF,EAAE,GAAG,oBAAoBC,EAAE,qBAAqBiB,OAAO6M,KAAK7N,GAAGm1B,KAAK,MAAM,IAAIp1B,GAAI,CAAC,SAASq1B,GAAGr1B,GAAiB,OAAOC,EAAfD,EAAEyG,OAAezG,EAAEwG,SAAS,CACrM,SAAS8uB,GAAGt1B,GAAG,SAASC,EAAEA,EAAEC,GAAG,GAAGF,EAAE,CAAC,IAAIwB,EAAEvB,EAAE8uB,UAAU,OAAOvtB,GAAGvB,EAAE8uB,UAAU,CAAC7uB,GAAGD,EAAE0R,OAAO,IAAInQ,EAAE2O,KAAKjQ,EAAE,CAAC,CAAC,SAASA,EAAEA,EAAEsB,GAAG,IAAIxB,EAAE,OAAO,KAAK,KAAK,OAAOwB,GAAGvB,EAAEC,EAAEsB,GAAGA,EAAEA,EAAE0Q,QAAQ,OAAO,IAAI,CAAC,SAAS1Q,EAAExB,EAAEC,GAAG,IAAID,EAAE,IAAIkW,IAAI,OAAOjW,GAAG,OAAOA,EAAEke,IAAIne,EAAEyF,IAAIxF,EAAEke,IAAIle,GAAGD,EAAEyF,IAAIxF,EAAEs1B,MAAMt1B,GAAGA,EAAEA,EAAEiS,QAAQ,OAAOlS,CAAC,CAAC,SAASyB,EAAEzB,EAAEC,GAAsC,OAAnCD,EAAEw1B,GAAGx1B,EAAEC,IAAKs1B,MAAM,EAAEv1B,EAAEkS,QAAQ,KAAYlS,CAAC,CAAC,SAAS0B,EAAEzB,EAAEC,EAAEsB,GAAa,OAAVvB,EAAEs1B,MAAM/zB,EAAMxB,EAA6C,QAAjBwB,EAAEvB,EAAEwR,YAA6BjQ,EAAEA,EAAE+zB,OAAQr1B,GAAGD,EAAE0R,OAAO,EAAEzR,GAAGsB,GAAEvB,EAAE0R,OAAO,EAASzR,IAArGD,EAAE0R,OAAO,QAAQzR,EAAqF,CAAC,SAASyB,EAAE1B,GACzd,OAD4dD,GAC7f,OAAOC,EAAEwR,YAAYxR,EAAE0R,OAAO,GAAU1R,CAAC,CAAC,SAAS4F,EAAE7F,EAAEC,EAAEC,EAAEsB,GAAG,OAAG,OAAOvB,GAAG,IAAIA,EAAEkG,MAAWlG,EAAEw1B,GAAGv1B,EAAEF,EAAEsvB,KAAK9tB,IAAKkQ,OAAO1R,EAAEC,KAAEA,EAAEwB,EAAExB,EAAEC,IAAKwR,OAAO1R,EAASC,EAAC,CAAC,SAAS6F,EAAE9F,EAAEC,EAAEC,EAAEsB,GAAG,IAAIE,EAAExB,EAAEgC,KAAK,OAAGR,IAAIqC,EAAUiN,EAAEhR,EAAEC,EAAEC,EAAEu0B,MAAMnrB,SAAS9H,EAAEtB,EAAEie,KAAQ,OAAOle,IAAIA,EAAE6uB,cAAcptB,GAAG,kBAAkBA,GAAG,OAAOA,GAAGA,EAAE4E,WAAW9B,GAAI6wB,GAAG3zB,KAAKzB,EAAEiC,QAAaV,EAAEC,EAAExB,EAAEC,EAAEu0B,QAASO,IAAID,GAAG/0B,EAAEC,EAAEC,GAAGsB,EAAEkQ,OAAO1R,EAAEwB,KAAEA,EAAEk0B,GAAGx1B,EAAEgC,KAAKhC,EAAEie,IAAIje,EAAEu0B,MAAM,KAAKz0B,EAAEsvB,KAAK9tB,IAAKwzB,IAAID,GAAG/0B,EAAEC,EAAEC,GAAGsB,EAAEkQ,OAAO1R,EAASwB,EAAC,CAAC,SAASoE,EAAE5F,EAAEC,EAAEC,EAAEsB,GAAG,OAAG,OAAOvB,GAAG,IAAIA,EAAEkG,KACjflG,EAAE+P,UAAUmH,gBAAgBjX,EAAEiX,eAAelX,EAAE+P,UAAU2lB,iBAAiBz1B,EAAEy1B,iBAAsB11B,EAAE21B,GAAG11B,EAAEF,EAAEsvB,KAAK9tB,IAAKkQ,OAAO1R,EAAEC,KAAEA,EAAEwB,EAAExB,EAAEC,EAAEoJ,UAAU,KAAMoI,OAAO1R,EAASC,EAAC,CAAC,SAAS+Q,EAAEhR,EAAEC,EAAEC,EAAEsB,EAAEE,GAAG,OAAG,OAAOzB,GAAG,IAAIA,EAAEkG,MAAWlG,EAAE41B,GAAG31B,EAAEF,EAAEsvB,KAAK9tB,EAAEE,IAAKgQ,OAAO1R,EAAEC,KAAEA,EAAEwB,EAAExB,EAAEC,IAAKwR,OAAO1R,EAASC,EAAC,CAAC,SAAS2yB,EAAE5yB,EAAEC,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,KAAKA,GAAG,kBAAkBA,EAAE,OAAOA,EAAEw1B,GAAG,GAAGx1B,EAAED,EAAEsvB,KAAKpvB,IAAKwR,OAAO1R,EAAEC,EAAE,GAAG,kBAAkBA,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAEqG,UAAU,KAAK3C,EAAG,OAAOzD,EAAEw1B,GAAGz1B,EAAEiC,KAAKjC,EAAEke,IAAIle,EAAEw0B,MAAM,KAAKz0B,EAAEsvB,KAAKpvB,IACjf80B,IAAID,GAAG/0B,EAAE,KAAKC,GAAGC,EAAEwR,OAAO1R,EAAEE,EAAE,KAAK4D,EAAG,OAAO7D,EAAE21B,GAAG31B,EAAED,EAAEsvB,KAAKpvB,IAAKwR,OAAO1R,EAAEC,EAAE,KAAKuE,EAAiB,OAAOouB,EAAE5yB,GAAEwB,EAAnBvB,EAAEwG,OAAmBxG,EAAEuG,UAAUtG,GAAG,GAAG0I,GAAG3I,IAAI2E,EAAG3E,GAAG,OAAOA,EAAE41B,GAAG51B,EAAED,EAAEsvB,KAAKpvB,EAAE,OAAQwR,OAAO1R,EAAEC,EAAEk1B,GAAGn1B,EAAEC,EAAE,CAAC,OAAO,IAAI,CAAC,SAAS4yB,EAAE7yB,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAE,OAAOxB,EAAEA,EAAEke,IAAI,KAAK,GAAG,kBAAkBje,GAAG,KAAKA,GAAG,kBAAkBA,EAAE,OAAO,OAAOuB,EAAE,KAAKoE,EAAE7F,EAAEC,EAAE,GAAGC,EAAEsB,GAAG,GAAG,kBAAkBtB,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAEoG,UAAU,KAAK3C,EAAG,OAAOzD,EAAEie,MAAM1c,EAAEqE,EAAE9F,EAAEC,EAAEC,EAAEsB,GAAG,KAAK,KAAKsC,EAAG,OAAO5D,EAAEie,MAAM1c,EAAEmE,EAAE5F,EAAEC,EAAEC,EAAEsB,GAAG,KAAK,KAAKgD,EAAG,OAAiBquB,EAAE7yB,EACpfC,GADwewB,EAAEvB,EAAEuG,OACxevG,EAAEsG,UAAUhF,GAAG,GAAGoH,GAAG1I,IAAI0E,EAAG1E,GAAG,OAAO,OAAOuB,EAAE,KAAKuP,EAAEhR,EAAEC,EAAEC,EAAEsB,EAAE,MAAM2zB,GAAGn1B,EAAEE,EAAE,CAAC,OAAO,IAAI,CAAC,SAAS4yB,EAAE9yB,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,KAAKA,GAAG,kBAAkBA,EAAE,OAAwBqE,EAAE5F,EAAnBD,EAAEA,EAAEkH,IAAIhH,IAAI,KAAW,GAAGsB,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAE8E,UAAU,KAAK3C,EAAG,OAA2CmC,EAAE7F,EAAtCD,EAAEA,EAAEkH,IAAI,OAAO1F,EAAE2c,IAAIje,EAAEsB,EAAE2c,MAAM,KAAW3c,EAAEC,GAAG,KAAKqC,EAAG,OAA2C8B,EAAE3F,EAAtCD,EAAEA,EAAEkH,IAAI,OAAO1F,EAAE2c,IAAIje,EAAEsB,EAAE2c,MAAM,KAAW3c,EAAEC,GAAG,KAAK+C,EAAiB,OAAOsuB,EAAE9yB,EAAEC,EAAEC,GAAEwB,EAAvBF,EAAEiF,OAAuBjF,EAAEgF,UAAU/E,GAAG,GAAGmH,GAAGpH,IAAIoD,EAAGpD,GAAG,OAAwBwP,EAAE/Q,EAAnBD,EAAEA,EAAEkH,IAAIhH,IAAI,KAAWsB,EAAEC,EAAE,MAAM0zB,GAAGl1B,EAAEuB,EAAE,CAAC,OAAO,IAAI,CAC9f,SAASsnB,EAAErnB,EAAEE,EAAEkE,EAAEC,GAAG,IAAI,IAAIF,EAAE,KAAKoL,EAAE,KAAKkY,EAAEvnB,EAAEwnB,EAAExnB,EAAE,EAAEsnB,EAAE,KAAK,OAAOC,GAAGC,EAAEtjB,EAAEzF,OAAO+oB,IAAI,CAACD,EAAEqM,MAAMpM,GAAGF,EAAEC,EAAEA,EAAE,MAAMD,EAAEC,EAAEhX,QAAQ,IAAI4W,EAAE+J,EAAEpxB,EAAEynB,EAAErjB,EAAEsjB,GAAGrjB,GAAG,GAAG,OAAOgjB,EAAE,CAAC,OAAOI,IAAIA,EAAED,GAAG,KAAK,CAACjpB,GAAGkpB,GAAG,OAAOJ,EAAErX,WAAWxR,EAAEwB,EAAEynB,GAAGvnB,EAAED,EAAEonB,EAAEnnB,EAAEwnB,GAAG,OAAOnY,EAAEpL,EAAEkjB,EAAE9X,EAAEkB,QAAQ4W,EAAE9X,EAAE8X,EAAEI,EAAED,CAAC,CAAC,GAAGE,IAAItjB,EAAEzF,OAAO,OAAOF,EAAEuB,EAAEynB,GAAGwF,IAAGN,GAAG3sB,EAAE0nB,GAAGvjB,EAAE,GAAG,OAAOsjB,EAAE,CAAC,KAAKC,EAAEtjB,EAAEzF,OAAO+oB,IAAkB,QAAdD,EAAE0J,EAAEnxB,EAAEoE,EAAEsjB,GAAGrjB,MAAcnE,EAAED,EAAEwnB,EAAEvnB,EAAEwnB,GAAG,OAAOnY,EAAEpL,EAAEsjB,EAAElY,EAAEkB,QAAQgX,EAAElY,EAAEkY,GAAc,OAAXwF,IAAGN,GAAG3sB,EAAE0nB,GAAUvjB,CAAC,CAAC,IAAIsjB,EAAE1nB,EAAEC,EAAEynB,GAAGC,EAAEtjB,EAAEzF,OAAO+oB,IAAsB,QAAlBF,EAAE6J,EAAE5J,EAAEznB,EAAE0nB,EAAEtjB,EAAEsjB,GAAGrjB,MAAc9F,GAAG,OAAOipB,EAAExX,WAAWyX,EAAE3S,OAAO,OACvf0S,EAAE9K,IAAIgL,EAAEF,EAAE9K,KAAKxc,EAAED,EAAEunB,EAAEtnB,EAAEwnB,GAAG,OAAOnY,EAAEpL,EAAEqjB,EAAEjY,EAAEkB,QAAQ+W,EAAEjY,EAAEiY,GAAuD,OAApDjpB,GAAGkpB,EAAE3mB,SAAQ,SAASvC,GAAG,OAAOC,EAAEwB,EAAEzB,EAAE,IAAG0uB,IAAGN,GAAG3sB,EAAE0nB,GAAUvjB,CAAC,CAAC,SAASmjB,EAAEtnB,EAAEE,EAAEkE,EAAEC,GAAG,IAAIF,EAAEhB,EAAGiB,GAAG,GAAG,oBAAoBD,EAAE,MAAMX,MAAMlF,EAAE,MAAkB,GAAG,OAAf8F,EAAED,EAAE3C,KAAK4C,IAAc,MAAMZ,MAAMlF,EAAE,MAAM,IAAI,IAAImpB,EAAEtjB,EAAE,KAAKoL,EAAErP,EAAEwnB,EAAExnB,EAAE,EAAEsnB,EAAE,KAAKH,EAAEjjB,EAAEqrB,OAAO,OAAOlgB,IAAI8X,EAAEgN,KAAK3M,IAAIL,EAAEjjB,EAAEqrB,OAAO,CAAClgB,EAAEukB,MAAMpM,GAAGF,EAAEjY,EAAEA,EAAE,MAAMiY,EAAEjY,EAAEkB,QAAQ,IAAI6W,EAAE8J,EAAEpxB,EAAEuP,EAAE8X,EAAEnhB,MAAM7B,GAAG,GAAG,OAAOijB,EAAE,CAAC,OAAO/X,IAAIA,EAAEiY,GAAG,KAAK,CAACjpB,GAAGgR,GAAG,OAAO+X,EAAEtX,WAAWxR,EAAEwB,EAAEuP,GAAGrP,EAAED,EAAEqnB,EAAEpnB,EAAEwnB,GAAG,OAAOD,EAAEtjB,EAAEmjB,EAAEG,EAAEhX,QAAQ6W,EAAEG,EAAEH,EAAE/X,EAAEiY,CAAC,CAAC,GAAGH,EAAEgN,KAAK,OAAO51B,EAAEuB,EACzfuP,GAAG0d,IAAGN,GAAG3sB,EAAE0nB,GAAGvjB,EAAE,GAAG,OAAOoL,EAAE,CAAC,MAAM8X,EAAEgN,KAAK3M,IAAIL,EAAEjjB,EAAEqrB,OAAwB,QAAjBpI,EAAE8J,EAAEnxB,EAAEqnB,EAAEnhB,MAAM7B,MAAcnE,EAAED,EAAEonB,EAAEnnB,EAAEwnB,GAAG,OAAOD,EAAEtjB,EAAEkjB,EAAEI,EAAEhX,QAAQ4W,EAAEI,EAAEJ,GAAc,OAAX4F,IAAGN,GAAG3sB,EAAE0nB,GAAUvjB,CAAC,CAAC,IAAIoL,EAAExP,EAAEC,EAAEuP,IAAI8X,EAAEgN,KAAK3M,IAAIL,EAAEjjB,EAAEqrB,OAA4B,QAArBpI,EAAEgK,EAAE9hB,EAAEvP,EAAE0nB,EAAEL,EAAEnhB,MAAM7B,MAAc9F,GAAG,OAAO8oB,EAAErX,WAAWT,EAAEuF,OAAO,OAAOuS,EAAE3K,IAAIgL,EAAEL,EAAE3K,KAAKxc,EAAED,EAAEonB,EAAEnnB,EAAEwnB,GAAG,OAAOD,EAAEtjB,EAAEkjB,EAAEI,EAAEhX,QAAQ4W,EAAEI,EAAEJ,GAAuD,OAApD9oB,GAAGgR,EAAEzO,SAAQ,SAASvC,GAAG,OAAOC,EAAEwB,EAAEzB,EAAE,IAAG0uB,IAAGN,GAAG3sB,EAAE0nB,GAAUvjB,CAAC,CAG3T,OAH4T,SAASojB,EAAEhpB,EAAEwB,EAAEE,EAAEmE,GAAkF,GAA/E,kBAAkBnE,GAAG,OAAOA,GAAGA,EAAEQ,OAAO6B,GAAI,OAAOrC,EAAEyc,MAAMzc,EAAEA,EAAE+yB,MAAMnrB,UAAa,kBAAkB5H,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAE4E,UAAU,KAAK3C,EAAG3D,EAAE,CAAC,IAAI,IAAI8F,EAC7hBpE,EAAEyc,IAAIvY,EAAEpE,EAAE,OAAOoE,GAAG,CAAC,GAAGA,EAAEuY,MAAMrY,EAAE,CAAU,IAATA,EAAEpE,EAAEQ,QAAY6B,GAAI,GAAG,IAAI6B,EAAEO,IAAI,CAACjG,EAAEF,EAAE4F,EAAEsM,UAAS1Q,EAAEC,EAAEmE,EAAElE,EAAE+yB,MAAMnrB,WAAYoI,OAAO1R,EAAEA,EAAEwB,EAAE,MAAMxB,CAAC,OAAO,GAAG4F,EAAEkpB,cAAchpB,GAAG,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEQ,WAAW9B,GAAI6wB,GAAGvvB,KAAKF,EAAE1D,KAAK,CAAChC,EAAEF,EAAE4F,EAAEsM,UAAS1Q,EAAEC,EAAEmE,EAAElE,EAAE+yB,QAASO,IAAID,GAAG/0B,EAAE4F,EAAElE,GAAGF,EAAEkQ,OAAO1R,EAAEA,EAAEwB,EAAE,MAAMxB,CAAC,CAACE,EAAEF,EAAE4F,GAAG,KAAK,CAAM3F,EAAED,EAAE4F,GAAGA,EAAEA,EAAEsM,OAAO,CAACxQ,EAAEQ,OAAO6B,IAAIvC,EAAEq0B,GAAGn0B,EAAE+yB,MAAMnrB,SAAStJ,EAAEsvB,KAAKzpB,EAAEnE,EAAEyc,MAAOzM,OAAO1R,EAAEA,EAAEwB,KAAIqE,EAAE6vB,GAAGh0B,EAAEQ,KAAKR,EAAEyc,IAAIzc,EAAE+yB,MAAM,KAAKz0B,EAAEsvB,KAAKzpB,IAAKmvB,IAAID,GAAG/0B,EAAEwB,EAAEE,GAAGmE,EAAE6L,OAAO1R,EAAEA,EAAE6F,EAAE,CAAC,OAAOlE,EAAE3B,GAAG,KAAK8D,EAAG9D,EAAE,CAAC,IAAI4F,EAAElE,EAAEyc,IAAI,OACzf3c,GAAG,CAAC,GAAGA,EAAE2c,MAAMvY,EAAC,CAAC,GAAG,IAAIpE,EAAE2E,KAAK3E,EAAEwO,UAAUmH,gBAAgBzV,EAAEyV,eAAe3V,EAAEwO,UAAU2lB,iBAAiBj0B,EAAEi0B,eAAe,CAACz1B,EAAEF,EAAEwB,EAAE0Q,UAAS1Q,EAAEC,EAAED,EAAEE,EAAE4H,UAAU,KAAMoI,OAAO1R,EAAEA,EAAEwB,EAAE,MAAMxB,CAAC,CAAME,EAAEF,EAAEwB,GAAG,KAAM,CAAKvB,EAAED,EAAEwB,GAAGA,EAAEA,EAAE0Q,OAAO,EAAC1Q,EAAEo0B,GAAGl0B,EAAE1B,EAAEsvB,KAAKzpB,IAAK6L,OAAO1R,EAAEA,EAAEwB,CAAC,CAAC,OAAOG,EAAE3B,GAAG,KAAKwE,EAAG,OAAiBwkB,EAAEhpB,EAAEwB,GAAdoE,EAAElE,EAAE+E,OAAc/E,EAAE8E,UAAUX,GAAG,GAAG+C,GAAGlH,GAAG,OAAOonB,EAAE9oB,EAAEwB,EAAEE,EAAEmE,GAAG,GAAGjB,EAAGlD,GAAG,OAAOqnB,EAAE/oB,EAAEwB,EAAEE,EAAEmE,GAAGsvB,GAAGn1B,EAAE0B,EAAE,CAAC,MAAM,kBAAkBA,GAAG,KAAKA,GAAG,kBAAkBA,GAAGA,EAAE,GAAGA,EAAE,OAAOF,GAAG,IAAIA,EAAE2E,KAAKjG,EAAEF,EAAEwB,EAAE0Q,UAAS1Q,EAAEC,EAAED,EAAEE,IAAKgQ,OAAO1R,EAAEA,EAAEwB,IACnftB,EAAEF,EAAEwB,IAAGA,EAAEi0B,GAAG/zB,EAAE1B,EAAEsvB,KAAKzpB,IAAK6L,OAAO1R,EAAEA,EAAEwB,GAAGG,EAAE3B,IAAIE,EAAEF,EAAEwB,EAAE,CAAS,CAAC,IAAIu0B,GAAGT,IAAG,GAAIU,GAAGV,IAAG,GAAIW,GAAG,CAAC,EAAEC,GAAGhK,GAAG+J,IAAIE,GAAGjK,GAAG+J,IAAIG,GAAGlK,GAAG+J,IAAI,SAASI,GAAGr2B,GAAG,GAAGA,IAAIi2B,GAAG,MAAMhxB,MAAMlF,EAAE,MAAM,OAAOC,CAAC,CAAC,SAASs2B,GAAGt2B,EAAEC,GAAyC,OAAtCmsB,GAAEgK,GAAGn2B,GAAGmsB,GAAE+J,GAAGn2B,GAAGosB,GAAE8J,GAAGD,IAAIj2B,EAAEC,EAAEyK,UAAmB,KAAK,EAAE,KAAK,GAAGzK,GAAGA,EAAEA,EAAEykB,iBAAiBzkB,EAAE8J,aAAaH,GAAG,KAAK,IAAI,MAAM,QAAkE3J,EAAE2J,GAArC3J,GAAvBD,EAAE,IAAIA,EAAEC,EAAEyP,WAAWzP,GAAM8J,cAAc,KAAK/J,EAAEA,EAAEu2B,SAAkBpK,GAAE+J,IAAI9J,GAAE8J,GAAGj2B,EAAE,CAAC,SAASu2B,KAAKrK,GAAE+J,IAAI/J,GAAEgK,IAAIhK,GAAEiK,GAAG,CACnb,SAASK,GAAGz2B,GAAGq2B,GAAGD,GAAGjkB,SAAS,IAAIlS,EAAEo2B,GAAGH,GAAG/jB,SAAajS,EAAE0J,GAAG3J,EAAED,EAAEkC,MAAMjC,IAAIC,IAAIksB,GAAE+J,GAAGn2B,GAAGosB,GAAE8J,GAAGh2B,GAAG,CAAC,SAASw2B,GAAG12B,GAAGm2B,GAAGhkB,UAAUnS,IAAImsB,GAAE+J,IAAI/J,GAAEgK,IAAI,CAAC,IAAIQ,GAAEzK,GAAG,GACrJ,SAAS0K,GAAG52B,GAAG,IAAI,IAAIC,EAAED,EAAE,OAAOC,GAAG,CAAC,GAAG,KAAKA,EAAEkG,IAAI,CAAC,IAAIjG,EAAED,EAAE4R,cAAc,GAAG,OAAO3R,IAAmB,QAAfA,EAAEA,EAAE4R,aAAqB,OAAO5R,EAAE2c,MAAM,OAAO3c,EAAE2c,MAAM,OAAO5c,CAAC,MAAM,GAAG,KAAKA,EAAEkG,UAAK,IAASlG,EAAEyvB,cAAcmH,aAAa,GAAG,KAAa,IAAR52B,EAAE0R,OAAW,OAAO1R,OAAO,GAAG,OAAOA,EAAEgS,MAAM,CAAChS,EAAEgS,MAAMP,OAAOzR,EAAEA,EAAEA,EAAEgS,MAAM,QAAQ,CAAC,GAAGhS,IAAID,EAAE,MAAM,KAAK,OAAOC,EAAEiS,SAAS,CAAC,GAAG,OAAOjS,EAAEyR,QAAQzR,EAAEyR,SAAS1R,EAAE,OAAO,KAAKC,EAAEA,EAAEyR,MAAM,CAACzR,EAAEiS,QAAQR,OAAOzR,EAAEyR,OAAOzR,EAAEA,EAAEiS,OAAO,CAAC,OAAO,IAAI,CAAC,IAAI4kB,GAAG,GACrc,SAASC,KAAK,IAAI,IAAI/2B,EAAE,EAAEA,EAAE82B,GAAG12B,OAAOJ,IAAI82B,GAAG92B,GAAGg3B,8BAA8B,KAAKF,GAAG12B,OAAO,CAAC,CAAC,IAAI62B,GAAGxzB,EAAGyzB,uBAAuBC,GAAG1zB,EAAGoU,wBAAwBuf,GAAG,EAAEC,GAAE,KAAKC,GAAE,KAAKC,GAAE,KAAKC,IAAG,EAAGC,IAAG,EAAGC,GAAG,EAAEC,GAAG,EAAE,SAASC,KAAI,MAAM3yB,MAAMlF,EAAE,KAAM,CAAC,SAAS83B,GAAG73B,EAAEC,GAAG,GAAG,OAAOA,EAAE,OAAM,EAAG,IAAI,IAAIC,EAAE,EAAEA,EAAED,EAAEG,QAAQF,EAAEF,EAAEI,OAAOF,IAAI,IAAIqjB,GAAGvjB,EAAEE,GAAGD,EAAEC,IAAI,OAAM,EAAG,OAAM,CAAE,CAChW,SAAS43B,GAAG93B,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,GAAyH,GAAtH01B,GAAG11B,EAAE21B,GAAEp3B,EAAEA,EAAE4R,cAAc,KAAK5R,EAAEyxB,YAAY,KAAKzxB,EAAE4wB,MAAM,EAAEoG,GAAG9kB,QAAQ,OAAOnS,GAAG,OAAOA,EAAE6R,cAAckmB,GAAGC,GAAGh4B,EAAEE,EAAEsB,EAAEC,GAAMg2B,GAAG,CAAC/1B,EAAE,EAAE,EAAE,CAAY,GAAX+1B,IAAG,EAAGC,GAAG,EAAK,IAAIh2B,EAAE,MAAMuD,MAAMlF,EAAE,MAAM2B,GAAG,EAAE61B,GAAED,GAAE,KAAKr3B,EAAEyxB,YAAY,KAAKuF,GAAG9kB,QAAQ8lB,GAAGj4B,EAAEE,EAAEsB,EAAEC,EAAE,OAAOg2B,GAAG,CAA+D,GAA9DR,GAAG9kB,QAAQ+lB,GAAGj4B,EAAE,OAAOq3B,IAAG,OAAOA,GAAEpG,KAAKkG,GAAG,EAAEG,GAAED,GAAED,GAAE,KAAKG,IAAG,EAAMv3B,EAAE,MAAMgF,MAAMlF,EAAE,MAAM,OAAOC,CAAC,CAAC,SAASm4B,KAAK,IAAIn4B,EAAE,IAAI03B,GAAQ,OAALA,GAAG,EAAS13B,CAAC,CAC/Y,SAASo4B,KAAK,IAAIp4B,EAAE,CAAC6R,cAAc,KAAK8f,UAAU,KAAK0G,UAAU,KAAKC,MAAM,KAAKpH,KAAK,MAA8C,OAAxC,OAAOqG,GAAEF,GAAExlB,cAAc0lB,GAAEv3B,EAAEu3B,GAAEA,GAAErG,KAAKlxB,EAASu3B,EAAC,CAAC,SAASgB,KAAK,GAAG,OAAOjB,GAAE,CAAC,IAAIt3B,EAAEq3B,GAAE5lB,UAAUzR,EAAE,OAAOA,EAAEA,EAAE6R,cAAc,IAAI,MAAM7R,EAAEs3B,GAAEpG,KAAK,IAAIjxB,EAAE,OAAOs3B,GAAEF,GAAExlB,cAAc0lB,GAAErG,KAAK,GAAG,OAAOjxB,EAAEs3B,GAAEt3B,EAAEq3B,GAAEt3B,MAAM,CAAC,GAAG,OAAOA,EAAE,MAAMiF,MAAMlF,EAAE,MAAUC,EAAE,CAAC6R,eAAPylB,GAAEt3B,GAAqB6R,cAAc8f,UAAU2F,GAAE3F,UAAU0G,UAAUf,GAAEe,UAAUC,MAAMhB,GAAEgB,MAAMpH,KAAK,MAAM,OAAOqG,GAAEF,GAAExlB,cAAc0lB,GAAEv3B,EAAEu3B,GAAEA,GAAErG,KAAKlxB,CAAC,CAAC,OAAOu3B,EAAC,CACje,SAASiB,GAAGx4B,EAAEC,GAAG,MAAM,oBAAoBA,EAAEA,EAAED,GAAGC,CAAC,CACnD,SAASw4B,GAAGz4B,GAAG,IAAIC,EAAEs4B,KAAKr4B,EAAED,EAAEq4B,MAAM,GAAG,OAAOp4B,EAAE,MAAM+E,MAAMlF,EAAE,MAAMG,EAAEw4B,oBAAoB14B,EAAE,IAAIwB,EAAE81B,GAAE71B,EAAED,EAAE62B,UAAU32B,EAAExB,EAAE6xB,QAAQ,GAAG,OAAOrwB,EAAE,CAAC,GAAG,OAAOD,EAAE,CAAC,IAAIE,EAAEF,EAAEyvB,KAAKzvB,EAAEyvB,KAAKxvB,EAAEwvB,KAAKxvB,EAAEwvB,KAAKvvB,CAAC,CAACH,EAAE62B,UAAU52B,EAAEC,EAAExB,EAAE6xB,QAAQ,IAAI,CAAC,GAAG,OAAOtwB,EAAE,CAACC,EAAED,EAAEyvB,KAAK1vB,EAAEA,EAAEmwB,UAAU,IAAI9rB,EAAElE,EAAE,KAAKmE,EAAE,KAAKF,EAAElE,EAAE,EAAE,CAAC,IAAIsP,EAAEpL,EAAEwsB,KAAK,IAAIgF,GAAGpmB,KAAKA,EAAE,OAAOlL,IAAIA,EAAEA,EAAEorB,KAAK,CAACkB,KAAK,EAAEuG,OAAO/yB,EAAE+yB,OAAOC,cAAchzB,EAAEgzB,cAAcC,WAAWjzB,EAAEizB,WAAW3H,KAAK,OAAO1vB,EAAEoE,EAAEgzB,cAAchzB,EAAEizB,WAAW74B,EAAEwB,EAAEoE,EAAE+yB,YAAY,CAAC,IAAI/F,EAAE,CAACR,KAAKphB,EAAE2nB,OAAO/yB,EAAE+yB,OAAOC,cAAchzB,EAAEgzB,cACngBC,WAAWjzB,EAAEizB,WAAW3H,KAAK,MAAM,OAAOprB,GAAGD,EAAEC,EAAE8sB,EAAEjxB,EAAEH,GAAGsE,EAAEA,EAAEorB,KAAK0B,EAAEyE,GAAExG,OAAO7f,EAAE+hB,IAAI/hB,CAAC,CAACpL,EAAEA,EAAEsrB,IAAI,OAAO,OAAOtrB,GAAGA,IAAIlE,GAAG,OAAOoE,EAAEnE,EAAEH,EAAEsE,EAAEorB,KAAKrrB,EAAE0d,GAAG/hB,EAAEvB,EAAE4R,iBAAiBif,IAAG,GAAI7wB,EAAE4R,cAAcrQ,EAAEvB,EAAE0xB,UAAUhwB,EAAE1B,EAAEo4B,UAAUvyB,EAAE5F,EAAE44B,kBAAkBt3B,CAAC,CAAiB,GAAG,QAAnBxB,EAAEE,EAAEoxB,aAAwB,CAAC7vB,EAAEzB,EAAE,GAAG0B,EAAED,EAAE2wB,KAAKiF,GAAExG,OAAOnvB,EAAEqxB,IAAIrxB,EAAED,EAAEA,EAAEyvB,WAAWzvB,IAAIzB,EAAE,MAAM,OAAOyB,IAAIvB,EAAE2wB,MAAM,GAAG,MAAM,CAAC5wB,EAAE4R,cAAc3R,EAAE64B,SAAS,CAC9X,SAASC,GAAGh5B,GAAG,IAAIC,EAAEs4B,KAAKr4B,EAAED,EAAEq4B,MAAM,GAAG,OAAOp4B,EAAE,MAAM+E,MAAMlF,EAAE,MAAMG,EAAEw4B,oBAAoB14B,EAAE,IAAIwB,EAAEtB,EAAE64B,SAASt3B,EAAEvB,EAAE6xB,QAAQrwB,EAAEzB,EAAE4R,cAAc,GAAG,OAAOpQ,EAAE,CAACvB,EAAE6xB,QAAQ,KAAK,IAAIpwB,EAAEF,EAAEA,EAAEyvB,KAAK,GAAGxvB,EAAE1B,EAAE0B,EAAEC,EAAEg3B,QAAQh3B,EAAEA,EAAEuvB,WAAWvvB,IAAIF,GAAG8hB,GAAG7hB,EAAEzB,EAAE4R,iBAAiBif,IAAG,GAAI7wB,EAAE4R,cAAcnQ,EAAE,OAAOzB,EAAEo4B,YAAYp4B,EAAE0xB,UAAUjwB,GAAGxB,EAAE44B,kBAAkBp3B,CAAC,CAAC,MAAM,CAACA,EAAEF,EAAE,CAAC,SAASy3B,KAAK,CACpW,SAASC,GAAGl5B,EAAEC,GAAG,IAAIC,EAAEm3B,GAAE71B,EAAE+2B,KAAK92B,EAAExB,IAAIyB,GAAG6hB,GAAG/hB,EAAEqQ,cAAcpQ,GAAsE,GAAnEC,IAAIF,EAAEqQ,cAAcpQ,EAAEqvB,IAAG,GAAItvB,EAAEA,EAAE82B,MAAMa,GAAGC,GAAGzQ,KAAK,KAAKzoB,EAAEsB,EAAExB,GAAG,CAACA,IAAOwB,EAAE63B,cAAcp5B,GAAGyB,GAAG,OAAO61B,IAAuB,EAApBA,GAAE1lB,cAAc1L,IAAM,CAAuD,GAAtDjG,EAAEyR,OAAO,KAAK2nB,GAAG,EAAEC,GAAG5Q,KAAK,KAAKzoB,EAAEsB,EAAEC,EAAExB,QAAG,EAAO,MAAS,OAAOu5B,GAAE,MAAMv0B,MAAMlF,EAAE,MAAM,KAAQ,GAAHq3B,KAAQqC,GAAGv5B,EAAED,EAAEwB,EAAE,CAAC,OAAOA,CAAC,CAAC,SAASg4B,GAAGz5B,EAAEC,EAAEC,GAAGF,EAAE2R,OAAO,MAAM3R,EAAE,CAACq5B,YAAYp5B,EAAE0H,MAAMzH,GAAmB,QAAhBD,EAAEo3B,GAAE3F,cAAsBzxB,EAAE,CAACy5B,WAAW,KAAKC,OAAO,MAAMtC,GAAE3F,YAAYzxB,EAAEA,EAAE05B,OAAO,CAAC35B,IAAgB,QAAXE,EAAED,EAAE05B,QAAgB15B,EAAE05B,OAAO,CAAC35B,GAAGE,EAAEiQ,KAAKnQ,EAAG,CAClf,SAASu5B,GAAGv5B,EAAEC,EAAEC,EAAEsB,GAAGvB,EAAE0H,MAAMzH,EAAED,EAAEo5B,YAAY73B,EAAEo4B,GAAG35B,IAAI45B,GAAG75B,EAAE,CAAC,SAASo5B,GAAGp5B,EAAEC,EAAEC,GAAG,OAAOA,GAAE,WAAW05B,GAAG35B,IAAI45B,GAAG75B,EAAE,GAAE,CAAC,SAAS45B,GAAG55B,GAAG,IAAIC,EAAED,EAAEq5B,YAAYr5B,EAAEA,EAAE2H,MAAM,IAAI,IAAIzH,EAAED,IAAI,OAAOsjB,GAAGvjB,EAAEE,EAAE,CAAC,MAAMsB,GAAG,OAAM,CAAE,CAAC,CAAC,SAASq4B,GAAG75B,GAAG,IAAIC,EAAEsxB,GAAGvxB,EAAE,GAAG,OAAOC,GAAG0zB,GAAG1zB,EAAED,EAAE,GAAG,EAAE,CAClQ,SAAS85B,GAAG95B,GAAG,IAAIC,EAAEm4B,KAA8M,MAAzM,oBAAoBp4B,IAAIA,EAAEA,KAAKC,EAAE4R,cAAc5R,EAAE0xB,UAAU3xB,EAAEA,EAAE,CAAC+xB,QAAQ,KAAKT,YAAY,KAAKT,MAAM,EAAEkI,SAAS,KAAKL,oBAAoBF,GAAGM,kBAAkB94B,GAAGC,EAAEq4B,MAAMt4B,EAAEA,EAAEA,EAAE+4B,SAASgB,GAAGpR,KAAK,KAAK0O,GAAEr3B,GAAS,CAACC,EAAE4R,cAAc7R,EAAE,CAC5P,SAASs5B,GAAGt5B,EAAEC,EAAEC,EAAEsB,GAA8O,OAA3OxB,EAAE,CAACmG,IAAInG,EAAEg6B,OAAO/5B,EAAEg6B,QAAQ/5B,EAAEg6B,KAAK14B,EAAE0vB,KAAK,MAAsB,QAAhBjxB,EAAEo3B,GAAE3F,cAAsBzxB,EAAE,CAACy5B,WAAW,KAAKC,OAAO,MAAMtC,GAAE3F,YAAYzxB,EAAEA,EAAEy5B,WAAW15B,EAAEkxB,KAAKlxB,GAAmB,QAAfE,EAAED,EAAEy5B,YAAoBz5B,EAAEy5B,WAAW15B,EAAEkxB,KAAKlxB,GAAGwB,EAAEtB,EAAEgxB,KAAKhxB,EAAEgxB,KAAKlxB,EAAEA,EAAEkxB,KAAK1vB,EAAEvB,EAAEy5B,WAAW15B,GAAWA,CAAC,CAAC,SAASm6B,KAAK,OAAO5B,KAAK1mB,aAAa,CAAC,SAASuoB,GAAGp6B,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAE22B,KAAKf,GAAE1lB,OAAO3R,EAAEyB,EAAEoQ,cAAcynB,GAAG,EAAEr5B,EAAEC,OAAE,OAAO,IAASsB,EAAE,KAAKA,EAAE,CAC9Y,SAAS64B,GAAGr6B,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAE82B,KAAK/2B,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAIE,OAAE,EAAO,GAAG,OAAO41B,GAAE,CAAC,IAAI31B,EAAE21B,GAAEzlB,cAA0B,GAAZnQ,EAAEC,EAAEs4B,QAAW,OAAOz4B,GAAGq2B,GAAGr2B,EAAEG,EAAEu4B,MAAmC,YAA5Bz4B,EAAEoQ,cAAcynB,GAAGr5B,EAAEC,EAAEwB,EAAEF,GAAU,CAAC61B,GAAE1lB,OAAO3R,EAAEyB,EAAEoQ,cAAcynB,GAAG,EAAEr5B,EAAEC,EAAEwB,EAAEF,EAAE,CAAC,SAAS84B,GAAGt6B,EAAEC,GAAG,OAAOm6B,GAAG,QAAQ,EAAEp6B,EAAEC,EAAE,CAAC,SAASk5B,GAAGn5B,EAAEC,GAAG,OAAOo6B,GAAG,KAAK,EAAEr6B,EAAEC,EAAE,CAAC,SAASs6B,GAAGv6B,EAAEC,GAAG,OAAOo6B,GAAG,EAAE,EAAEr6B,EAAEC,EAAE,CAAC,SAASu6B,GAAGx6B,EAAEC,GAAG,OAAOo6B,GAAG,EAAE,EAAEr6B,EAAEC,EAAE,CAChX,SAASw6B,GAAGz6B,EAAEC,GAAG,MAAG,oBAAoBA,GAASD,EAAEA,IAAIC,EAAED,GAAG,WAAWC,EAAE,KAAK,GAAK,OAAOA,QAAG,IAASA,GAASD,EAAEA,IAAIC,EAAEkS,QAAQnS,EAAE,WAAWC,EAAEkS,QAAQ,IAAI,QAA1E,CAA2E,CAAC,SAASuoB,GAAG16B,EAAEC,EAAEC,GAA6C,OAA1CA,EAAE,OAAOA,QAAG,IAASA,EAAEA,EAAE4nB,OAAO,CAAC9nB,IAAI,KAAYq6B,GAAG,EAAE,EAAEI,GAAG9R,KAAK,KAAK1oB,EAAED,GAAGE,EAAE,CAAC,SAASy6B,KAAK,CAAC,SAASC,GAAG56B,EAAEC,GAAG,IAAIC,EAAEq4B,KAAKt4B,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAIuB,EAAEtB,EAAE2R,cAAc,OAAG,OAAOrQ,GAAG,OAAOvB,GAAG43B,GAAG53B,EAAEuB,EAAE,IAAWA,EAAE,IAAGtB,EAAE2R,cAAc,CAAC7R,EAAEC,GAAUD,EAAC,CAC7Z,SAAS66B,GAAG76B,EAAEC,GAAG,IAAIC,EAAEq4B,KAAKt4B,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAIuB,EAAEtB,EAAE2R,cAAc,OAAG,OAAOrQ,GAAG,OAAOvB,GAAG43B,GAAG53B,EAAEuB,EAAE,IAAWA,EAAE,IAAGxB,EAAEA,IAAIE,EAAE2R,cAAc,CAAC7R,EAAEC,GAAUD,EAAC,CAAC,SAAS86B,GAAG96B,EAAEC,EAAEC,GAAG,OAAG,KAAQ,GAAHk3B,KAAcp3B,EAAE2xB,YAAY3xB,EAAE2xB,WAAU,EAAGb,IAAG,GAAI9wB,EAAE6R,cAAc3R,IAAEqjB,GAAGrjB,EAAED,KAAKC,EAAE8U,KAAKqiB,GAAExG,OAAO3wB,EAAE6yB,IAAI7yB,EAAEF,EAAE2xB,WAAU,GAAW1xB,EAAC,CAAC,SAAS86B,GAAG/6B,EAAEC,GAAG,IAAIC,EAAEmV,GAAEA,GAAE,IAAInV,GAAG,EAAEA,EAAEA,EAAE,EAAEF,GAAE,GAAI,IAAIwB,EAAE21B,GAAGnf,WAAWmf,GAAGnf,WAAW,CAAC,EAAE,IAAIhY,GAAE,GAAIC,GAAG,CAAC,QAAQoV,GAAEnV,EAAEi3B,GAAGnf,WAAWxW,CAAC,CAAC,CAAC,SAASw5B,KAAK,OAAOzC,KAAK1mB,aAAa,CAC1d,SAASopB,GAAGj7B,EAAEC,EAAEC,GAAG,IAAIsB,EAAEkyB,GAAG1zB,GAAkE,GAA/DE,EAAE,CAACkyB,KAAK5wB,EAAEm3B,OAAOz4B,EAAE04B,eAAc,EAAGC,WAAW,KAAK3H,KAAK,MAASgK,GAAGl7B,GAAGm7B,GAAGl7B,EAAEC,QAAQ,GAAiB,QAAdA,EAAEmxB,GAAGrxB,EAAEC,EAAEC,EAAEsB,IAAY,CAAWmyB,GAAGzzB,EAAEF,EAAEwB,EAAXiyB,MAAgB2H,GAAGl7B,EAAED,EAAEuB,EAAE,CAAC,CAC/K,SAASu4B,GAAG/5B,EAAEC,EAAEC,GAAG,IAAIsB,EAAEkyB,GAAG1zB,GAAGyB,EAAE,CAAC2wB,KAAK5wB,EAAEm3B,OAAOz4B,EAAE04B,eAAc,EAAGC,WAAW,KAAK3H,KAAK,MAAM,GAAGgK,GAAGl7B,GAAGm7B,GAAGl7B,EAAEwB,OAAO,CAAC,IAAIC,EAAE1B,EAAEyR,UAAU,GAAG,IAAIzR,EAAE6wB,QAAQ,OAAOnvB,GAAG,IAAIA,EAAEmvB,QAAiC,QAAxBnvB,EAAEzB,EAAEy4B,qBAA8B,IAAI,IAAI/2B,EAAE1B,EAAE64B,kBAAkBjzB,EAAEnE,EAAEC,EAAEzB,GAAqC,GAAlCuB,EAAEm3B,eAAc,EAAGn3B,EAAEo3B,WAAWhzB,EAAK0d,GAAG1d,EAAElE,GAAG,CAAC,IAAImE,EAAE7F,EAAEqxB,YAA+E,OAAnE,OAAOxrB,GAAGrE,EAAEyvB,KAAKzvB,EAAE2vB,GAAGnxB,KAAKwB,EAAEyvB,KAAKprB,EAAEorB,KAAKprB,EAAEorB,KAAKzvB,QAAGxB,EAAEqxB,YAAY7vB,EAAQ,CAAC,CAAC,MAAMmE,GAAG,CAAwB,QAAd1F,EAAEmxB,GAAGrxB,EAAEC,EAAEwB,EAAED,MAAoBmyB,GAAGzzB,EAAEF,EAAEwB,EAAbC,EAAEgyB,MAAgB2H,GAAGl7B,EAAED,EAAEuB,GAAG,CAAC,CAC/c,SAAS05B,GAAGl7B,GAAG,IAAIC,EAAED,EAAEyR,UAAU,OAAOzR,IAAIq3B,IAAG,OAAOp3B,GAAGA,IAAIo3B,EAAC,CAAC,SAAS8D,GAAGn7B,EAAEC,GAAGw3B,GAAGD,IAAG,EAAG,IAAIt3B,EAAEF,EAAE+xB,QAAQ,OAAO7xB,EAAED,EAAEixB,KAAKjxB,GAAGA,EAAEixB,KAAKhxB,EAAEgxB,KAAKhxB,EAAEgxB,KAAKjxB,GAAGD,EAAE+xB,QAAQ9xB,CAAC,CAAC,SAASm7B,GAAGp7B,EAAEC,EAAEC,GAAG,GAAG,KAAO,QAAFA,GAAW,CAAC,IAAIsB,EAAEvB,EAAE4wB,MAAwB3wB,GAAlBsB,GAAGxB,EAAEyU,aAAkBxU,EAAE4wB,MAAM3wB,EAAEkV,GAAGpV,EAAEE,EAAE,CAAC,CAC9P,IAAIg4B,GAAG,CAACmD,YAAYtK,GAAGuK,YAAY1D,GAAE2D,WAAW3D,GAAE4D,UAAU5D,GAAE6D,oBAAoB7D,GAAE8D,mBAAmB9D,GAAE+D,gBAAgB/D,GAAEgE,QAAQhE,GAAEiE,WAAWjE,GAAEkE,OAAOlE,GAAEmE,SAASnE,GAAEoE,cAAcpE,GAAEqE,iBAAiBrE,GAAEsE,cAActE,GAAEuE,iBAAiBvE,GAAEwE,qBAAqBxE,GAAEyE,MAAMzE,GAAE0E,0BAAyB,GAAIvE,GAAG,CAACsD,YAAYtK,GAAGuK,YAAY,SAASt7B,EAAEC,GAA4C,OAAzCm4B,KAAKvmB,cAAc,CAAC7R,OAAE,IAASC,EAAE,KAAKA,GAAUD,CAAC,EAAEu7B,WAAWxK,GAAGyK,UAAUlB,GAAGmB,oBAAoB,SAASz7B,EAAEC,EAAEC,GAA6C,OAA1CA,EAAE,OAAOA,QAAG,IAASA,EAAEA,EAAE4nB,OAAO,CAAC9nB,IAAI,KAAYo6B,GAAG,QAC3f,EAAEK,GAAG9R,KAAK,KAAK1oB,EAAED,GAAGE,EAAE,EAAEy7B,gBAAgB,SAAS37B,EAAEC,GAAG,OAAOm6B,GAAG,QAAQ,EAAEp6B,EAAEC,EAAE,EAAEy7B,mBAAmB,SAAS17B,EAAEC,GAAG,OAAOm6B,GAAG,EAAE,EAAEp6B,EAAEC,EAAE,EAAE27B,QAAQ,SAAS57B,EAAEC,GAAG,IAAIC,EAAEk4B,KAAqD,OAAhDn4B,OAAE,IAASA,EAAE,KAAKA,EAAED,EAAEA,IAAIE,EAAE2R,cAAc,CAAC7R,EAAEC,GAAUD,CAAC,EAAE67B,WAAW,SAAS77B,EAAEC,EAAEC,GAAG,IAAIsB,EAAE42B,KAAkM,OAA7Ln4B,OAAE,IAASC,EAAEA,EAAED,GAAGA,EAAEuB,EAAEqQ,cAAcrQ,EAAEmwB,UAAU1xB,EAAED,EAAE,CAAC+xB,QAAQ,KAAKT,YAAY,KAAKT,MAAM,EAAEkI,SAAS,KAAKL,oBAAoB14B,EAAE84B,kBAAkB74B,GAAGuB,EAAE82B,MAAMt4B,EAAEA,EAAEA,EAAE+4B,SAASkC,GAAGtS,KAAK,KAAK0O,GAAEr3B,GAAS,CAACwB,EAAEqQ,cAAc7R,EAAE,EAAE87B,OAAO,SAAS97B,GAC3d,OAAdA,EAAE,CAACmS,QAAQnS,GAAhBo4B,KAA4BvmB,cAAc7R,CAAC,EAAE+7B,SAASjC,GAAGkC,cAAcrB,GAAGsB,iBAAiB,SAASj8B,GAAG,OAAOo4B,KAAKvmB,cAAc7R,CAAC,EAAEk8B,cAAc,WAAW,IAAIl8B,EAAE85B,IAAG,GAAI75B,EAAED,EAAE,GAA6C,OAA1CA,EAAE+6B,GAAGpS,KAAK,KAAK3oB,EAAE,IAAIo4B,KAAKvmB,cAAc7R,EAAQ,CAACC,EAAED,EAAE,EAAEm8B,iBAAiB,WAAW,EAAEC,qBAAqB,SAASp8B,EAAEC,EAAEC,GAAG,IAAIsB,EAAE61B,GAAE51B,EAAE22B,KAAK,GAAG1J,GAAE,CAAC,QAAG,IAASxuB,EAAE,MAAM+E,MAAMlF,EAAE,MAAMG,EAAEA,GAAG,KAAK,CAAO,GAANA,EAAED,IAAO,OAAOu5B,GAAE,MAAMv0B,MAAMlF,EAAE,MAAM,KAAQ,GAAHq3B,KAAQqC,GAAGj4B,EAAEvB,EAAEC,EAAE,CAACuB,EAAEoQ,cAAc3R,EAAE,IAAIwB,EAAE,CAACiG,MAAMzH,EAAEm5B,YAAYp5B,GACvZ,OAD0ZwB,EAAE62B,MAAM52B,EAAE44B,GAAGlB,GAAGzQ,KAAK,KAAKnnB,EACpfE,EAAE1B,GAAG,CAACA,IAAIwB,EAAEmQ,OAAO,KAAK2nB,GAAG,EAAEC,GAAG5Q,KAAK,KAAKnnB,EAAEE,EAAExB,EAAED,QAAG,EAAO,MAAaC,CAAC,EAAEm8B,MAAM,WAAW,IAAIr8B,EAAEo4B,KAAKn4B,EAAEu5B,GAAE+C,iBAAiB,GAAG7N,GAAE,CAAC,IAAIxuB,EAAEiuB,GAAkDluB,EAAE,IAAIA,EAAE,KAA9CC,GAAHguB,KAAU,GAAG,GAAGpa,GAAhBoa,IAAsB,IAAIhkB,SAAS,IAAIhK,GAAuB,GAAPA,EAAEw3B,QAAWz3B,GAAG,IAAIC,EAAEgK,SAAS,KAAKjK,GAAG,GAAG,MAAaA,EAAE,IAAIA,EAAE,KAAfC,EAAEy3B,MAAmBztB,SAAS,IAAI,IAAI,OAAOlK,EAAE6R,cAAc5R,CAAC,EAAEq8B,0BAAyB,GAAItE,GAAG,CAACqD,YAAYtK,GAAGuK,YAAYV,GAAGW,WAAWxK,GAAGyK,UAAUrC,GAAGsC,oBAAoBf,GAAGgB,mBAAmBnB,GAAGoB,gBAAgBnB,GAAGoB,QAAQf,GAAGgB,WAAWpD,GAAGqD,OAAO3B,GAAG4B,SAAS,WAAW,OAAOtD,GAAGD,GAAG,EACrhBwD,cAAcrB,GAAGsB,iBAAiB,SAASj8B,GAAc,OAAO86B,GAAZvC,KAAiBjB,GAAEzlB,cAAc7R,EAAE,EAAEk8B,cAAc,WAAgD,MAAM,CAArCzD,GAAGD,IAAI,GAAKD,KAAK1mB,cAAyB,EAAEsqB,iBAAiBlD,GAAGmD,qBAAqBlD,GAAGmD,MAAMrB,GAAGsB,0BAAyB,GAAIrE,GAAG,CAACoD,YAAYtK,GAAGuK,YAAYV,GAAGW,WAAWxK,GAAGyK,UAAUrC,GAAGsC,oBAAoBf,GAAGgB,mBAAmBnB,GAAGoB,gBAAgBnB,GAAGoB,QAAQf,GAAGgB,WAAW7C,GAAG8C,OAAO3B,GAAG4B,SAAS,WAAW,OAAO/C,GAAGR,GAAG,EAAEwD,cAAcrB,GAAGsB,iBAAiB,SAASj8B,GAAG,IAAIC,EAAEs4B,KAAK,OAAO,OACzfjB,GAAEr3B,EAAE4R,cAAc7R,EAAE86B,GAAG76B,EAAEq3B,GAAEzlB,cAAc7R,EAAE,EAAEk8B,cAAc,WAAgD,MAAM,CAArClD,GAAGR,IAAI,GAAKD,KAAK1mB,cAAyB,EAAEsqB,iBAAiBlD,GAAGmD,qBAAqBlD,GAAGmD,MAAMrB,GAAGsB,0BAAyB,GAAI,SAASE,GAAGx8B,EAAEC,GAAG,IAAI,IAAIC,EAAE,GAAGsB,EAAEvB,EAAE,GAAGC,GAAGgG,EAAG1E,GAAGA,EAAEA,EAAEkQ,aAAalQ,GAAG,IAAIC,EAAEvB,CAAC,CAAC,MAAMwB,GAAGD,EAAE,6BAA6BC,EAAE+6B,QAAQ,KAAK/6B,EAAEwD,KAAK,CAAC,MAAM,CAACyC,MAAM3H,EAAE+O,OAAO9O,EAAEiF,MAAMzD,EAAEi7B,OAAO,KAAK,CAAC,SAASC,GAAG38B,EAAEC,EAAEC,GAAG,MAAM,CAACyH,MAAM3H,EAAE+O,OAAO,KAAK7J,MAAM,MAAMhF,EAAEA,EAAE,KAAKw8B,OAAO,MAAMz8B,EAAEA,EAAE,KAAK,CACzd,SAAS28B,GAAG58B,EAAEC,GAAG,IAAI48B,QAAQC,MAAM78B,EAAE0H,MAAM,CAAC,MAAMzH,GAAG0qB,YAAW,WAAW,MAAM1qB,CAAE,GAAE,CAAC,CAAC,IAAI68B,GAAG,oBAAoBC,QAAQA,QAAQ9mB,IAAI,SAAS+mB,GAAGj9B,EAAEC,EAAEC,IAAGA,EAAEgyB,IAAI,EAAEhyB,IAAKiG,IAAI,EAAEjG,EAAEmyB,QAAQ,CAACxM,QAAQ,MAAM,IAAIrkB,EAAEvB,EAAE0H,MAAsD,OAAhDzH,EAAEoyB,SAAS,WAAW4K,KAAKA,IAAG,EAAGC,GAAG37B,GAAGo7B,GAAG58B,EAAEC,EAAE,EAASC,CAAC,CAC3Q,SAASk9B,GAAGp9B,EAAEC,EAAEC,IAAGA,EAAEgyB,IAAI,EAAEhyB,IAAKiG,IAAI,EAAE,IAAI3E,EAAExB,EAAEkC,KAAKm7B,yBAAyB,GAAG,oBAAoB77B,EAAE,CAAC,IAAIC,EAAExB,EAAE0H,MAAMzH,EAAEmyB,QAAQ,WAAW,OAAO7wB,EAAEC,EAAE,EAAEvB,EAAEoyB,SAAS,WAAWsK,GAAG58B,EAAEC,EAAE,CAAC,CAAC,IAAIyB,EAAE1B,EAAEgQ,UAA8O,OAApO,OAAOtO,GAAG,oBAAoBA,EAAE47B,oBAAoBp9B,EAAEoyB,SAAS,WAAWsK,GAAG58B,EAAEC,GAAG,oBAAoBuB,IAAI,OAAO+7B,GAAGA,GAAG,IAAIh9B,IAAI,CAACqB,OAAO27B,GAAG58B,IAAIiB,OAAO,IAAI1B,EAAED,EAAEiF,MAAMtD,KAAK07B,kBAAkBr9B,EAAE0H,MAAM,CAAC61B,eAAe,OAAOt9B,EAAEA,EAAE,IAAI,GAAUA,CAAC,CACnb,SAASu9B,GAAGz9B,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAE09B,UAAU,GAAG,OAAOl8B,EAAE,CAACA,EAAExB,EAAE09B,UAAU,IAAIX,GAAG,IAAIt7B,EAAE,IAAIlB,IAAIiB,EAAEiE,IAAIxF,EAAEwB,EAAE,WAAiB,KAAXA,EAAED,EAAE0F,IAAIjH,MAAgBwB,EAAE,IAAIlB,IAAIiB,EAAEiE,IAAIxF,EAAEwB,IAAIA,EAAE4mB,IAAInoB,KAAKuB,EAAEd,IAAIT,GAAGF,EAAE29B,GAAGhV,KAAK,KAAK3oB,EAAEC,EAAEC,GAAGD,EAAEmrB,KAAKprB,EAAEA,GAAG,CAAC,SAAS49B,GAAG59B,GAAG,EAAE,CAAC,IAAIC,EAA4E,IAAvEA,EAAE,KAAKD,EAAEmG,OAAsBlG,EAAE,QAApBA,EAAED,EAAE6R,gBAAyB,OAAO5R,EAAE6R,YAAuB7R,EAAE,OAAOD,EAAEA,EAAEA,EAAE0R,MAAM,OAAO,OAAO1R,GAAG,OAAO,IAAI,CAChW,SAAS69B,GAAG79B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,OAAG,KAAY,EAAPzB,EAAEsvB,OAAetvB,IAAIC,EAAED,EAAE2R,OAAO,OAAO3R,EAAE2R,OAAO,IAAIzR,EAAEyR,OAAO,OAAOzR,EAAEyR,QAAQ,MAAM,IAAIzR,EAAEiG,MAAM,OAAOjG,EAAEuR,UAAUvR,EAAEiG,IAAI,KAAIlG,EAAEiyB,IAAI,EAAE,IAAK/rB,IAAI,EAAEosB,GAAGryB,EAAED,EAAE,KAAKC,EAAE2wB,OAAO,GAAG7wB,IAAEA,EAAE2R,OAAO,MAAM3R,EAAE6wB,MAAMpvB,EAASzB,EAAC,CAAC,IAAI89B,GAAGr6B,EAAGs6B,kBAAkBjN,IAAG,EAAG,SAASkN,GAAGh+B,EAAEC,EAAEC,EAAEsB,GAAGvB,EAAEgS,MAAM,OAAOjS,EAAEg2B,GAAG/1B,EAAE,KAAKC,EAAEsB,GAAGu0B,GAAG91B,EAAED,EAAEiS,MAAM/R,EAAEsB,EAAE,CACnV,SAASy8B,GAAGj+B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAGvB,EAAEA,EAAEkG,OAAO,IAAI1E,EAAEzB,EAAE+0B,IAAqC,OAAjCtE,GAAGzwB,EAAEwB,GAAGD,EAAEs2B,GAAG93B,EAAEC,EAAEC,EAAEsB,EAAEE,EAAED,GAAGvB,EAAEi4B,KAAQ,OAAOn4B,GAAI8wB,IAA2EpC,IAAGxuB,GAAGouB,GAAGruB,GAAGA,EAAE0R,OAAO,EAAEqsB,GAAGh+B,EAAEC,EAAEuB,EAAEC,GAAUxB,EAAEgS,QAA7GhS,EAAEyxB,YAAY1xB,EAAE0xB,YAAYzxB,EAAE0R,QAAQ,KAAK3R,EAAE6wB,QAAQpvB,EAAEy8B,GAAGl+B,EAAEC,EAAEwB,GAAoD,CACzN,SAAS08B,GAAGn+B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,GAAG,OAAOzB,EAAE,CAAC,IAAI0B,EAAExB,EAAEgC,KAAK,MAAG,oBAAoBR,GAAI08B,GAAG18B,SAAI,IAASA,EAAEsuB,cAAc,OAAO9vB,EAAEm+B,cAAS,IAASn+B,EAAE8vB,eAAoDhwB,EAAE01B,GAAGx1B,EAAEgC,KAAK,KAAKV,EAAEvB,EAAEA,EAAEqvB,KAAK7tB,IAAKuzB,IAAI/0B,EAAE+0B,IAAIh1B,EAAE0R,OAAOzR,EAASA,EAAEgS,MAAMjS,IAArGC,EAAEkG,IAAI,GAAGlG,EAAEiC,KAAKR,EAAE48B,GAAGt+B,EAAEC,EAAEyB,EAAEF,EAAEC,GAAyE,CAAW,GAAVC,EAAE1B,EAAEiS,MAAS,KAAKjS,EAAE6wB,MAAMpvB,GAAG,CAAC,IAAIE,EAAED,EAAEguB,cAA0C,IAAhBxvB,EAAE,QAAdA,EAAEA,EAAEm+B,SAAmBn+B,EAAEsjB,IAAQ7hB,EAAEH,IAAIxB,EAAEg1B,MAAM/0B,EAAE+0B,IAAI,OAAOkJ,GAAGl+B,EAAEC,EAAEwB,EAAE,CAA6C,OAA5CxB,EAAE0R,OAAO,GAAE3R,EAAEw1B,GAAG9zB,EAAEF,IAAKwzB,IAAI/0B,EAAE+0B,IAAIh1B,EAAE0R,OAAOzR,EAASA,EAAEgS,MAAMjS,CAAC,CAC1b,SAASs+B,GAAGt+B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,GAAG,OAAOzB,EAAE,CAAC,IAAI0B,EAAE1B,EAAE0vB,cAAc,GAAGlM,GAAG9hB,EAAEF,IAAIxB,EAAEg1B,MAAM/0B,EAAE+0B,IAAI,IAAGlE,IAAG,EAAG7wB,EAAEgvB,aAAaztB,EAAEE,EAAE,KAAK1B,EAAE6wB,MAAMpvB,GAAsC,OAAOxB,EAAE4wB,MAAM7wB,EAAE6wB,MAAMqN,GAAGl+B,EAAEC,EAAEwB,GAAjE,KAAa,OAARzB,EAAE2R,SAAgBmf,IAAG,EAAyC,EAAC,OAAOyN,GAAGv+B,EAAEC,EAAEC,EAAEsB,EAAEC,EAAE,CACxN,SAAS+8B,GAAGx+B,EAAEC,EAAEC,GAAG,IAAIsB,EAAEvB,EAAEgvB,aAAaxtB,EAAED,EAAE8H,SAAS5H,EAAE,OAAO1B,EAAEA,EAAE6R,cAAc,KAAK,GAAG,WAAWrQ,EAAE8tB,KAAK,GAAG,KAAY,EAAPrvB,EAAEqvB,MAAQrvB,EAAE4R,cAAc,CAAC4sB,UAAU,EAAEC,UAAU,KAAKC,YAAY,MAAMvS,GAAEwS,GAAGC,IAAIA,IAAI3+B,MAAM,CAAC,GAAG,KAAO,WAAFA,GAAc,OAAOF,EAAE,OAAO0B,EAAEA,EAAE+8B,UAAUv+B,EAAEA,EAAED,EAAE4wB,MAAM5wB,EAAEwwB,WAAW,WAAWxwB,EAAE4R,cAAc,CAAC4sB,UAAUz+B,EAAE0+B,UAAU,KAAKC,YAAY,MAAM1+B,EAAEyxB,YAAY,KAAKtF,GAAEwS,GAAGC,IAAIA,IAAI7+B,EAAE,KAAKC,EAAE4R,cAAc,CAAC4sB,UAAU,EAAEC,UAAU,KAAKC,YAAY,MAAMn9B,EAAE,OAAOE,EAAEA,EAAE+8B,UAAUv+B,EAAEksB,GAAEwS,GAAGC,IAAIA,IAAIr9B,CAAC,MAAM,OACtfE,GAAGF,EAAEE,EAAE+8B,UAAUv+B,EAAED,EAAE4R,cAAc,MAAMrQ,EAAEtB,EAAEksB,GAAEwS,GAAGC,IAAIA,IAAIr9B,EAAc,OAAZw8B,GAAGh+B,EAAEC,EAAEwB,EAAEvB,GAAUD,EAAEgS,KAAK,CAAC,SAAS6sB,GAAG9+B,EAAEC,GAAG,IAAIC,EAAED,EAAE+0B,KAAO,OAAOh1B,GAAG,OAAOE,GAAG,OAAOF,GAAGA,EAAEg1B,MAAM90B,KAAED,EAAE0R,OAAO,IAAI1R,EAAE0R,OAAO,QAAO,CAAC,SAAS4sB,GAAGv+B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,IAAIC,EAAEmrB,GAAG3sB,GAAGssB,GAAGF,GAAEna,QAAmD,OAA3CzQ,EAAE+qB,GAAGxsB,EAAEyB,GAAGgvB,GAAGzwB,EAAEwB,GAAGvB,EAAE43B,GAAG93B,EAAEC,EAAEC,EAAEsB,EAAEE,EAAED,GAAGD,EAAE22B,KAAQ,OAAOn4B,GAAI8wB,IAA2EpC,IAAGltB,GAAG8sB,GAAGruB,GAAGA,EAAE0R,OAAO,EAAEqsB,GAAGh+B,EAAEC,EAAEC,EAAEuB,GAAUxB,EAAEgS,QAA7GhS,EAAEyxB,YAAY1xB,EAAE0xB,YAAYzxB,EAAE0R,QAAQ,KAAK3R,EAAE6wB,QAAQpvB,EAAEy8B,GAAGl+B,EAAEC,EAAEwB,GAAoD,CACla,SAASs9B,GAAG/+B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,GAAGorB,GAAG3sB,GAAG,CAAC,IAAIwB,GAAE,EAAGyrB,GAAGltB,EAAE,MAAMyB,GAAE,EAAW,GAARgvB,GAAGzwB,EAAEwB,GAAM,OAAOxB,EAAE+P,UAAUgvB,GAAGh/B,EAAEC,GAAGg0B,GAAGh0B,EAAEC,EAAEsB,GAAGgzB,GAAGv0B,EAAEC,EAAEsB,EAAEC,GAAGD,GAAE,OAAQ,GAAG,OAAOxB,EAAE,CAAC,IAAI2B,EAAE1B,EAAE+P,UAAUnK,EAAE5F,EAAEyvB,cAAc/tB,EAAE8yB,MAAM5uB,EAAE,IAAIC,EAAEnE,EAAEqvB,QAAQprB,EAAE1F,EAAEg0B,YAAY,kBAAkBtuB,GAAG,OAAOA,EAAEA,EAAEmrB,GAAGnrB,GAAyBA,EAAE6mB,GAAGxsB,EAA1B2F,EAAEinB,GAAG3sB,GAAGssB,GAAGF,GAAEna,SAAmB,IAAInB,EAAE9Q,EAAEw0B,yBAAyB9B,EAAE,oBAAoB5hB,GAAG,oBAAoBrP,EAAEgzB,wBAAwB/B,GAAG,oBAAoBjxB,EAAE4yB,kCAAkC,oBAAoB5yB,EAAE2yB,4BAC1dzuB,IAAIrE,GAAGsE,IAAIF,IAAIyuB,GAAGp0B,EAAE0B,EAAEH,EAAEoE,GAAG4rB,IAAG,EAAG,IAAIqB,EAAE5yB,EAAE4R,cAAclQ,EAAEwyB,MAAMtB,EAAEF,GAAG1yB,EAAEuB,EAAEG,EAAEF,GAAGqE,EAAE7F,EAAE4R,cAAchM,IAAIrE,GAAGqxB,IAAI/sB,GAAGymB,GAAGpa,SAASqf,IAAI,oBAAoBxgB,IAAIoiB,GAAGnzB,EAAEC,EAAE8Q,EAAExP,GAAGsE,EAAE7F,EAAE4R,gBAAgBhM,EAAE2rB,IAAIsC,GAAG7zB,EAAEC,EAAE2F,EAAErE,EAAEqxB,EAAE/sB,EAAEF,KAAKgtB,GAAG,oBAAoBjxB,EAAEizB,2BAA2B,oBAAoBjzB,EAAEkzB,qBAAqB,oBAAoBlzB,EAAEkzB,oBAAoBlzB,EAAEkzB,qBAAqB,oBAAoBlzB,EAAEizB,2BAA2BjzB,EAAEizB,6BAA6B,oBAAoBjzB,EAAEmzB,oBAAoB70B,EAAE0R,OAAO,WAClf,oBAAoBhQ,EAAEmzB,oBAAoB70B,EAAE0R,OAAO,SAAS1R,EAAEyvB,cAAcluB,EAAEvB,EAAE4R,cAAc/L,GAAGnE,EAAE8yB,MAAMjzB,EAAEG,EAAEwyB,MAAMruB,EAAEnE,EAAEqvB,QAAQprB,EAAEpE,EAAEqE,IAAI,oBAAoBlE,EAAEmzB,oBAAoB70B,EAAE0R,OAAO,SAASnQ,GAAE,EAAG,KAAK,CAACG,EAAE1B,EAAE+P,UAAUiiB,GAAGjyB,EAAEC,GAAG4F,EAAE5F,EAAEyvB,cAAc9pB,EAAE3F,EAAEiC,OAAOjC,EAAE6uB,YAAYjpB,EAAEkqB,GAAG9vB,EAAEiC,KAAK2D,GAAGlE,EAAE8yB,MAAM7uB,EAAEgtB,EAAE3yB,EAAEgvB,aAAa4D,EAAElxB,EAAEqvB,QAAwB,kBAAhBlrB,EAAE5F,EAAEg0B,cAAiC,OAAOpuB,EAAEA,EAAEirB,GAAGjrB,GAAyBA,EAAE2mB,GAAGxsB,EAA1B6F,EAAE+mB,GAAG3sB,GAAGssB,GAAGF,GAAEna,SAAmB,IAAI2gB,EAAE5yB,EAAEw0B,0BAA0B1jB,EAAE,oBAAoB8hB,GAAG,oBAAoBnxB,EAAEgzB,0BAC9e,oBAAoBhzB,EAAE4yB,kCAAkC,oBAAoB5yB,EAAE2yB,4BAA4BzuB,IAAI+sB,GAAGC,IAAI/sB,IAAIuuB,GAAGp0B,EAAE0B,EAAEH,EAAEsE,GAAG0rB,IAAG,EAAGqB,EAAE5yB,EAAE4R,cAAclQ,EAAEwyB,MAAMtB,EAAEF,GAAG1yB,EAAEuB,EAAEG,EAAEF,GAAG,IAAIqnB,EAAE7oB,EAAE4R,cAAchM,IAAI+sB,GAAGC,IAAI/J,GAAGyD,GAAGpa,SAASqf,IAAI,oBAAoBsB,IAAIM,GAAGnzB,EAAEC,EAAE4yB,EAAEtxB,GAAGsnB,EAAE7oB,EAAE4R,gBAAgBjM,EAAE4rB,IAAIsC,GAAG7zB,EAAEC,EAAE0F,EAAEpE,EAAEqxB,EAAE/J,EAAEhjB,KAAI,IAAKkL,GAAG,oBAAoBrP,EAAEs9B,4BAA4B,oBAAoBt9B,EAAEu9B,sBAAsB,oBAAoBv9B,EAAEu9B,qBAAqBv9B,EAAEu9B,oBAAoB19B,EAAEsnB,EAAEhjB,GAAG,oBAAoBnE,EAAEs9B,4BAC5ft9B,EAAEs9B,2BAA2Bz9B,EAAEsnB,EAAEhjB,IAAI,oBAAoBnE,EAAEw9B,qBAAqBl/B,EAAE0R,OAAO,GAAG,oBAAoBhQ,EAAEgzB,0BAA0B10B,EAAE0R,OAAO,QAAQ,oBAAoBhQ,EAAEw9B,oBAAoBt5B,IAAI7F,EAAE0vB,eAAemD,IAAI7yB,EAAE6R,gBAAgB5R,EAAE0R,OAAO,GAAG,oBAAoBhQ,EAAEgzB,yBAAyB9uB,IAAI7F,EAAE0vB,eAAemD,IAAI7yB,EAAE6R,gBAAgB5R,EAAE0R,OAAO,MAAM1R,EAAEyvB,cAAcluB,EAAEvB,EAAE4R,cAAciX,GAAGnnB,EAAE8yB,MAAMjzB,EAAEG,EAAEwyB,MAAMrL,EAAEnnB,EAAEqvB,QAAQlrB,EAAEtE,EAAEoE,IAAI,oBAAoBjE,EAAEw9B,oBAAoBt5B,IAAI7F,EAAE0vB,eAAemD,IACjf7yB,EAAE6R,gBAAgB5R,EAAE0R,OAAO,GAAG,oBAAoBhQ,EAAEgzB,yBAAyB9uB,IAAI7F,EAAE0vB,eAAemD,IAAI7yB,EAAE6R,gBAAgB5R,EAAE0R,OAAO,MAAMnQ,GAAE,EAAG,CAAC,OAAO49B,GAAGp/B,EAAEC,EAAEC,EAAEsB,EAAEE,EAAED,EAAE,CACnK,SAAS29B,GAAGp/B,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,GAAGo9B,GAAG9+B,EAAEC,GAAG,IAAI0B,EAAE,KAAa,IAAR1B,EAAE0R,OAAW,IAAInQ,IAAIG,EAAE,OAAOF,GAAG4rB,GAAGptB,EAAEC,GAAE,GAAIg+B,GAAGl+B,EAAEC,EAAEyB,GAAGF,EAAEvB,EAAE+P,UAAU8tB,GAAG3rB,QAAQlS,EAAE,IAAI4F,EAAElE,GAAG,oBAAoBzB,EAAEm9B,yBAAyB,KAAK77B,EAAE4E,SAAwI,OAA/HnG,EAAE0R,OAAO,EAAE,OAAO3R,GAAG2B,GAAG1B,EAAEgS,MAAM8jB,GAAG91B,EAAED,EAAEiS,MAAM,KAAKvQ,GAAGzB,EAAEgS,MAAM8jB,GAAG91B,EAAE,KAAK4F,EAAEnE,IAAIs8B,GAAGh+B,EAAEC,EAAE4F,EAAEnE,GAAGzB,EAAE4R,cAAcrQ,EAAE2yB,MAAM1yB,GAAG4rB,GAAGptB,EAAEC,GAAE,GAAWD,EAAEgS,KAAK,CAAC,SAASotB,GAAGr/B,GAAG,IAAIC,EAAED,EAAEgQ,UAAU/P,EAAEq/B,eAAetS,GAAGhtB,EAAEC,EAAEq/B,eAAer/B,EAAEq/B,iBAAiBr/B,EAAE+wB,SAAS/wB,EAAE+wB,SAAShE,GAAGhtB,EAAEC,EAAE+wB,SAAQ,GAAIsF,GAAGt2B,EAAEC,EAAEkX,cAAc,CAC5e,SAASooB,GAAGv/B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAuC,OAApCmuB,KAAKC,GAAGpuB,GAAGxB,EAAE0R,OAAO,IAAIqsB,GAAGh+B,EAAEC,EAAEC,EAAEsB,GAAUvB,EAAEgS,KAAK,CAAC,IAaqLutB,GAAGC,GAAGC,GAAGC,GAb1LC,GAAG,CAAC9tB,WAAW,KAAKqd,YAAY,KAAKC,UAAU,GAAG,SAASyQ,GAAG7/B,GAAG,MAAM,CAACy+B,UAAUz+B,EAAE0+B,UAAU,KAAKC,YAAY,KAAK,CAClM,SAASmB,GAAG9/B,EAAEC,EAAEC,GAAG,IAA0D2F,EAAtDrE,EAAEvB,EAAEgvB,aAAaxtB,EAAEk1B,GAAExkB,QAAQzQ,GAAE,EAAGC,EAAE,KAAa,IAAR1B,EAAE0R,OAAqJ,IAAvI9L,EAAElE,KAAKkE,GAAE,OAAO7F,GAAG,OAAOA,EAAE6R,gBAAiB,KAAO,EAAFpQ,IAASoE,GAAEnE,GAAE,EAAGzB,EAAE0R,QAAQ,KAAY,OAAO3R,GAAG,OAAOA,EAAE6R,gBAAcpQ,GAAG,GAAE2qB,GAAEuK,GAAI,EAAFl1B,GAAQ,OAAOzB,EAA2B,OAAxBuvB,GAAGtvB,GAAwB,QAArBD,EAAEC,EAAE4R,gBAA2C,QAAf7R,EAAEA,EAAE8R,aAA4B,KAAY,EAAP7R,EAAEqvB,MAAQrvB,EAAE4wB,MAAM,EAAE,OAAO7wB,EAAE6c,KAAK5c,EAAE4wB,MAAM,EAAE5wB,EAAE4wB,MAAM,WAAW,OAAKlvB,EAAEH,EAAE8H,SAAStJ,EAAEwB,EAAEu+B,SAAgBr+B,GAAGF,EAAEvB,EAAEqvB,KAAK5tB,EAAEzB,EAAEgS,MAAMtQ,EAAE,CAAC2tB,KAAK,SAAShmB,SAAS3H,GAAG,KAAO,EAAFH,IAAM,OAAOE,GAAGA,EAAE+uB,WAAW,EAAE/uB,EAAEutB,aAC7ettB,GAAGD,EAAEs+B,GAAGr+B,EAAEH,EAAE,EAAE,MAAMxB,EAAE61B,GAAG71B,EAAEwB,EAAEtB,EAAE,MAAMwB,EAAEgQ,OAAOzR,EAAED,EAAE0R,OAAOzR,EAAEyB,EAAEwQ,QAAQlS,EAAEC,EAAEgS,MAAMvQ,EAAEzB,EAAEgS,MAAMJ,cAAcguB,GAAG3/B,GAAGD,EAAE4R,cAAc+tB,GAAG5/B,GAAGigC,GAAGhgC,EAAE0B,IAAqB,GAAG,QAArBF,EAAEzB,EAAE6R,gBAA2C,QAAfhM,EAAEpE,EAAEqQ,YAAqB,OAGpM,SAAY9R,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,GAAG,GAAGzB,EAAG,OAAW,IAARD,EAAE0R,OAAiB1R,EAAE0R,QAAQ,IAAwBuuB,GAAGlgC,EAAEC,EAAE0B,EAA3BH,EAAEm7B,GAAG13B,MAAMlF,EAAE,SAAsB,OAAOE,EAAE4R,eAAqB5R,EAAEgS,MAAMjS,EAAEiS,MAAMhS,EAAE0R,OAAO,IAAI,OAAKjQ,EAAEF,EAAEu+B,SAASt+B,EAAExB,EAAEqvB,KAAK9tB,EAAEw+B,GAAG,CAAC1Q,KAAK,UAAUhmB,SAAS9H,EAAE8H,UAAU7H,EAAE,EAAE,OAAMC,EAAEm0B,GAAGn0B,EAAED,EAAEE,EAAE,OAAQgQ,OAAO,EAAEnQ,EAAEkQ,OAAOzR,EAAEyB,EAAEgQ,OAAOzR,EAAEuB,EAAE0Q,QAAQxQ,EAAEzB,EAAEgS,MAAMzQ,EAAE,KAAY,EAAPvB,EAAEqvB,OAASyG,GAAG91B,EAAED,EAAEiS,MAAM,KAAKtQ,GAAG1B,EAAEgS,MAAMJ,cAAcguB,GAAGl+B,GAAG1B,EAAE4R,cAAc+tB,GAAUl+B,GAAE,GAAG,KAAY,EAAPzB,EAAEqvB,MAAQ,OAAO4Q,GAAGlgC,EAAEC,EAAE0B,EAAE,MAAM,GAAG,OAAOF,EAAEob,KAAK,CAChd,GADidrb,EAAEC,EAAEoiB,aAAapiB,EAAEoiB,YAAYsc,QAC3e,IAAIt6B,EAAErE,EAAE4+B,KAA0C,OAArC5+B,EAAEqE,EAA0Cq6B,GAAGlgC,EAAEC,EAAE0B,EAA/BH,EAAEm7B,GAAlBj7B,EAAEuD,MAAMlF,EAAE,MAAayB,OAAE,GAA0B,CAAwB,GAAvBqE,EAAE,KAAKlE,EAAE3B,EAAEywB,YAAeK,IAAIjrB,EAAE,CAAK,GAAG,QAAPrE,EAAEg4B,IAAc,CAAC,OAAO73B,GAAGA,GAAG,KAAK,EAAEF,EAAE,EAAE,MAAM,KAAK,GAAGA,EAAE,EAAE,MAAM,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,SAASA,EAAE,GAAG,MAAM,KAAK,UAAUA,EAAE,UAAU,MAAM,QAAQA,EAAE,EAChd,KADkdA,EAAE,KAAKA,GAAGD,EAAEkT,eAAe/S,IAAI,EAAEF,IAC5eA,IAAIC,EAAE0tB,YAAY1tB,EAAE0tB,UAAU3tB,EAAE8vB,GAAGvxB,EAAEyB,GAAGkyB,GAAGnyB,EAAExB,EAAEyB,GAAG,GAAG,CAA0B,OAAzB4+B,KAAgCH,GAAGlgC,EAAEC,EAAE0B,EAAlCH,EAAEm7B,GAAG13B,MAAMlF,EAAE,OAAyB,CAAC,MAAG,OAAO0B,EAAEob,MAAY5c,EAAE0R,OAAO,IAAI1R,EAAEgS,MAAMjS,EAAEiS,MAAMhS,EAAEqgC,GAAG3X,KAAK,KAAK3oB,GAAGyB,EAAE8+B,YAAYtgC,EAAE,OAAKD,EAAE0B,EAAEytB,YAAYV,GAAGjD,GAAG/pB,EAAEoiB,aAAa2K,GAAGvuB,EAAEyuB,IAAE,EAAGC,GAAG,KAAK,OAAO3uB,IAAI+tB,GAAGC,MAAME,GAAGH,GAAGC,MAAMG,GAAGJ,GAAGC,MAAMC,GAAGC,GAAGluB,EAAEoY,GAAG+V,GAAGnuB,EAAEkvB,SAASjB,GAAGhuB,GAAGA,EAAEggC,GAAGhgC,EAAEuB,EAAE8H,UAAUrJ,EAAE0R,OAAO,KAAY1R,EAAC,CALrKugC,CAAGxgC,EAAEC,EAAE0B,EAAEH,EAAEqE,EAAEpE,EAAEvB,GAAG,GAAGwB,EAAE,CAACA,EAAEF,EAAEu+B,SAASp+B,EAAE1B,EAAEqvB,KAAezpB,GAAVpE,EAAEzB,EAAEiS,OAAUC,QAAQ,IAAIpM,EAAE,CAACwpB,KAAK,SAAShmB,SAAS9H,EAAE8H,UAChF,OAD0F,KAAO,EAAF3H,IAAM1B,EAAEgS,QAAQxQ,IAAGD,EAAEvB,EAAEgS,OAAQwe,WAAW,EAAEjvB,EAAEytB,aAAanpB,EAAE7F,EAAE8uB,UAAU,OAAOvtB,EAAEg0B,GAAG/zB,EAAEqE,IAAK26B,aAA4B,SAAfh/B,EAAEg/B,aAAuB,OAAO56B,EAAEnE,EAAE8zB,GAAG3vB,EAAEnE,IAAIA,EAAEm0B,GAAGn0B,EAAEC,EAAEzB,EAAE,OAAQyR,OAAO,EAAGjQ,EAAEgQ,OACnfzR,EAAEuB,EAAEkQ,OAAOzR,EAAEuB,EAAE0Q,QAAQxQ,EAAEzB,EAAEgS,MAAMzQ,EAAEA,EAAEE,EAAEA,EAAEzB,EAAEgS,MAA8BtQ,EAAE,QAA1BA,EAAE3B,EAAEiS,MAAMJ,eAAyBguB,GAAG3/B,GAAG,CAACu+B,UAAU98B,EAAE88B,UAAUv+B,EAAEw+B,UAAU,KAAKC,YAAYh9B,EAAEg9B,aAAaj9B,EAAEmQ,cAAclQ,EAAED,EAAE+uB,WAAWzwB,EAAEywB,YAAYvwB,EAAED,EAAE4R,cAAc+tB,GAAUp+B,CAAC,CAAoO,OAAzNxB,GAAV0B,EAAE1B,EAAEiS,OAAUC,QAAQ1Q,EAAEg0B,GAAG9zB,EAAE,CAAC4tB,KAAK,UAAUhmB,SAAS9H,EAAE8H,WAAW,KAAY,EAAPrJ,EAAEqvB,QAAU9tB,EAAEqvB,MAAM3wB,GAAGsB,EAAEkQ,OAAOzR,EAAEuB,EAAE0Q,QAAQ,KAAK,OAAOlS,IAAkB,QAAdE,EAAED,EAAE8uB,YAAoB9uB,EAAE8uB,UAAU,CAAC/uB,GAAGC,EAAE0R,OAAO,IAAIzR,EAAEiQ,KAAKnQ,IAAIC,EAAEgS,MAAMzQ,EAAEvB,EAAE4R,cAAc,KAAYrQ,CAAC,CACnd,SAASy+B,GAAGjgC,EAAEC,GAA8D,OAA3DA,EAAE+/B,GAAG,CAAC1Q,KAAK,UAAUhmB,SAASrJ,GAAGD,EAAEsvB,KAAK,EAAE,OAAQ5d,OAAO1R,EAASA,EAAEiS,MAAMhS,CAAC,CAAC,SAASigC,GAAGlgC,EAAEC,EAAEC,EAAEsB,GAAwG,OAArG,OAAOA,GAAGquB,GAAGruB,GAAGu0B,GAAG91B,EAAED,EAAEiS,MAAM,KAAK/R,IAAGF,EAAEigC,GAAGhgC,EAAEA,EAAEgvB,aAAa3lB,WAAYqI,OAAO,EAAE1R,EAAE4R,cAAc,KAAY7R,CAAC,CAGkJ,SAAS0gC,GAAG1gC,EAAEC,EAAEC,GAAGF,EAAE6wB,OAAO5wB,EAAE,IAAIuB,EAAExB,EAAEyR,UAAU,OAAOjQ,IAAIA,EAAEqvB,OAAO5wB,GAAGuwB,GAAGxwB,EAAE0R,OAAOzR,EAAEC,EAAE,CACxc,SAASygC,GAAG3gC,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,IAAIC,EAAE1B,EAAE6R,cAAc,OAAOnQ,EAAE1B,EAAE6R,cAAc,CAAC+uB,YAAY3gC,EAAE4gC,UAAU,KAAKC,mBAAmB,EAAEC,KAAKv/B,EAAEw/B,KAAK9gC,EAAE+gC,SAASx/B,IAAIC,EAAEk/B,YAAY3gC,EAAEyB,EAAEm/B,UAAU,KAAKn/B,EAAEo/B,mBAAmB,EAAEp/B,EAAEq/B,KAAKv/B,EAAEE,EAAEs/B,KAAK9gC,EAAEwB,EAAEu/B,SAASx/B,EAAE,CAC3O,SAASy/B,GAAGlhC,EAAEC,EAAEC,GAAG,IAAIsB,EAAEvB,EAAEgvB,aAAaxtB,EAAED,EAAEq1B,YAAYn1B,EAAEF,EAAEw/B,KAAsC,GAAjChD,GAAGh+B,EAAEC,EAAEuB,EAAE8H,SAASpJ,GAAkB,KAAO,GAAtBsB,EAAEm1B,GAAExkB,UAAqB3Q,EAAI,EAAFA,EAAI,EAAEvB,EAAE0R,OAAO,QAAQ,CAAC,GAAG,OAAO3R,GAAG,KAAa,IAARA,EAAE2R,OAAW3R,EAAE,IAAIA,EAAEC,EAAEgS,MAAM,OAAOjS,GAAG,CAAC,GAAG,KAAKA,EAAEmG,IAAI,OAAOnG,EAAE6R,eAAe6uB,GAAG1gC,EAAEE,EAAED,QAAQ,GAAG,KAAKD,EAAEmG,IAAIu6B,GAAG1gC,EAAEE,EAAED,QAAQ,GAAG,OAAOD,EAAEiS,MAAM,CAACjS,EAAEiS,MAAMP,OAAO1R,EAAEA,EAAEA,EAAEiS,MAAM,QAAQ,CAAC,GAAGjS,IAAIC,EAAE,MAAMD,EAAE,KAAK,OAAOA,EAAEkS,SAAS,CAAC,GAAG,OAAOlS,EAAE0R,QAAQ1R,EAAE0R,SAASzR,EAAE,MAAMD,EAAEA,EAAEA,EAAE0R,MAAM,CAAC1R,EAAEkS,QAAQR,OAAO1R,EAAE0R,OAAO1R,EAAEA,EAAEkS,OAAO,CAAC1Q,GAAG,CAAC,CAAQ,GAAP4qB,GAAEuK,GAAEn1B,GAAM,KAAY,EAAPvB,EAAEqvB,MAAQrvB,EAAE4R,cAC/e,UAAU,OAAOpQ,GAAG,IAAK,WAAqB,IAAVvB,EAAED,EAAEgS,MAAUxQ,EAAE,KAAK,OAAOvB,GAAiB,QAAdF,EAAEE,EAAEuR,YAAoB,OAAOmlB,GAAG52B,KAAKyB,EAAEvB,GAAGA,EAAEA,EAAEgS,QAAY,QAAJhS,EAAEuB,IAAYA,EAAExB,EAAEgS,MAAMhS,EAAEgS,MAAM,OAAOxQ,EAAEvB,EAAEgS,QAAQhS,EAAEgS,QAAQ,MAAMyuB,GAAG1gC,GAAE,EAAGwB,EAAEvB,EAAEwB,GAAG,MAAM,IAAK,YAA6B,IAAjBxB,EAAE,KAAKuB,EAAExB,EAAEgS,MAAUhS,EAAEgS,MAAM,KAAK,OAAOxQ,GAAG,CAAe,GAAG,QAAjBzB,EAAEyB,EAAEgQ,YAAuB,OAAOmlB,GAAG52B,GAAG,CAACC,EAAEgS,MAAMxQ,EAAE,KAAK,CAACzB,EAAEyB,EAAEyQ,QAAQzQ,EAAEyQ,QAAQhS,EAAEA,EAAEuB,EAAEA,EAAEzB,CAAC,CAAC2gC,GAAG1gC,GAAE,EAAGC,EAAE,KAAKwB,GAAG,MAAM,IAAK,WAAWi/B,GAAG1gC,GAAE,EAAG,KAAK,UAAK,GAAQ,MAAM,QAAQA,EAAE4R,cAAc,KAAK,OAAO5R,EAAEgS,KAAK,CAC7d,SAAS+sB,GAAGh/B,EAAEC,GAAG,KAAY,EAAPA,EAAEqvB,OAAS,OAAOtvB,IAAIA,EAAEyR,UAAU,KAAKxR,EAAEwR,UAAU,KAAKxR,EAAE0R,OAAO,EAAE,CAAC,SAASusB,GAAGl+B,EAAEC,EAAEC,GAAyD,GAAtD,OAAOF,IAAIC,EAAE0wB,aAAa3wB,EAAE2wB,cAAcoC,IAAI9yB,EAAE4wB,MAAS,KAAK3wB,EAAED,EAAEwwB,YAAY,OAAO,KAAK,GAAG,OAAOzwB,GAAGC,EAAEgS,QAAQjS,EAAEiS,MAAM,MAAMhN,MAAMlF,EAAE,MAAM,GAAG,OAAOE,EAAEgS,MAAM,CAA4C,IAAjC/R,EAAEs1B,GAAZx1B,EAAEC,EAAEgS,MAAajS,EAAEivB,cAAchvB,EAAEgS,MAAM/R,EAAMA,EAAEwR,OAAOzR,EAAE,OAAOD,EAAEkS,SAASlS,EAAEA,EAAEkS,SAAQhS,EAAEA,EAAEgS,QAAQsjB,GAAGx1B,EAAEA,EAAEivB,eAAgBvd,OAAOzR,EAAEC,EAAEgS,QAAQ,IAAI,CAAC,OAAOjS,EAAEgS,KAAK,CAO9a,SAASkvB,GAAGnhC,EAAEC,GAAG,IAAIyuB,GAAE,OAAO1uB,EAAEihC,UAAU,IAAK,SAAShhC,EAAED,EAAEghC,KAAK,IAAI,IAAI9gC,EAAE,KAAK,OAAOD,GAAG,OAAOA,EAAEwR,YAAYvR,EAAED,GAAGA,EAAEA,EAAEiS,QAAQ,OAAOhS,EAAEF,EAAEghC,KAAK,KAAK9gC,EAAEgS,QAAQ,KAAK,MAAM,IAAK,YAAYhS,EAAEF,EAAEghC,KAAK,IAAI,IAAIx/B,EAAE,KAAK,OAAOtB,GAAG,OAAOA,EAAEuR,YAAYjQ,EAAEtB,GAAGA,EAAEA,EAAEgS,QAAQ,OAAO1Q,EAAEvB,GAAG,OAAOD,EAAEghC,KAAKhhC,EAAEghC,KAAK,KAAKhhC,EAAEghC,KAAK9uB,QAAQ,KAAK1Q,EAAE0Q,QAAQ,KAAK,CAC5U,SAASkvB,GAAEphC,GAAG,IAAIC,EAAE,OAAOD,EAAEyR,WAAWzR,EAAEyR,UAAUQ,QAAQjS,EAAEiS,MAAM/R,EAAE,EAAEsB,EAAE,EAAE,GAAGvB,EAAE,IAAI,IAAIwB,EAAEzB,EAAEiS,MAAM,OAAOxQ,GAAGvB,GAAGuB,EAAEovB,MAAMpvB,EAAEgvB,WAAWjvB,GAAkB,SAAfC,EAAEg/B,aAAsBj/B,GAAW,SAARC,EAAEkQ,MAAelQ,EAAEiQ,OAAO1R,EAAEyB,EAAEA,EAAEyQ,aAAa,IAAIzQ,EAAEzB,EAAEiS,MAAM,OAAOxQ,GAAGvB,GAAGuB,EAAEovB,MAAMpvB,EAAEgvB,WAAWjvB,GAAGC,EAAEg/B,aAAaj/B,GAAGC,EAAEkQ,MAAMlQ,EAAEiQ,OAAO1R,EAAEyB,EAAEA,EAAEyQ,QAAyC,OAAjClS,EAAEygC,cAAcj/B,EAAExB,EAAEywB,WAAWvwB,EAASD,CAAC,CAC7V,SAASohC,GAAGrhC,EAAEC,EAAEC,GAAG,IAAIsB,EAAEvB,EAAEgvB,aAAmB,OAANV,GAAGtuB,GAAUA,EAAEkG,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,OAAOi7B,GAAEnhC,GAAG,KAAK,KAAK,EAUtD,KAAK,GAAG,OAAO4sB,GAAG5sB,EAAEiC,OAAO6qB,KAAKqU,GAAEnhC,GAAG,KAVqD,KAAK,EAA2Q,OAAzQuB,EAAEvB,EAAE+P,UAAUwmB,KAAKrK,GAAEI,IAAIJ,GAAEG,IAAGyK,KAAKv1B,EAAE89B,iBAAiB99B,EAAEwvB,QAAQxvB,EAAE89B,eAAe99B,EAAE89B,eAAe,MAAS,OAAOt/B,GAAG,OAAOA,EAAEiS,QAAMwd,GAAGxvB,GAAGA,EAAE0R,OAAO,EAAE,OAAO3R,GAAGA,EAAE6R,cAAcqF,cAAc,KAAa,IAARjX,EAAE0R,SAAa1R,EAAE0R,OAAO,KAAK,OAAOgd,KAAK2S,GAAG3S,IAAIA,GAAG,QAAO8Q,GAAGz/B,EAAEC,GAAGmhC,GAAEnhC,GAAU,KAAK,KAAK,EAAEy2B,GAAGz2B,GAAG,IAAIwB,EAAE40B,GAAGD,GAAGjkB,SAC7e,GAATjS,EAAED,EAAEiC,KAAQ,OAAOlC,GAAG,MAAMC,EAAE+P,UAAU0vB,GAAG1/B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAGzB,EAAEg1B,MAAM/0B,EAAE+0B,MAAM/0B,EAAE0R,OAAO,IAAI1R,EAAE0R,OAAO,aAAa,CAAC,IAAInQ,EAAE,CAAC,GAAG,OAAOvB,EAAE+P,UAAU,MAAM/K,MAAMlF,EAAE,MAAW,OAALqhC,GAAEnhC,GAAU,IAAI,CAAkB,GAAjBD,EAAEq2B,GAAGH,GAAG/jB,SAAYsd,GAAGxvB,GAAG,CAACuB,EAAEvB,EAAE+P,UAAU9P,EAAED,EAAEiC,KAAK,IAAIR,EAAEzB,EAAEyvB,cAA+C,OAAjCluB,EAAEoqB,IAAI3rB,EAAEuB,EAAEqqB,IAAInqB,EAAE1B,EAAE,KAAY,EAAPC,EAAEqvB,MAAepvB,GAAG,IAAK,SAASioB,GAAE,SAAS3mB,GAAG2mB,GAAE,QAAQ3mB,GAAG,MAAM,IAAK,SAAS,IAAK,SAAS,IAAK,QAAQ2mB,GAAE,OAAO3mB,GAAG,MAAM,IAAK,QAAQ,IAAK,QAAQ,IAAIC,EAAE,EAAEA,EAAEmmB,GAAGxnB,OAAOqB,IAAI0mB,GAAEP,GAAGnmB,GAAGD,GAAG,MAAM,IAAK,SAAS2mB,GAAE,QAAQ3mB,GAAG,MAAM,IAAK,MAAM,IAAK,QAAQ,IAAK,OAAO2mB,GAAE,QACnhB3mB,GAAG2mB,GAAE,OAAO3mB,GAAG,MAAM,IAAK,UAAU2mB,GAAE,SAAS3mB,GAAG,MAAM,IAAK,QAAQ4G,EAAG5G,EAAEE,GAAGymB,GAAE,UAAU3mB,GAAG,MAAM,IAAK,SAASA,EAAE0G,cAAc,CAACq5B,cAAc7/B,EAAE8/B,UAAUrZ,GAAE,UAAU3mB,GAAG,MAAM,IAAK,WAAW+H,GAAG/H,EAAEE,GAAGymB,GAAE,UAAU3mB,GAAkB,IAAI,IAAIG,KAAvBuN,GAAGhP,EAAEwB,GAAGD,EAAE,KAAkBC,EAAE,GAAGA,EAAEP,eAAeQ,GAAG,CAAC,IAAIkE,EAAEnE,EAAEC,GAAG,aAAaA,EAAE,kBAAkBkE,EAAErE,EAAEkI,cAAc7D,KAAI,IAAKnE,EAAE+/B,0BAA0BpX,GAAG7oB,EAAEkI,YAAY7D,EAAE7F,GAAGyB,EAAE,CAAC,WAAWoE,IAAI,kBAAkBA,GAAGrE,EAAEkI,cAAc,GAAG7D,KAAI,IAAKnE,EAAE+/B,0BAA0BpX,GAAG7oB,EAAEkI,YAC1e7D,EAAE7F,GAAGyB,EAAE,CAAC,WAAW,GAAGoE,IAAIrF,EAAGW,eAAeQ,IAAI,MAAMkE,GAAG,aAAalE,GAAGwmB,GAAE,SAAS3mB,EAAE,CAAC,OAAOtB,GAAG,IAAK,QAAQ4G,EAAGtF,GAAGkH,EAAGlH,EAAEE,GAAE,GAAI,MAAM,IAAK,WAAWoF,EAAGtF,GAAGiI,GAAGjI,GAAG,MAAM,IAAK,SAAS,IAAK,SAAS,MAAM,QAAQ,oBAAoBE,EAAEggC,UAAUlgC,EAAEmgC,QAAQrX,IAAI9oB,EAAEC,EAAExB,EAAEyxB,YAAYlwB,EAAE,OAAOA,IAAIvB,EAAE0R,OAAO,EAAE,KAAK,CAAChQ,EAAE,IAAIF,EAAEiJ,SAASjJ,EAAEA,EAAEkH,cAAc,iCAAiC3I,IAAIA,EAAE2J,GAAGzJ,IAAI,iCAAiCF,EAAE,WAAWE,IAAGF,EAAE2B,EAAEZ,cAAc,QAASiJ,UAAU,qBAAuBhK,EAAEA,EAAEoK,YAAYpK,EAAEmK,aAC/f,kBAAkB3I,EAAE4N,GAAGpP,EAAE2B,EAAEZ,cAAcb,EAAE,CAACkP,GAAG5N,EAAE4N,MAAMpP,EAAE2B,EAAEZ,cAAcb,GAAG,WAAWA,IAAIyB,EAAE3B,EAAEwB,EAAEggC,SAAS7/B,EAAE6/B,UAAS,EAAGhgC,EAAEogC,OAAOjgC,EAAEigC,KAAKpgC,EAAEogC,QAAQ5hC,EAAE2B,EAAEkgC,gBAAgB7hC,EAAEE,GAAGF,EAAE4rB,IAAI3rB,EAAED,EAAE6rB,IAAIrqB,EAAEg+B,GAAGx/B,EAAEC,GAAE,GAAG,GAAIA,EAAE+P,UAAUhQ,EAAEA,EAAE,CAAW,OAAV2B,EAAEwN,GAAGjP,EAAEsB,GAAUtB,GAAG,IAAK,SAASioB,GAAE,SAASnoB,GAAGmoB,GAAE,QAAQnoB,GAAGyB,EAAED,EAAE,MAAM,IAAK,SAAS,IAAK,SAAS,IAAK,QAAQ2mB,GAAE,OAAOnoB,GAAGyB,EAAED,EAAE,MAAM,IAAK,QAAQ,IAAK,QAAQ,IAAIC,EAAE,EAAEA,EAAEmmB,GAAGxnB,OAAOqB,IAAI0mB,GAAEP,GAAGnmB,GAAGzB,GAAGyB,EAAED,EAAE,MAAM,IAAK,SAAS2mB,GAAE,QAAQnoB,GAAGyB,EAAED,EAAE,MAAM,IAAK,MAAM,IAAK,QAAQ,IAAK,OAAO2mB,GAAE,QAClfnoB,GAAGmoB,GAAE,OAAOnoB,GAAGyB,EAAED,EAAE,MAAM,IAAK,UAAU2mB,GAAE,SAASnoB,GAAGyB,EAAED,EAAE,MAAM,IAAK,QAAQ4G,EAAGpI,EAAEwB,GAAGC,EAAEsG,EAAG/H,EAAEwB,GAAG2mB,GAAE,UAAUnoB,GAAG,MAAM,IAAK,SAAiL,QAAQyB,EAAED,QAAxK,IAAK,SAASxB,EAAEkI,cAAc,CAACq5B,cAAc//B,EAAEggC,UAAU//B,EAAEqD,EAAE,CAAC,EAAEtD,EAAE,CAACmG,WAAM,IAASwgB,GAAE,UAAUnoB,GAAG,MAAM,IAAK,WAAWuJ,GAAGvJ,EAAEwB,GAAGC,EAAE2H,GAAGpJ,EAAEwB,GAAG2mB,GAAE,UAAUnoB,GAAiC,IAAI0B,KAAhBwN,GAAGhP,EAAEuB,GAAGoE,EAAEpE,EAAa,GAAGoE,EAAE1E,eAAeO,GAAG,CAAC,IAAIoE,EAAED,EAAEnE,GAAG,UAAUA,EAAEgM,GAAG1N,EAAE8F,GAAG,4BAA4BpE,EAAuB,OAApBoE,EAAEA,EAAEA,EAAE4kB,YAAO,IAAgB5gB,GAAG9J,EAAE8F,GAAI,aAAapE,EAAE,kBAAkBoE,GAAG,aAC7e5F,GAAG,KAAK4F,IAAI0E,GAAGxK,EAAE8F,GAAG,kBAAkBA,GAAG0E,GAAGxK,EAAE,GAAG8F,GAAG,mCAAmCpE,GAAG,6BAA6BA,GAAG,cAAcA,IAAIlB,EAAGW,eAAeO,GAAG,MAAMoE,GAAG,aAAapE,GAAGymB,GAAE,SAASnoB,GAAG,MAAM8F,GAAGlD,EAAG5C,EAAE0B,EAAEoE,EAAEnE,GAAG,CAAC,OAAOzB,GAAG,IAAK,QAAQ4G,EAAG9G,GAAG0I,EAAG1I,EAAEwB,GAAE,GAAI,MAAM,IAAK,WAAWsF,EAAG9G,GAAGyJ,GAAGzJ,GAAG,MAAM,IAAK,SAAS,MAAMwB,EAAEmG,OAAO3H,EAAEqD,aAAa,QAAQ,GAAGsD,EAAGnF,EAAEmG,QAAQ,MAAM,IAAK,SAAS3H,EAAEwhC,WAAWhgC,EAAEggC,SAAmB,OAAV9/B,EAAEF,EAAEmG,OAAcoB,GAAG/I,IAAIwB,EAAEggC,SAAS9/B,GAAE,GAAI,MAAMF,EAAEyG,cAAcc,GAAG/I,IAAIwB,EAAEggC,SAAShgC,EAAEyG,cAClf,GAAI,MAAM,QAAQ,oBAAoBxG,EAAEigC,UAAU1hC,EAAE2hC,QAAQrX,IAAI,OAAOpqB,GAAG,IAAK,SAAS,IAAK,QAAQ,IAAK,SAAS,IAAK,WAAWsB,IAAIA,EAAEsgC,UAAU,MAAM9hC,EAAE,IAAK,MAAMwB,GAAE,EAAG,MAAMxB,EAAE,QAAQwB,GAAE,EAAG,CAACA,IAAIvB,EAAE0R,OAAO,EAAE,CAAC,OAAO1R,EAAE+0B,MAAM/0B,EAAE0R,OAAO,IAAI1R,EAAE0R,OAAO,QAAQ,CAAM,OAALyvB,GAAEnhC,GAAU,KAAK,KAAK,EAAE,GAAGD,GAAG,MAAMC,EAAE+P,UAAU2vB,GAAG3/B,EAAEC,EAAED,EAAE0vB,cAAcluB,OAAO,CAAC,GAAG,kBAAkBA,GAAG,OAAOvB,EAAE+P,UAAU,MAAM/K,MAAMlF,EAAE,MAAsC,GAAhCG,EAAEm2B,GAAGD,GAAGjkB,SAASkkB,GAAGH,GAAG/jB,SAAYsd,GAAGxvB,GAAG,CAAyC,GAAxCuB,EAAEvB,EAAE+P,UAAU9P,EAAED,EAAEyvB,cAAcluB,EAAEoqB,IAAI3rB,GAAKyB,EAAEF,EAAEmJ,YAAYzK,IAC/e,QADofF,EACvfwuB,IAAY,OAAOxuB,EAAEmG,KAAK,KAAK,EAAEkkB,GAAG7oB,EAAEmJ,UAAUzK,EAAE,KAAY,EAAPF,EAAEsvB,OAAS,MAAM,KAAK,GAAE,IAAKtvB,EAAE0vB,cAAc+R,0BAA0BpX,GAAG7oB,EAAEmJ,UAAUzK,EAAE,KAAY,EAAPF,EAAEsvB,OAAS5tB,IAAIzB,EAAE0R,OAAO,EAAE,MAAMnQ,GAAG,IAAItB,EAAEwK,SAASxK,EAAEA,EAAEyI,eAAeo5B,eAAevgC,IAAKoqB,IAAI3rB,EAAEA,EAAE+P,UAAUxO,CAAC,CAAM,OAAL4/B,GAAEnhC,GAAU,KAAK,KAAK,GAA0B,GAAvBksB,GAAEwK,IAAGn1B,EAAEvB,EAAE4R,cAAiB,OAAO7R,GAAG,OAAOA,EAAE6R,eAAe,OAAO7R,EAAE6R,cAAcC,WAAW,CAAC,GAAG4c,IAAG,OAAOD,IAAI,KAAY,EAAPxuB,EAAEqvB,OAAS,KAAa,IAARrvB,EAAE0R,OAAWge,KAAKC,KAAK3vB,EAAE0R,OAAO,MAAMjQ,GAAE,OAAQ,GAAGA,EAAE+tB,GAAGxvB,GAAG,OAAOuB,GAAG,OAAOA,EAAEsQ,WAAW,CAAC,GAAG,OAC5f9R,EAAE,CAAC,IAAI0B,EAAE,MAAMuD,MAAMlF,EAAE,MAAqD,KAA7B2B,EAAE,QAApBA,EAAEzB,EAAE4R,eAAyBnQ,EAAEoQ,WAAW,MAAW,MAAM7M,MAAMlF,EAAE,MAAM2B,EAAEkqB,IAAI3rB,CAAC,MAAM2vB,KAAK,KAAa,IAAR3vB,EAAE0R,SAAa1R,EAAE4R,cAAc,MAAM5R,EAAE0R,OAAO,EAAEyvB,GAAEnhC,GAAGyB,GAAE,CAAE,MAAM,OAAOitB,KAAK2S,GAAG3S,IAAIA,GAAG,MAAMjtB,GAAE,EAAG,IAAIA,EAAE,OAAe,MAARzB,EAAE0R,MAAY1R,EAAE,IAAI,CAAC,OAAG,KAAa,IAARA,EAAE0R,QAAkB1R,EAAE4wB,MAAM3wB,EAAED,KAAEuB,EAAE,OAAOA,MAAO,OAAOxB,GAAG,OAAOA,EAAE6R,gBAAgBrQ,IAAIvB,EAAEgS,MAAMN,OAAO,KAAK,KAAY,EAAP1R,EAAEqvB,QAAU,OAAOtvB,GAAG,KAAe,EAAV22B,GAAExkB,SAAW,IAAI6vB,KAAIA,GAAE,GAAG3B,OAAO,OAAOpgC,EAAEyxB,cAAczxB,EAAE0R,OAAO,GAAGyvB,GAAEnhC,GAAU,MAAK,KAAK,EAAE,OAAOu2B,KACrfiJ,GAAGz/B,EAAEC,GAAG,OAAOD,GAAG0oB,GAAGzoB,EAAE+P,UAAUmH,eAAeiqB,GAAEnhC,GAAG,KAAK,KAAK,GAAG,OAAOqwB,GAAGrwB,EAAEiC,KAAKqE,UAAU66B,GAAEnhC,GAAG,KAA+C,KAAK,GAA0B,GAAvBksB,GAAEwK,IAAwB,QAArBj1B,EAAEzB,EAAE4R,eAA0B,OAAOuvB,GAAEnhC,GAAG,KAAuC,GAAlCuB,EAAE,KAAa,IAARvB,EAAE0R,OAA4B,QAAjBhQ,EAAED,EAAEm/B,WAAsB,GAAGr/B,EAAE2/B,GAAGz/B,GAAE,OAAQ,CAAC,GAAG,IAAIsgC,IAAG,OAAOhiC,GAAG,KAAa,IAARA,EAAE2R,OAAW,IAAI3R,EAAEC,EAAEgS,MAAM,OAAOjS,GAAG,CAAS,GAAG,QAAX2B,EAAEi1B,GAAG52B,IAAe,CAAmG,IAAlGC,EAAE0R,OAAO,IAAIwvB,GAAGz/B,GAAE,GAAoB,QAAhBF,EAAEG,EAAE+vB,eAAuBzxB,EAAEyxB,YAAYlwB,EAAEvB,EAAE0R,OAAO,GAAG1R,EAAEwgC,aAAa,EAAEj/B,EAAEtB,EAAMA,EAAED,EAAEgS,MAAM,OAAO/R,GAAOF,EAAEwB,GAANE,EAAExB,GAAQyR,OAAO,SAC/d,QAAdhQ,EAAED,EAAE+P,YAAoB/P,EAAE+uB,WAAW,EAAE/uB,EAAEmvB,MAAM7wB,EAAE0B,EAAEuQ,MAAM,KAAKvQ,EAAE++B,aAAa,EAAE/+B,EAAEguB,cAAc,KAAKhuB,EAAEmQ,cAAc,KAAKnQ,EAAEgwB,YAAY,KAAKhwB,EAAEivB,aAAa,KAAKjvB,EAAEsO,UAAU,OAAOtO,EAAE+uB,WAAW9uB,EAAE8uB,WAAW/uB,EAAEmvB,MAAMlvB,EAAEkvB,MAAMnvB,EAAEuQ,MAAMtQ,EAAEsQ,MAAMvQ,EAAE++B,aAAa,EAAE/+B,EAAEqtB,UAAU,KAAKrtB,EAAEguB,cAAc/tB,EAAE+tB,cAAchuB,EAAEmQ,cAAclQ,EAAEkQ,cAAcnQ,EAAEgwB,YAAY/vB,EAAE+vB,YAAYhwB,EAAEQ,KAAKP,EAAEO,KAAKlC,EAAE2B,EAAEgvB,aAAajvB,EAAEivB,aAAa,OAAO3wB,EAAE,KAAK,CAAC6wB,MAAM7wB,EAAE6wB,MAAMD,aAAa5wB,EAAE4wB,eAAe1wB,EAAEA,EAAEgS,QAA2B,OAAnBka,GAAEuK,GAAY,EAAVA,GAAExkB,QAAU,GAAUlS,EAAEgS,KAAK,CAACjS,EAClgBA,EAAEkS,OAAO,CAAC,OAAOxQ,EAAEs/B,MAAMluB,KAAImvB,KAAKhiC,EAAE0R,OAAO,IAAInQ,GAAE,EAAG2/B,GAAGz/B,GAAE,GAAIzB,EAAE4wB,MAAM,QAAQ,KAAK,CAAC,IAAIrvB,EAAE,GAAW,QAARxB,EAAE42B,GAAGj1B,KAAa,GAAG1B,EAAE0R,OAAO,IAAInQ,GAAE,EAAmB,QAAhBtB,EAAEF,EAAE0xB,eAAuBzxB,EAAEyxB,YAAYxxB,EAAED,EAAE0R,OAAO,GAAGwvB,GAAGz/B,GAAE,GAAI,OAAOA,EAAEs/B,MAAM,WAAWt/B,EAAEu/B,WAAWt/B,EAAE8P,YAAYid,GAAE,OAAO0S,GAAEnhC,GAAG,UAAU,EAAE6S,KAAIpR,EAAEo/B,mBAAmBmB,IAAI,aAAa/hC,IAAID,EAAE0R,OAAO,IAAInQ,GAAE,EAAG2/B,GAAGz/B,GAAE,GAAIzB,EAAE4wB,MAAM,SAASnvB,EAAEk/B,aAAaj/B,EAAEuQ,QAAQjS,EAAEgS,MAAMhS,EAAEgS,MAAMtQ,IAAa,QAATzB,EAAEwB,EAAEq/B,MAAc7gC,EAAEgS,QAAQvQ,EAAE1B,EAAEgS,MAAMtQ,EAAED,EAAEq/B,KAAKp/B,EAAE,CAAC,OAAG,OAAOD,EAAEs/B,MAAY/gC,EAAEyB,EAAEs/B,KAAKt/B,EAAEm/B,UAC9e5gC,EAAEyB,EAAEs/B,KAAK/gC,EAAEiS,QAAQxQ,EAAEo/B,mBAAmBhuB,KAAI7S,EAAEiS,QAAQ,KAAKhS,EAAEy2B,GAAExkB,QAAQia,GAAEuK,GAAEn1B,EAAI,EAAFtB,EAAI,EAAI,EAAFA,GAAKD,IAAEmhC,GAAEnhC,GAAU,MAAK,KAAK,GAAG,KAAK,GAAG,OAAOiiC,KAAK1gC,EAAE,OAAOvB,EAAE4R,cAAc,OAAO7R,GAAG,OAAOA,EAAE6R,gBAAgBrQ,IAAIvB,EAAE0R,OAAO,MAAMnQ,GAAG,KAAY,EAAPvB,EAAEqvB,MAAQ,KAAQ,WAAHuP,MAAiBuC,GAAEnhC,GAAkB,EAAfA,EAAEwgC,eAAiBxgC,EAAE0R,OAAO,OAAOyvB,GAAEnhC,GAAG,KAAK,KAAK,GAAe,KAAK,GAAG,OAAO,KAAK,MAAMgF,MAAMlF,EAAE,IAAIE,EAAEkG,KAAM,CAClX,SAASg8B,GAAGniC,EAAEC,GAAS,OAANsuB,GAAGtuB,GAAUA,EAAEkG,KAAK,KAAK,EAAE,OAAO0mB,GAAG5sB,EAAEiC,OAAO6qB,KAAiB,OAAZ/sB,EAAEC,EAAE0R,QAAe1R,EAAE0R,OAAS,MAAH3R,EAAS,IAAIC,GAAG,KAAK,KAAK,EAAE,OAAOu2B,KAAKrK,GAAEI,IAAIJ,GAAEG,IAAGyK,KAAe,KAAO,OAAjB/2B,EAAEC,EAAE0R,SAAqB,KAAO,IAAF3R,IAAQC,EAAE0R,OAAS,MAAH3R,EAAS,IAAIC,GAAG,KAAK,KAAK,EAAE,OAAOy2B,GAAGz2B,GAAG,KAAK,KAAK,GAA0B,GAAvBksB,GAAEwK,IAAwB,QAArB32B,EAAEC,EAAE4R,gBAA2B,OAAO7R,EAAE8R,WAAW,CAAC,GAAG,OAAO7R,EAAEwR,UAAU,MAAMxM,MAAMlF,EAAE,MAAM6vB,IAAI,CAAW,OAAS,OAAnB5vB,EAAEC,EAAE0R,QAAsB1R,EAAE0R,OAAS,MAAH3R,EAAS,IAAIC,GAAG,KAAK,KAAK,GAAG,OAAOksB,GAAEwK,IAAG,KAAK,KAAK,EAAE,OAAOH,KAAK,KAAK,KAAK,GAAG,OAAOlG,GAAGrwB,EAAEiC,KAAKqE,UAAU,KAAK,KAAK,GAAG,KAAK,GAAG,OAAO27B,KAC1gB,KAAyB,QAAQ,OAAO,KAAK,CArB7C1C,GAAG,SAASx/B,EAAEC,GAAG,IAAI,IAAIC,EAAED,EAAEgS,MAAM,OAAO/R,GAAG,CAAC,GAAG,IAAIA,EAAEiG,KAAK,IAAIjG,EAAEiG,IAAInG,EAAEqK,YAAYnK,EAAE8P,gBAAgB,GAAG,IAAI9P,EAAEiG,KAAK,OAAOjG,EAAE+R,MAAM,CAAC/R,EAAE+R,MAAMP,OAAOxR,EAAEA,EAAEA,EAAE+R,MAAM,QAAQ,CAAC,GAAG/R,IAAID,EAAE,MAAM,KAAK,OAAOC,EAAEgS,SAAS,CAAC,GAAG,OAAOhS,EAAEwR,QAAQxR,EAAEwR,SAASzR,EAAE,OAAOC,EAAEA,EAAEwR,MAAM,CAACxR,EAAEgS,QAAQR,OAAOxR,EAAEwR,OAAOxR,EAAEA,EAAEgS,OAAO,CAAC,EAAEutB,GAAG,WAAW,EACxTC,GAAG,SAAS1/B,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAEzB,EAAE0vB,cAAc,GAAGjuB,IAAID,EAAE,CAACxB,EAAEC,EAAE+P,UAAUqmB,GAAGH,GAAG/jB,SAAS,IAA4RxQ,EAAxRD,EAAE,KAAK,OAAOxB,GAAG,IAAK,QAAQuB,EAAEsG,EAAG/H,EAAEyB,GAAGD,EAAEuG,EAAG/H,EAAEwB,GAAGE,EAAE,GAAG,MAAM,IAAK,SAASD,EAAEqD,EAAE,CAAC,EAAErD,EAAE,CAACkG,WAAM,IAASnG,EAAEsD,EAAE,CAAC,EAAEtD,EAAE,CAACmG,WAAM,IAASjG,EAAE,GAAG,MAAM,IAAK,WAAWD,EAAE2H,GAAGpJ,EAAEyB,GAAGD,EAAE4H,GAAGpJ,EAAEwB,GAAGE,EAAE,GAAG,MAAM,QAAQ,oBAAoBD,EAAEigC,SAAS,oBAAoBlgC,EAAEkgC,UAAU1hC,EAAE2hC,QAAQrX,IAAyB,IAAI1kB,KAAzBsJ,GAAGhP,EAAEsB,GAAStB,EAAE,KAAcuB,EAAE,IAAID,EAAEL,eAAeyE,IAAInE,EAAEN,eAAeyE,IAAI,MAAMnE,EAAEmE,GAAG,GAAG,UAAUA,EAAE,CAAC,IAAIC,EAAEpE,EAAEmE,GAAG,IAAIjE,KAAKkE,EAAEA,EAAE1E,eAAeQ,KACjfzB,IAAIA,EAAE,CAAC,GAAGA,EAAEyB,GAAG,GAAG,KAAK,4BAA4BiE,GAAG,aAAaA,GAAG,mCAAmCA,GAAG,6BAA6BA,GAAG,cAAcA,IAAIpF,EAAGW,eAAeyE,GAAGlE,IAAIA,EAAE,KAAKA,EAAEA,GAAG,IAAIyO,KAAKvK,EAAE,OAAO,IAAIA,KAAKpE,EAAE,CAAC,IAAIsE,EAAEtE,EAAEoE,GAAyB,GAAtBC,EAAE,MAAMpE,EAAEA,EAAEmE,QAAG,EAAUpE,EAAEL,eAAeyE,IAAIE,IAAID,IAAI,MAAMC,GAAG,MAAMD,GAAG,GAAG,UAAUD,EAAE,GAAGC,EAAE,CAAC,IAAIlE,KAAKkE,GAAGA,EAAE1E,eAAeQ,IAAImE,GAAGA,EAAE3E,eAAeQ,KAAKzB,IAAIA,EAAE,CAAC,GAAGA,EAAEyB,GAAG,IAAI,IAAIA,KAAKmE,EAAEA,EAAE3E,eAAeQ,IAAIkE,EAAElE,KAAKmE,EAAEnE,KAAKzB,IAAIA,EAAE,CAAC,GAAGA,EAAEyB,GAAGmE,EAAEnE,GAAG,MAAMzB,IAAIwB,IAAIA,EAAE,IAAIA,EAAEyO,KAAKvK,EACpf1F,IAAIA,EAAE4F,MAAM,4BAA4BF,GAAGE,EAAEA,EAAEA,EAAE4kB,YAAO,EAAO7kB,EAAEA,EAAEA,EAAE6kB,YAAO,EAAO,MAAM5kB,GAAGD,IAAIC,IAAIpE,EAAEA,GAAG,IAAIyO,KAAKvK,EAAEE,IAAI,aAAaF,EAAE,kBAAkBE,GAAG,kBAAkBA,IAAIpE,EAAEA,GAAG,IAAIyO,KAAKvK,EAAE,GAAGE,GAAG,mCAAmCF,GAAG,6BAA6BA,IAAIpF,EAAGW,eAAeyE,IAAI,MAAME,GAAG,aAAaF,GAAGuiB,GAAE,SAASnoB,GAAG0B,GAAGmE,IAAIC,IAAIpE,EAAE,MAAMA,EAAEA,GAAG,IAAIyO,KAAKvK,EAAEE,GAAG,CAAC5F,IAAIwB,EAAEA,GAAG,IAAIyO,KAAK,QAAQjQ,GAAG,IAAI0F,EAAElE,GAAKzB,EAAEyxB,YAAY9rB,KAAE3F,EAAE0R,OAAO,EAAC,CAAC,EAAEguB,GAAG,SAAS3/B,EAAEC,EAAEC,EAAEsB,GAAGtB,IAAIsB,IAAIvB,EAAE0R,OAAO,EAAE,EAkBlb,IAAIywB,IAAG,EAAGC,IAAE,EAAGC,GAAG,oBAAoBC,QAAQA,QAAQhiC,IAAIiiC,GAAE,KAAK,SAASC,GAAGziC,EAAEC,GAAG,IAAIC,EAAEF,EAAEg1B,IAAI,GAAG,OAAO90B,EAAE,GAAG,oBAAoBA,EAAE,IAAIA,EAAE,KAAK,CAAC,MAAMsB,GAAGkhC,GAAE1iC,EAAEC,EAAEuB,EAAE,MAAMtB,EAAEiS,QAAQ,IAAI,CAAC,SAASwwB,GAAG3iC,EAAEC,EAAEC,GAAG,IAAIA,GAAG,CAAC,MAAMsB,GAAGkhC,GAAE1iC,EAAEC,EAAEuB,EAAE,CAAC,CAAC,IAAIohC,IAAG,EAIxR,SAASC,GAAG7iC,EAAEC,EAAEC,GAAG,IAAIsB,EAAEvB,EAAEyxB,YAAyC,GAAG,QAAhClwB,EAAE,OAAOA,EAAEA,EAAEk4B,WAAW,MAAiB,CAAC,IAAIj4B,EAAED,EAAEA,EAAE0vB,KAAK,EAAE,CAAC,IAAIzvB,EAAE0E,IAAInG,KAAKA,EAAE,CAAC,IAAI0B,EAAED,EAAEw4B,QAAQx4B,EAAEw4B,aAAQ,OAAO,IAASv4B,GAAGihC,GAAG1iC,EAAEC,EAAEwB,EAAE,CAACD,EAAEA,EAAEyvB,IAAI,OAAOzvB,IAAID,EAAE,CAAC,CAAC,SAASshC,GAAG9iC,EAAEC,GAAgD,GAAG,QAAhCA,EAAE,QAAlBA,EAAEA,EAAEyxB,aAAuBzxB,EAAEy5B,WAAW,MAAiB,CAAC,IAAIx5B,EAAED,EAAEA,EAAEixB,KAAK,EAAE,CAAC,IAAIhxB,EAAEiG,IAAInG,KAAKA,EAAE,CAAC,IAAIwB,EAAEtB,EAAE85B,OAAO95B,EAAE+5B,QAAQz4B,GAAG,CAACtB,EAAEA,EAAEgxB,IAAI,OAAOhxB,IAAID,EAAE,CAAC,CAAC,SAAS8iC,GAAG/iC,GAAG,IAAIC,EAAED,EAAEg1B,IAAI,GAAG,OAAO/0B,EAAE,CAAC,IAAIC,EAAEF,EAAEgQ,UAAiBhQ,EAAEmG,IAA8BnG,EAAEE,EAAE,oBAAoBD,EAAEA,EAAED,GAAGC,EAAEkS,QAAQnS,CAAC,CAAC,CAClf,SAASgjC,GAAGhjC,GAAG,IAAIC,EAAED,EAAEyR,UAAU,OAAOxR,IAAID,EAAEyR,UAAU,KAAKuxB,GAAG/iC,IAAID,EAAEiS,MAAM,KAAKjS,EAAE+uB,UAAU,KAAK/uB,EAAEkS,QAAQ,KAAK,IAAIlS,EAAEmG,MAAoB,QAAdlG,EAAED,EAAEgQ,oBAA4B/P,EAAE2rB,WAAW3rB,EAAE4rB,WAAW5rB,EAAEmoB,WAAWnoB,EAAE6rB,WAAW7rB,EAAE8rB,MAAM/rB,EAAEgQ,UAAU,KAAKhQ,EAAE0R,OAAO,KAAK1R,EAAE2wB,aAAa,KAAK3wB,EAAE0vB,cAAc,KAAK1vB,EAAE6R,cAAc,KAAK7R,EAAEivB,aAAa,KAAKjvB,EAAEgQ,UAAU,KAAKhQ,EAAE0xB,YAAY,IAAI,CAAC,SAASuR,GAAGjjC,GAAG,OAAO,IAAIA,EAAEmG,KAAK,IAAInG,EAAEmG,KAAK,IAAInG,EAAEmG,GAAG,CACna,SAAS+8B,GAAGljC,GAAGA,EAAE,OAAO,CAAC,KAAK,OAAOA,EAAEkS,SAAS,CAAC,GAAG,OAAOlS,EAAE0R,QAAQuxB,GAAGjjC,EAAE0R,QAAQ,OAAO,KAAK1R,EAAEA,EAAE0R,MAAM,CAA2B,IAA1B1R,EAAEkS,QAAQR,OAAO1R,EAAE0R,OAAW1R,EAAEA,EAAEkS,QAAQ,IAAIlS,EAAEmG,KAAK,IAAInG,EAAEmG,KAAK,KAAKnG,EAAEmG,KAAK,CAAC,GAAW,EAARnG,EAAE2R,MAAQ,SAAS3R,EAAE,GAAG,OAAOA,EAAEiS,OAAO,IAAIjS,EAAEmG,IAAI,SAASnG,EAAOA,EAAEiS,MAAMP,OAAO1R,EAAEA,EAAEA,EAAEiS,KAAK,CAAC,KAAa,EAARjS,EAAE2R,OAAS,OAAO3R,EAAEgQ,SAAS,CAAC,CACzT,SAASmzB,GAAGnjC,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEmG,IAAI,GAAG,IAAI3E,GAAG,IAAIA,EAAExB,EAAEA,EAAEgQ,UAAU/P,EAAE,IAAIC,EAAEwK,SAASxK,EAAEwP,WAAW0zB,aAAapjC,EAAEC,GAAGC,EAAEkjC,aAAapjC,EAAEC,IAAI,IAAIC,EAAEwK,UAAUzK,EAAEC,EAAEwP,YAAa0zB,aAAapjC,EAAEE,IAAKD,EAAEC,GAAImK,YAAYrK,GAA4B,QAAxBE,EAAEA,EAAEmjC,2BAA8B,IAASnjC,GAAG,OAAOD,EAAE0hC,UAAU1hC,EAAE0hC,QAAQrX,UAAU,GAAG,IAAI9oB,GAAc,QAAVxB,EAAEA,EAAEiS,OAAgB,IAAIkxB,GAAGnjC,EAAEC,EAAEC,GAAGF,EAAEA,EAAEkS,QAAQ,OAAOlS,GAAGmjC,GAAGnjC,EAAEC,EAAEC,GAAGF,EAAEA,EAAEkS,OAAO,CAC1X,SAASoxB,GAAGtjC,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEmG,IAAI,GAAG,IAAI3E,GAAG,IAAIA,EAAExB,EAAEA,EAAEgQ,UAAU/P,EAAEC,EAAEkjC,aAAapjC,EAAEC,GAAGC,EAAEmK,YAAYrK,QAAQ,GAAG,IAAIwB,GAAc,QAAVxB,EAAEA,EAAEiS,OAAgB,IAAIqxB,GAAGtjC,EAAEC,EAAEC,GAAGF,EAAEA,EAAEkS,QAAQ,OAAOlS,GAAGsjC,GAAGtjC,EAAEC,EAAEC,GAAGF,EAAEA,EAAEkS,OAAO,CAAC,IAAIqxB,GAAE,KAAKC,IAAG,EAAG,SAASC,GAAGzjC,EAAEC,EAAEC,GAAG,IAAIA,EAAEA,EAAE+R,MAAM,OAAO/R,GAAGwjC,GAAG1jC,EAAEC,EAAEC,GAAGA,EAAEA,EAAEgS,OAAO,CACnR,SAASwxB,GAAG1jC,EAAEC,EAAEC,GAAG,GAAG2T,IAAI,oBAAoBA,GAAG8vB,qBAAqB,IAAI9vB,GAAG8vB,qBAAqB/vB,GAAG1T,EAAE,CAAC,MAAM2F,GAAG,CAAC,OAAO3F,EAAEiG,KAAK,KAAK,EAAEk8B,IAAGI,GAAGviC,EAAED,GAAG,KAAK,EAAE,IAAIuB,EAAE+hC,GAAE9hC,EAAE+hC,GAAGD,GAAE,KAAKE,GAAGzjC,EAAEC,EAAEC,GAAOsjC,GAAG/hC,EAAE,QAAT8hC,GAAE/hC,KAAkBgiC,IAAIxjC,EAAEujC,GAAErjC,EAAEA,EAAE8P,UAAU,IAAIhQ,EAAE0K,SAAS1K,EAAE0P,WAAWtF,YAAYlK,GAAGF,EAAEoK,YAAYlK,IAAIqjC,GAAEn5B,YAAYlK,EAAE8P,YAAY,MAAM,KAAK,GAAG,OAAOuzB,KAAIC,IAAIxjC,EAAEujC,GAAErjC,EAAEA,EAAE8P,UAAU,IAAIhQ,EAAE0K,SAAS6gB,GAAGvrB,EAAE0P,WAAWxP,GAAG,IAAIF,EAAE0K,UAAU6gB,GAAGvrB,EAAEE,GAAGyX,GAAG3X,IAAIurB,GAAGgY,GAAErjC,EAAE8P,YAAY,MAAM,KAAK,EAAExO,EAAE+hC,GAAE9hC,EAAE+hC,GAAGD,GAAErjC,EAAE8P,UAAUmH,cAAcqsB,IAAG,EAClfC,GAAGzjC,EAAEC,EAAEC,GAAGqjC,GAAE/hC,EAAEgiC,GAAG/hC,EAAE,MAAM,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI4gC,KAAoB,QAAhB7gC,EAAEtB,EAAEwxB,cAAsC,QAAflwB,EAAEA,EAAEk4B,aAAsB,CAACj4B,EAAED,EAAEA,EAAE0vB,KAAK,EAAE,CAAC,IAAIxvB,EAAED,EAAEE,EAAED,EAAEu4B,QAAQv4B,EAAEA,EAAEyE,SAAI,IAASxE,IAAI,KAAO,EAAFD,IAAe,KAAO,EAAFA,KAAfihC,GAAGziC,EAAED,EAAE0B,GAAyBF,EAAEA,EAAEyvB,IAAI,OAAOzvB,IAAID,EAAE,CAACiiC,GAAGzjC,EAAEC,EAAEC,GAAG,MAAM,KAAK,EAAE,IAAImiC,KAAII,GAAGviC,EAAED,GAAiB,oBAAduB,EAAEtB,EAAE8P,WAAgC4zB,sBAAsB,IAAIpiC,EAAEizB,MAAMv0B,EAAEwvB,cAAcluB,EAAE2yB,MAAMj0B,EAAE2R,cAAcrQ,EAAEoiC,sBAAsB,CAAC,MAAM/9B,GAAG68B,GAAExiC,EAAED,EAAE4F,EAAE,CAAC49B,GAAGzjC,EAAEC,EAAEC,GAAG,MAAM,KAAK,GAAGujC,GAAGzjC,EAAEC,EAAEC,GAAG,MAAM,KAAK,GAAU,EAAPA,EAAEovB,MAAQ+S,IAAG7gC,EAAE6gC,KAAI,OAChfniC,EAAE2R,cAAc4xB,GAAGzjC,EAAEC,EAAEC,GAAGmiC,GAAE7gC,GAAGiiC,GAAGzjC,EAAEC,EAAEC,GAAG,MAAM,QAAQujC,GAAGzjC,EAAEC,EAAEC,GAAG,CAAC,SAAS2jC,GAAG7jC,GAAG,IAAIC,EAAED,EAAE0xB,YAAY,GAAG,OAAOzxB,EAAE,CAACD,EAAE0xB,YAAY,KAAK,IAAIxxB,EAAEF,EAAEgQ,UAAU,OAAO9P,IAAIA,EAAEF,EAAEgQ,UAAU,IAAIsyB,IAAIriC,EAAEsC,SAAQ,SAAStC,GAAG,IAAIuB,EAAEsiC,GAAGnb,KAAK,KAAK3oB,EAAEC,GAAGC,EAAEmoB,IAAIpoB,KAAKC,EAAES,IAAIV,GAAGA,EAAEmrB,KAAK5pB,EAAEA,GAAG,GAAE,CAAC,CACzQ,SAASuiC,GAAG/jC,EAAEC,GAAG,IAAIC,EAAED,EAAE8uB,UAAU,GAAG,OAAO7uB,EAAE,IAAI,IAAIsB,EAAE,EAAEA,EAAEtB,EAAEE,OAAOoB,IAAI,CAAC,IAAIC,EAAEvB,EAAEsB,GAAG,IAAI,IAAIE,EAAE1B,EAAE2B,EAAE1B,EAAE4F,EAAElE,EAAE3B,EAAE,KAAK,OAAO6F,GAAG,CAAC,OAAOA,EAAEM,KAAK,KAAK,EAAEo9B,GAAE19B,EAAEmK,UAAUwzB,IAAG,EAAG,MAAMxjC,EAAE,KAAK,EAA4C,KAAK,EAAEujC,GAAE19B,EAAEmK,UAAUmH,cAAcqsB,IAAG,EAAG,MAAMxjC,EAAE6F,EAAEA,EAAE6L,MAAM,CAAC,GAAG,OAAO6xB,GAAE,MAAMt+B,MAAMlF,EAAE,MAAM2jC,GAAGhiC,EAAEC,EAAEF,GAAG8hC,GAAE,KAAKC,IAAG,EAAG,IAAI19B,EAAErE,EAAEgQ,UAAU,OAAO3L,IAAIA,EAAE4L,OAAO,MAAMjQ,EAAEiQ,OAAO,IAAI,CAAC,MAAM9L,GAAG88B,GAAEjhC,EAAExB,EAAE2F,EAAE,CAAC,CAAC,GAAkB,MAAf3F,EAAEwgC,aAAmB,IAAIxgC,EAAEA,EAAEgS,MAAM,OAAOhS,GAAG+jC,GAAG/jC,EAAED,GAAGC,EAAEA,EAAEiS,OAAO,CACje,SAAS8xB,GAAGhkC,EAAEC,GAAG,IAAIC,EAAEF,EAAEyR,UAAUjQ,EAAExB,EAAE2R,MAAM,OAAO3R,EAAEmG,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAiB,GAAd49B,GAAG9jC,EAAED,GAAGikC,GAAGjkC,GAAQ,EAAFwB,EAAI,CAAC,IAAIqhC,GAAG,EAAE7iC,EAAEA,EAAE0R,QAAQoxB,GAAG,EAAE9iC,EAAE,CAAC,MAAM+oB,GAAG2Z,GAAE1iC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,IAAI8Z,GAAG,EAAE7iC,EAAEA,EAAE0R,OAAO,CAAC,MAAMqX,GAAG2Z,GAAE1iC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,CAAC,MAAM,KAAK,EAAEgb,GAAG9jC,EAAED,GAAGikC,GAAGjkC,GAAK,IAAFwB,GAAO,OAAOtB,GAAGuiC,GAAGviC,EAAEA,EAAEwR,QAAQ,MAAM,KAAK,EAAgD,GAA9CqyB,GAAG9jC,EAAED,GAAGikC,GAAGjkC,GAAK,IAAFwB,GAAO,OAAOtB,GAAGuiC,GAAGviC,EAAEA,EAAEwR,QAAmB,GAAR1R,EAAE2R,MAAS,CAAC,IAAIlQ,EAAEzB,EAAEgQ,UAAU,IAAIxF,GAAG/I,EAAE,GAAG,CAAC,MAAMsnB,GAAG2Z,GAAE1iC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,CAAC,GAAK,EAAFvnB,GAAoB,OAAdC,EAAEzB,EAAEgQ,WAAmB,CAAC,IAAItO,EAAE1B,EAAE0vB,cAAc/tB,EAAE,OAAOzB,EAAEA,EAAEwvB,cAAchuB,EAAEmE,EAAE7F,EAAEkC,KAAK4D,EAAE9F,EAAE0xB,YACje,GAAnB1xB,EAAE0xB,YAAY,KAAQ,OAAO5rB,EAAE,IAAI,UAAUD,GAAG,UAAUnE,EAAEQ,MAAM,MAAMR,EAAEuE,MAAMsC,EAAG9G,EAAEC,GAAGyN,GAAGtJ,EAAElE,GAAG,IAAIiE,EAAEuJ,GAAGtJ,EAAEnE,GAAG,IAAIC,EAAE,EAAEA,EAAEmE,EAAE1F,OAAOuB,GAAG,EAAE,CAAC,IAAIqP,EAAElL,EAAEnE,GAAGixB,EAAE9sB,EAAEnE,EAAE,GAAG,UAAUqP,EAAEtD,GAAGjM,EAAEmxB,GAAG,4BAA4B5hB,EAAElH,GAAGrI,EAAEmxB,GAAG,aAAa5hB,EAAExG,GAAG/I,EAAEmxB,GAAGhwB,EAAGnB,EAAEuP,EAAE4hB,EAAEhtB,EAAE,CAAC,OAAOC,GAAG,IAAK,QAAQ2C,EAAG/G,EAAEC,GAAG,MAAM,IAAK,WAAW8H,GAAG/H,EAAEC,GAAG,MAAM,IAAK,SAAS,IAAImxB,EAAEpxB,EAAEyG,cAAcq5B,YAAY9/B,EAAEyG,cAAcq5B,cAAc7/B,EAAE8/B,SAAS,IAAI1O,EAAEpxB,EAAEiG,MAAM,MAAMmrB,EAAE/pB,GAAGtH,IAAIC,EAAE8/B,SAAS1O,GAAE,GAAID,MAAMnxB,EAAE8/B,WAAW,MAAM9/B,EAAEuG,aAAac,GAAGtH,IAAIC,EAAE8/B,SACnf9/B,EAAEuG,cAAa,GAAIc,GAAGtH,IAAIC,EAAE8/B,SAAS9/B,EAAE8/B,SAAS,GAAG,IAAG,IAAK//B,EAAEoqB,IAAInqB,CAAC,CAAC,MAAMqnB,GAAG2Z,GAAE1iC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,CAAC,MAAM,KAAK,EAAgB,GAAdgb,GAAG9jC,EAAED,GAAGikC,GAAGjkC,GAAQ,EAAFwB,EAAI,CAAC,GAAG,OAAOxB,EAAEgQ,UAAU,MAAM/K,MAAMlF,EAAE,MAAM0B,EAAEzB,EAAEgQ,UAAUtO,EAAE1B,EAAE0vB,cAAc,IAAIjuB,EAAEkJ,UAAUjJ,CAAC,CAAC,MAAMqnB,GAAG2Z,GAAE1iC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,CAAC,MAAM,KAAK,EAAgB,GAAdgb,GAAG9jC,EAAED,GAAGikC,GAAGjkC,GAAQ,EAAFwB,GAAK,OAAOtB,GAAGA,EAAE2R,cAAcqF,aAAa,IAAIS,GAAG1X,EAAEkX,cAAc,CAAC,MAAM4R,GAAG2Z,GAAE1iC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,MAAM,KAAK,EAG4G,QAAQgb,GAAG9jC,EACnfD,GAAGikC,GAAGjkC,SAJ4Y,KAAK,GAAG+jC,GAAG9jC,EAAED,GAAGikC,GAAGjkC,GAAqB,MAAlByB,EAAEzB,EAAEiS,OAAQN,QAAajQ,EAAE,OAAOD,EAAEoQ,cAAcpQ,EAAEuO,UAAUk0B,SAASxiC,GAAGA,GAClf,OAAOD,EAAEgQ,WAAW,OAAOhQ,EAAEgQ,UAAUI,gBAAgBsyB,GAAGrxB,OAAQ,EAAFtR,GAAKqiC,GAAG7jC,GAAG,MAAM,KAAK,GAAsF,GAAnFgR,EAAE,OAAO9Q,GAAG,OAAOA,EAAE2R,cAAqB,EAAP7R,EAAEsvB,MAAQ+S,IAAGz8B,EAAEy8B,KAAIrxB,EAAE+yB,GAAG9jC,EAAED,GAAGqiC,GAAEz8B,GAAGm+B,GAAG9jC,EAAED,GAAGikC,GAAGjkC,GAAQ,KAAFwB,EAAO,CAA0B,GAAzBoE,EAAE,OAAO5F,EAAE6R,eAAkB7R,EAAEgQ,UAAUk0B,SAASt+B,KAAKoL,GAAG,KAAY,EAAPhR,EAAEsvB,MAAQ,IAAIkT,GAAExiC,EAAEgR,EAAEhR,EAAEiS,MAAM,OAAOjB,GAAG,CAAC,IAAI4hB,EAAE4P,GAAExxB,EAAE,OAAOwxB,IAAG,CAAe,OAAV1P,GAAJD,EAAE2P,IAAMvwB,MAAa4gB,EAAE1sB,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG08B,GAAG,EAAEhQ,EAAEA,EAAEnhB,QAAQ,MAAM,KAAK,EAAE+wB,GAAG5P,EAAEA,EAAEnhB,QAAQ,IAAIoX,EAAE+J,EAAE7iB,UAAU,GAAG,oBAAoB8Y,EAAE8a,qBAAqB,CAACpiC,EAAEqxB,EAAE3yB,EAAE2yB,EAAEnhB,OAAO,IAAIzR,EAAEuB,EAAEsnB,EAAE2L,MACpfx0B,EAAEyvB,cAAc5G,EAAEqL,MAAMl0B,EAAE4R,cAAciX,EAAE8a,sBAAsB,CAAC,MAAM7a,GAAG2Z,GAAElhC,EAAEtB,EAAE6oB,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE0Z,GAAG5P,EAAEA,EAAEnhB,QAAQ,MAAM,KAAK,GAAG,GAAG,OAAOmhB,EAAEhhB,cAAc,CAACuyB,GAAGxR,GAAG,QAAQ,EAAE,OAAOE,GAAGA,EAAEphB,OAAOmhB,EAAE2P,GAAE1P,GAAGsR,GAAGxR,EAAE,CAAC5hB,EAAEA,EAAEkB,OAAO,CAAClS,EAAE,IAAIgR,EAAE,KAAK4hB,EAAE5yB,IAAI,CAAC,GAAG,IAAI4yB,EAAEzsB,KAAK,GAAG,OAAO6K,EAAE,CAACA,EAAE4hB,EAAE,IAAInxB,EAAEmxB,EAAE5iB,UAAUpK,EAAa,oBAAVlE,EAAED,EAAEkM,OAA4BE,YAAYnM,EAAEmM,YAAY,UAAU,OAAO,aAAanM,EAAE2iC,QAAQ,QAASx+B,EAAE+sB,EAAE5iB,UAAkCrO,OAAE,KAA1BmE,EAAE8sB,EAAElD,cAAc/hB,QAAoB,OAAO7H,GAAGA,EAAE3E,eAAe,WAAW2E,EAAEu+B,QAAQ,KAAKx+B,EAAE8H,MAAM02B,QACzf52B,GAAG,UAAU9L,GAAG,CAAC,MAAMonB,GAAG2Z,GAAE1iC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,OAAO,GAAG,IAAI6J,EAAEzsB,KAAK,GAAG,OAAO6K,EAAE,IAAI4hB,EAAE5iB,UAAUrF,UAAU/E,EAAE,GAAGgtB,EAAElD,aAAa,CAAC,MAAM3G,GAAG2Z,GAAE1iC,EAAEA,EAAE0R,OAAOqX,EAAE,OAAO,IAAI,KAAK6J,EAAEzsB,KAAK,KAAKysB,EAAEzsB,KAAK,OAAOysB,EAAE/gB,eAAe+gB,IAAI5yB,IAAI,OAAO4yB,EAAE3gB,MAAM,CAAC2gB,EAAE3gB,MAAMP,OAAOkhB,EAAEA,EAAEA,EAAE3gB,MAAM,QAAQ,CAAC,GAAG2gB,IAAI5yB,EAAE,MAAMA,EAAE,KAAK,OAAO4yB,EAAE1gB,SAAS,CAAC,GAAG,OAAO0gB,EAAElhB,QAAQkhB,EAAElhB,SAAS1R,EAAE,MAAMA,EAAEgR,IAAI4hB,IAAI5hB,EAAE,MAAM4hB,EAAEA,EAAElhB,MAAM,CAACV,IAAI4hB,IAAI5hB,EAAE,MAAM4hB,EAAE1gB,QAAQR,OAAOkhB,EAAElhB,OAAOkhB,EAAEA,EAAE1gB,OAAO,CAAC,CAAC,MAAM,KAAK,GAAG6xB,GAAG9jC,EAAED,GAAGikC,GAAGjkC,GAAK,EAAFwB,GAAKqiC,GAAG7jC,GAAS,KAAK,IACtd,CAAC,SAASikC,GAAGjkC,GAAG,IAAIC,EAAED,EAAE2R,MAAM,GAAK,EAAF1R,EAAI,CAAC,IAAID,EAAE,CAAC,IAAI,IAAIE,EAAEF,EAAE0R,OAAO,OAAOxR,GAAG,CAAC,GAAG+iC,GAAG/iC,GAAG,CAAC,IAAIsB,EAAEtB,EAAE,MAAMF,CAAC,CAACE,EAAEA,EAAEwR,MAAM,CAAC,MAAMzM,MAAMlF,EAAE,KAAM,CAAC,OAAOyB,EAAE2E,KAAK,KAAK,EAAE,IAAI1E,EAAED,EAAEwO,UAAkB,GAARxO,EAAEmQ,QAAWnH,GAAG/I,EAAE,IAAID,EAAEmQ,QAAQ,IAAgB2xB,GAAGtjC,EAATkjC,GAAGljC,GAAUyB,GAAG,MAAM,KAAK,EAAE,KAAK,EAAE,IAAIE,EAAEH,EAAEwO,UAAUmH,cAAsBgsB,GAAGnjC,EAATkjC,GAAGljC,GAAU2B,GAAG,MAAM,QAAQ,MAAMsD,MAAMlF,EAAE,MAAO,CAAC,MAAM+F,GAAG48B,GAAE1iC,EAAEA,EAAE0R,OAAO5L,EAAE,CAAC9F,EAAE2R,QAAQ,CAAC,CAAG,KAAF1R,IAASD,EAAE2R,QAAQ,KAAK,CAAC,SAAS2yB,GAAGtkC,EAAEC,EAAEC,GAAGsiC,GAAExiC,EAAEukC,GAAGvkC,EAAEC,EAAEC,EAAE,CACvb,SAASqkC,GAAGvkC,EAAEC,EAAEC,GAAG,IAAI,IAAIsB,EAAE,KAAY,EAAPxB,EAAEsvB,MAAQ,OAAOkT,IAAG,CAAC,IAAI/gC,EAAE+gC,GAAE9gC,EAAED,EAAEwQ,MAAM,GAAG,KAAKxQ,EAAE0E,KAAK3E,EAAE,CAAC,IAAIG,EAAE,OAAOF,EAAEoQ,eAAeuwB,GAAG,IAAIzgC,EAAE,CAAC,IAAIkE,EAAEpE,EAAEgQ,UAAU3L,EAAE,OAAOD,GAAG,OAAOA,EAAEgM,eAAewwB,GAAEx8B,EAAEu8B,GAAG,IAAIx8B,EAAEy8B,GAAO,GAALD,GAAGzgC,GAAM0gC,GAAEv8B,KAAKF,EAAE,IAAI48B,GAAE/gC,EAAE,OAAO+gC,IAAO18B,GAAJnE,EAAE6gC,IAAMvwB,MAAM,KAAKtQ,EAAEwE,KAAK,OAAOxE,EAAEkQ,cAAc2yB,GAAG/iC,GAAG,OAAOqE,GAAGA,EAAE4L,OAAO/P,EAAE6gC,GAAE18B,GAAG0+B,GAAG/iC,GAAG,KAAK,OAAOC,GAAG8gC,GAAE9gC,EAAE6iC,GAAG7iC,EAAEzB,EAAEC,GAAGwB,EAAEA,EAAEwQ,QAAQswB,GAAE/gC,EAAE2gC,GAAGv8B,EAAEw8B,GAAEz8B,CAAC,CAAC6+B,GAAGzkC,EAAM,MAAM,KAAoB,KAAfyB,EAAEg/B,eAAoB,OAAO/+B,GAAGA,EAAEgQ,OAAOjQ,EAAE+gC,GAAE9gC,GAAG+iC,GAAGzkC,EAAM,CAAC,CACvc,SAASykC,GAAGzkC,GAAG,KAAK,OAAOwiC,IAAG,CAAC,IAAIviC,EAAEuiC,GAAE,GAAG,KAAa,KAARviC,EAAE0R,OAAY,CAAC,IAAIzR,EAAED,EAAEwR,UAAU,IAAI,GAAG,KAAa,KAARxR,EAAE0R,OAAY,OAAO1R,EAAEkG,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGk8B,IAAGS,GAAG,EAAE7iC,GAAG,MAAM,KAAK,EAAE,IAAIuB,EAAEvB,EAAE+P,UAAU,GAAW,EAAR/P,EAAE0R,QAAU0wB,GAAE,GAAG,OAAOniC,EAAEsB,EAAEszB,wBAAwB,CAAC,IAAIrzB,EAAExB,EAAE6uB,cAAc7uB,EAAEiC,KAAKhC,EAAEwvB,cAAcK,GAAG9vB,EAAEiC,KAAKhC,EAAEwvB,eAAeluB,EAAE29B,mBAAmB19B,EAAEvB,EAAE2R,cAAcrQ,EAAEkjC,oCAAoC,CAAC,IAAIhjC,EAAEzB,EAAEyxB,YAAY,OAAOhwB,GAAGsxB,GAAG/yB,EAAEyB,EAAEF,GAAG,MAAM,KAAK,EAAE,IAAIG,EAAE1B,EAAEyxB,YAAY,GAAG,OAAO/vB,EAAE,CAAQ,GAAPzB,EAAE,KAAQ,OAAOD,EAAEgS,MAAM,OAAOhS,EAAEgS,MAAM9L,KAAK,KAAK,EACvf,KAAK,EAAEjG,EAAED,EAAEgS,MAAMjC,UAAUgjB,GAAG/yB,EAAE0B,EAAEzB,EAAE,CAAC,MAAM,KAAK,EAAE,IAAI2F,EAAE5F,EAAE+P,UAAU,GAAG,OAAO9P,GAAW,EAARD,EAAE0R,MAAQ,CAACzR,EAAE2F,EAAE,IAAIC,EAAE7F,EAAEyvB,cAAc,OAAOzvB,EAAEiC,MAAM,IAAK,SAAS,IAAK,QAAQ,IAAK,SAAS,IAAK,WAAW4D,EAAEg8B,WAAW5hC,EAAEgmB,QAAQ,MAAM,IAAK,MAAMpgB,EAAE6+B,MAAMzkC,EAAEykC,IAAI7+B,EAAE6+B,KAAK,CAAC,MAAM,KAAK,EAAQ,KAAK,EAAQ,KAAK,GAAyJ,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAhM,KAAK,GAAG,GAAG,OAAO1kC,EAAE4R,cAAc,CAAC,IAAIjM,EAAE3F,EAAEwR,UAAU,GAAG,OAAO7L,EAAE,CAAC,IAAIoL,EAAEpL,EAAEiM,cAAc,GAAG,OAAOb,EAAE,CAAC,IAAI4hB,EAAE5hB,EAAEc,WAAW,OAAO8gB,GAAGjb,GAAGib,EAAE,CAAC,CAAC,CAAC,MAC5c,QAAQ,MAAM3tB,MAAMlF,EAAE,MAAOsiC,IAAW,IAARpiC,EAAE0R,OAAWoxB,GAAG9iC,EAAE,CAAC,MAAM4yB,GAAG6P,GAAEziC,EAAEA,EAAEyR,OAAOmhB,EAAE,CAAC,CAAC,GAAG5yB,IAAID,EAAE,CAACwiC,GAAE,KAAK,KAAK,CAAa,GAAG,QAAftiC,EAAED,EAAEiS,SAAoB,CAAChS,EAAEwR,OAAOzR,EAAEyR,OAAO8wB,GAAEtiC,EAAE,KAAK,CAACsiC,GAAEviC,EAAEyR,MAAM,CAAC,CAAC,SAAS0yB,GAAGpkC,GAAG,KAAK,OAAOwiC,IAAG,CAAC,IAAIviC,EAAEuiC,GAAE,GAAGviC,IAAID,EAAE,CAACwiC,GAAE,KAAK,KAAK,CAAC,IAAItiC,EAAED,EAAEiS,QAAQ,GAAG,OAAOhS,EAAE,CAACA,EAAEwR,OAAOzR,EAAEyR,OAAO8wB,GAAEtiC,EAAE,KAAK,CAACsiC,GAAEviC,EAAEyR,MAAM,CAAC,CACvS,SAAS8yB,GAAGxkC,GAAG,KAAK,OAAOwiC,IAAG,CAAC,IAAIviC,EAAEuiC,GAAE,IAAI,OAAOviC,EAAEkG,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,IAAIjG,EAAED,EAAEyR,OAAO,IAAIoxB,GAAG,EAAE7iC,EAAE,CAAC,MAAM6F,GAAG48B,GAAEziC,EAAEC,EAAE4F,EAAE,CAAC,MAAM,KAAK,EAAE,IAAItE,EAAEvB,EAAE+P,UAAU,GAAG,oBAAoBxO,EAAEszB,kBAAkB,CAAC,IAAIrzB,EAAExB,EAAEyR,OAAO,IAAIlQ,EAAEszB,mBAAmB,CAAC,MAAMhvB,GAAG48B,GAAEziC,EAAEwB,EAAEqE,EAAE,CAAC,CAAC,IAAIpE,EAAEzB,EAAEyR,OAAO,IAAIqxB,GAAG9iC,EAAE,CAAC,MAAM6F,GAAG48B,GAAEziC,EAAEyB,EAAEoE,EAAE,CAAC,MAAM,KAAK,EAAE,IAAInE,EAAE1B,EAAEyR,OAAO,IAAIqxB,GAAG9iC,EAAE,CAAC,MAAM6F,GAAG48B,GAAEziC,EAAE0B,EAAEmE,EAAE,EAAE,CAAC,MAAMA,GAAG48B,GAAEziC,EAAEA,EAAEyR,OAAO5L,EAAE,CAAC,GAAG7F,IAAID,EAAE,CAACwiC,GAAE,KAAK,KAAK,CAAC,IAAI38B,EAAE5F,EAAEiS,QAAQ,GAAG,OAAOrM,EAAE,CAACA,EAAE6L,OAAOzR,EAAEyR,OAAO8wB,GAAE38B,EAAE,KAAK,CAAC28B,GAAEviC,EAAEyR,MAAM,CAAC,CAC7d,IAwBkNkzB,GAxB9MC,GAAG9wB,KAAK+wB,KAAKC,GAAGthC,EAAGyzB,uBAAuB8N,GAAGvhC,EAAGs6B,kBAAkBkH,GAAGxhC,EAAGoU,wBAAwB2a,GAAE,EAAEgH,GAAE,KAAK0L,GAAE,KAAKC,GAAE,EAAEtG,GAAG,EAAED,GAAG1S,GAAG,GAAG8V,GAAE,EAAEoD,GAAG,KAAKrS,GAAG,EAAEsS,GAAG,EAAEC,GAAG,EAAEC,GAAG,KAAKC,GAAG,KAAKrB,GAAG,EAAElC,GAAGwD,IAASC,GAAG,KAAKxI,IAAG,EAAGC,GAAG,KAAKI,GAAG,KAAKoI,IAAG,EAAGC,GAAG,KAAKC,GAAG,EAAEC,GAAG,EAAEC,GAAG,KAAKC,IAAI,EAAEC,GAAG,EAAE,SAASxS,KAAI,OAAO,KAAO,EAAFjB,IAAK1f,MAAK,IAAIkzB,GAAGA,GAAGA,GAAGlzB,IAAG,CAChU,SAAS4gB,GAAG1zB,GAAG,OAAG,KAAY,EAAPA,EAAEsvB,MAAe,EAAK,KAAO,EAAFkD,KAAM,IAAI2S,GAASA,IAAGA,GAAK,OAAOrV,GAAG9X,YAAkB,IAAIiuB,KAAKA,GAAGjxB,MAAMixB,IAAU,KAAPjmC,EAAEqV,IAAkBrV,EAAiBA,OAAE,KAAjBA,EAAEa,OAAOohB,OAAmB,GAAG1J,GAAGvY,EAAEkC,KAAc,CAAC,SAASyxB,GAAG3zB,EAAEC,EAAEC,EAAEsB,GAAG,GAAG,GAAGskC,GAAG,MAAMA,GAAG,EAAEC,GAAG,KAAK9gC,MAAMlF,EAAE,MAAMmV,GAAGlV,EAAEE,EAAEsB,GAAM,KAAO,EAAFgxB,KAAMxyB,IAAIw5B,KAAEx5B,IAAIw5B,KAAI,KAAO,EAAFhH,MAAO6S,IAAInlC,GAAG,IAAI8hC,IAAGkE,GAAGlmC,EAAEmlC,KAAIgB,GAAGnmC,EAAEwB,GAAG,IAAItB,GAAG,IAAIsyB,IAAG,KAAY,EAAPvyB,EAAEqvB,QAAU2S,GAAGnvB,KAAI,IAAIya,IAAIG,MAAK,CAC1Y,SAASyY,GAAGnmC,EAAEC,GAAG,IAAIC,EAAEF,EAAEomC,cA5MzB,SAAYpmC,EAAEC,GAAG,IAAI,IAAIC,EAAEF,EAAE0U,eAAelT,EAAExB,EAAE2U,YAAYlT,EAAEzB,EAAEqmC,gBAAgB3kC,EAAE1B,EAAEyU,aAAa,EAAE/S,GAAG,CAAC,IAAIC,EAAE,GAAGmS,GAAGpS,GAAGmE,EAAE,GAAGlE,EAAEmE,EAAErE,EAAEE,IAAO,IAAImE,EAAM,KAAKD,EAAE3F,IAAI,KAAK2F,EAAErE,KAAGC,EAAEE,GAAGmT,GAAGjP,EAAE5F,IAAQ6F,GAAG7F,IAAID,EAAEsmC,cAAczgC,GAAGnE,IAAImE,CAAC,CAAC,CA4MnL0gC,CAAGvmC,EAAEC,GAAG,IAAIuB,EAAEgT,GAAGxU,EAAEA,IAAIw5B,GAAE2L,GAAE,GAAG,GAAG,IAAI3jC,EAAE,OAAOtB,GAAGsS,GAAGtS,GAAGF,EAAEomC,aAAa,KAAKpmC,EAAEwmC,iBAAiB,OAAO,GAAGvmC,EAAEuB,GAAGA,EAAExB,EAAEwmC,mBAAmBvmC,EAAE,CAAgB,GAAf,MAAMC,GAAGsS,GAAGtS,GAAM,IAAID,EAAE,IAAID,EAAEmG,IA7IsJ,SAAYnG,GAAGutB,IAAG,EAAGE,GAAGztB,EAAE,CA6I5KymC,CAAGC,GAAG/d,KAAK,KAAK3oB,IAAIytB,GAAGiZ,GAAG/d,KAAK,KAAK3oB,IAAIirB,IAAG,WAAW,KAAO,EAAFuH,KAAM9E,IAAI,IAAGxtB,EAAE,SAAS,CAAC,OAAOoV,GAAG9T,IAAI,KAAK,EAAEtB,EAAEgT,GAAG,MAAM,KAAK,EAAEhT,EAAEkT,GAAG,MAAM,KAAK,GAAwC,QAAQlT,EAAEoT,SAApC,KAAK,UAAUpT,EAAEwT,GAAsBxT,EAAEymC,GAAGzmC,EAAE0mC,GAAGje,KAAK,KAAK3oB,GAAG,CAACA,EAAEwmC,iBAAiBvmC,EAAED,EAAEomC,aAAalmC,CAAC,CAAC,CAC7c,SAAS0mC,GAAG5mC,EAAEC,GAAc,GAAX+lC,IAAI,EAAEC,GAAG,EAAK,KAAO,EAAFzT,IAAK,MAAMvtB,MAAMlF,EAAE,MAAM,IAAIG,EAAEF,EAAEomC,aAAa,GAAGS,MAAM7mC,EAAEomC,eAAelmC,EAAE,OAAO,KAAK,IAAIsB,EAAEgT,GAAGxU,EAAEA,IAAIw5B,GAAE2L,GAAE,GAAG,GAAG,IAAI3jC,EAAE,OAAO,KAAK,GAAG,KAAO,GAAFA,IAAO,KAAKA,EAAExB,EAAEsmC,eAAermC,EAAEA,EAAE6mC,GAAG9mC,EAAEwB,OAAO,CAACvB,EAAEuB,EAAE,IAAIC,EAAE+wB,GAAEA,IAAG,EAAE,IAAI9wB,EAAEqlC,KAAgD,IAAxCvN,KAAIx5B,GAAGmlC,KAAIllC,IAAEylC,GAAG,KAAKzD,GAAGnvB,KAAI,IAAIk0B,GAAGhnC,EAAEC,UAAUgnC,KAAK,KAAK,CAAC,MAAMphC,GAAGqhC,GAAGlnC,EAAE6F,EAAE,CAAUwqB,KAAK0U,GAAG5yB,QAAQzQ,EAAE8wB,GAAE/wB,EAAE,OAAOyjC,GAAEjlC,EAAE,GAAGu5B,GAAE,KAAK2L,GAAE,EAAEllC,EAAE+hC,GAAE,CAAC,GAAG,IAAI/hC,EAAE,CAAyC,GAAxC,IAAIA,IAAY,KAARwB,EAAEsT,GAAG/U,MAAWwB,EAAEC,EAAExB,EAAEknC,GAAGnnC,EAAEyB,KAAQ,IAAIxB,EAAE,MAAMC,EAAEklC,GAAG4B,GAAGhnC,EAAE,GAAGkmC,GAAGlmC,EAAEwB,GAAG2kC,GAAGnmC,EAAE8S,MAAK5S,EAAE,GAAG,IAAID,EAAEimC,GAAGlmC,EAAEwB,OAChf,CAAuB,GAAtBC,EAAEzB,EAAEmS,QAAQV,UAAa,KAAO,GAAFjQ,KAGnC,SAAYxB,GAAG,IAAI,IAAIC,EAAED,IAAI,CAAC,GAAW,MAARC,EAAE0R,MAAY,CAAC,IAAIzR,EAAED,EAAEyxB,YAAY,GAAG,OAAOxxB,GAAe,QAAXA,EAAEA,EAAEy5B,QAAiB,IAAI,IAAIn4B,EAAE,EAAEA,EAAEtB,EAAEE,OAAOoB,IAAI,CAAC,IAAIC,EAAEvB,EAAEsB,GAAGE,EAAED,EAAE43B,YAAY53B,EAAEA,EAAEkG,MAAM,IAAI,IAAI4b,GAAG7hB,IAAID,GAAG,OAAM,CAAE,CAAC,MAAME,GAAG,OAAM,CAAE,CAAC,CAAC,CAAW,GAAVzB,EAAED,EAAEgS,MAAwB,MAAfhS,EAAEwgC,cAAoB,OAAOvgC,EAAEA,EAAEwR,OAAOzR,EAAEA,EAAEC,MAAM,CAAC,GAAGD,IAAID,EAAE,MAAM,KAAK,OAAOC,EAAEiS,SAAS,CAAC,GAAG,OAAOjS,EAAEyR,QAAQzR,EAAEyR,SAAS1R,EAAE,OAAM,EAAGC,EAAEA,EAAEyR,MAAM,CAACzR,EAAEiS,QAAQR,OAAOzR,EAAEyR,OAAOzR,EAAEA,EAAEiS,OAAO,CAAC,CAAC,OAAM,CAAE,CAHvXk1B,CAAG3lC,KAAe,KAAVxB,EAAE6mC,GAAG9mC,EAAEwB,MAAmB,KAARE,EAAEqT,GAAG/U,MAAWwB,EAAEE,EAAEzB,EAAEknC,GAAGnnC,EAAE0B,KAAK,IAAIzB,GAAG,MAAMC,EAAEklC,GAAG4B,GAAGhnC,EAAE,GAAGkmC,GAAGlmC,EAAEwB,GAAG2kC,GAAGnmC,EAAE8S,MAAK5S,EAAqC,OAAnCF,EAAEqnC,aAAa5lC,EAAEzB,EAAEsnC,cAAc9lC,EAASvB,GAAG,KAAK,EAAE,KAAK,EAAE,MAAMgF,MAAMlF,EAAE,MAAM,KAAK,EAC8B,KAAK,EAAEwnC,GAAGvnC,EAAEwlC,GAAGE,IAAI,MAD7B,KAAK,EAAU,GAARQ,GAAGlmC,EAAEwB,IAAS,UAAFA,KAAeA,GAAiB,IAAbvB,EAAEkkC,GAAG,IAAIrxB,MAAU,CAAC,GAAG,IAAI0B,GAAGxU,EAAE,GAAG,MAAyB,KAAnByB,EAAEzB,EAAE0U,gBAAqBlT,KAAKA,EAAE,CAACiyB,KAAIzzB,EAAE2U,aAAa3U,EAAE0U,eAAejT,EAAE,KAAK,CAACzB,EAAEwnC,cAAc7c,GAAG4c,GAAG5e,KAAK,KAAK3oB,EAAEwlC,GAAGE,IAAIzlC,GAAG,KAAK,CAACsnC,GAAGvnC,EAAEwlC,GAAGE,IAAI,MAAM,KAAK,EAAU,GAARQ,GAAGlmC,EAAEwB,IAAS,QAAFA,KAC9eA,EAAE,MAAqB,IAAfvB,EAAED,EAAEmV,WAAe1T,GAAG,EAAE,EAAED,GAAG,CAAC,IAAIG,EAAE,GAAGmS,GAAGtS,GAAGE,EAAE,GAAGC,GAAEA,EAAE1B,EAAE0B,IAAKF,IAAIA,EAAEE,GAAGH,IAAIE,CAAC,CAAqG,GAApGF,EAAEC,EAAqG,IAA3FD,GAAG,KAAXA,EAAEsR,KAAItR,GAAW,IAAI,IAAIA,EAAE,IAAI,KAAKA,EAAE,KAAK,KAAKA,EAAE,KAAK,IAAIA,EAAE,IAAI,KAAKA,EAAE,KAAK,KAAKqjC,GAAGrjC,EAAE,OAAOA,GAAU,CAACxB,EAAEwnC,cAAc7c,GAAG4c,GAAG5e,KAAK,KAAK3oB,EAAEwlC,GAAGE,IAAIlkC,GAAG,KAAK,CAAC+lC,GAAGvnC,EAAEwlC,GAAGE,IAAI,MAA+B,QAAQ,MAAMzgC,MAAMlF,EAAE,MAAO,CAAC,CAAW,OAAVomC,GAAGnmC,EAAE8S,MAAY9S,EAAEomC,eAAelmC,EAAE0mC,GAAGje,KAAK,KAAK3oB,GAAG,IAAI,CACrX,SAASmnC,GAAGnnC,EAAEC,GAAG,IAAIC,EAAEqlC,GAA2G,OAAxGvlC,EAAEmS,QAAQN,cAAcqF,eAAe8vB,GAAGhnC,EAAEC,GAAG0R,OAAO,KAAe,KAAV3R,EAAE8mC,GAAG9mC,EAAEC,MAAWA,EAAEulC,GAAGA,GAAGtlC,EAAE,OAAOD,GAAGqhC,GAAGrhC,IAAWD,CAAC,CAAC,SAASshC,GAAGthC,GAAG,OAAOwlC,GAAGA,GAAGxlC,EAAEwlC,GAAGr1B,KAAKY,MAAMy0B,GAAGxlC,EAAE,CAE5L,SAASkmC,GAAGlmC,EAAEC,GAAuD,IAApDA,IAAIqlC,GAAGrlC,IAAIolC,GAAGrlC,EAAE0U,gBAAgBzU,EAAED,EAAE2U,cAAc1U,EAAMD,EAAEA,EAAEqmC,gBAAgB,EAAEpmC,GAAG,CAAC,IAAIC,EAAE,GAAG4T,GAAG7T,GAAGuB,EAAE,GAAGtB,EAAEF,EAAEE,IAAI,EAAED,IAAIuB,CAAC,CAAC,CAAC,SAASklC,GAAG1mC,GAAG,GAAG,KAAO,EAAFwyB,IAAK,MAAMvtB,MAAMlF,EAAE,MAAM8mC,KAAK,IAAI5mC,EAAEuU,GAAGxU,EAAE,GAAG,GAAG,KAAO,EAAFC,GAAK,OAAOkmC,GAAGnmC,EAAE8S,MAAK,KAAK,IAAI5S,EAAE4mC,GAAG9mC,EAAEC,GAAG,GAAG,IAAID,EAAEmG,KAAK,IAAIjG,EAAE,CAAC,IAAIsB,EAAEuT,GAAG/U,GAAG,IAAIwB,IAAIvB,EAAEuB,EAAEtB,EAAEinC,GAAGnnC,EAAEwB,GAAG,CAAC,GAAG,IAAItB,EAAE,MAAMA,EAAEklC,GAAG4B,GAAGhnC,EAAE,GAAGkmC,GAAGlmC,EAAEC,GAAGkmC,GAAGnmC,EAAE8S,MAAK5S,EAAE,GAAG,IAAIA,EAAE,MAAM+E,MAAMlF,EAAE,MAAiF,OAA3EC,EAAEqnC,aAAarnC,EAAEmS,QAAQV,UAAUzR,EAAEsnC,cAAcrnC,EAAEsnC,GAAGvnC,EAAEwlC,GAAGE,IAAIS,GAAGnmC,EAAE8S,MAAY,IAAI,CACvd,SAAS20B,GAAGznC,EAAEC,GAAG,IAAIC,EAAEsyB,GAAEA,IAAG,EAAE,IAAI,OAAOxyB,EAAEC,EAAE,CAAC,QAAY,KAAJuyB,GAAEtyB,KAAU+hC,GAAGnvB,KAAI,IAAIya,IAAIG,KAAK,CAAC,CAAC,SAASga,GAAG1nC,GAAG,OAAO4lC,IAAI,IAAIA,GAAGz/B,KAAK,KAAO,EAAFqsB,KAAMqU,KAAK,IAAI5mC,EAAEuyB,GAAEA,IAAG,EAAE,IAAItyB,EAAE+kC,GAAGjtB,WAAWxW,EAAE6T,GAAE,IAAI,GAAG4vB,GAAGjtB,WAAW,KAAK3C,GAAE,EAAErV,EAAE,OAAOA,GAAG,CAAC,QAAQqV,GAAE7T,EAAEyjC,GAAGjtB,WAAW9X,EAAM,KAAO,GAAXsyB,GAAEvyB,KAAaytB,IAAI,CAAC,CAAC,SAASwU,KAAKrD,GAAGD,GAAGzsB,QAAQga,GAAEyS,GAAG,CAChT,SAASoI,GAAGhnC,EAAEC,GAAGD,EAAEqnC,aAAa,KAAKrnC,EAAEsnC,cAAc,EAAE,IAAIpnC,EAAEF,EAAEwnC,cAAiD,IAAlC,IAAItnC,IAAIF,EAAEwnC,eAAe,EAAE3c,GAAG3qB,IAAO,OAAOglC,GAAE,IAAIhlC,EAAEglC,GAAExzB,OAAO,OAAOxR,GAAG,CAAC,IAAIsB,EAAEtB,EAAQ,OAANquB,GAAG/sB,GAAUA,EAAE2E,KAAK,KAAK,EAA6B,QAA3B3E,EAAEA,EAAEU,KAAK4qB,yBAA4B,IAAStrB,GAAGurB,KAAK,MAAM,KAAK,EAAEyJ,KAAKrK,GAAEI,IAAIJ,GAAEG,IAAGyK,KAAK,MAAM,KAAK,EAAEL,GAAGl1B,GAAG,MAAM,KAAK,EAAEg1B,KAAK,MAAM,KAAK,GAAc,KAAK,GAAGrK,GAAEwK,IAAG,MAAM,KAAK,GAAGrG,GAAG9uB,EAAEU,KAAKqE,UAAU,MAAM,KAAK,GAAG,KAAK,GAAG27B,KAAKhiC,EAAEA,EAAEwR,MAAM,CAAqE,GAApE8nB,GAAEx5B,EAAEklC,GAAEllC,EAAEw1B,GAAGx1B,EAAEmS,QAAQ,MAAMgzB,GAAEtG,GAAG5+B,EAAE+hC,GAAE,EAAEoD,GAAG,KAAKE,GAAGD,GAAGtS,GAAG,EAAEyS,GAAGD,GAAG,KAAQ,OAAOpU,GAAG,CAAC,IAAIlxB,EAC1f,EAAEA,EAAEkxB,GAAG/wB,OAAOH,IAAI,GAA2B,QAAhBuB,GAARtB,EAAEixB,GAAGlxB,IAAOqxB,aAAqB,CAACpxB,EAAEoxB,YAAY,KAAK,IAAI7vB,EAAED,EAAE0vB,KAAKxvB,EAAExB,EAAE6xB,QAAQ,GAAG,OAAOrwB,EAAE,CAAC,IAAIC,EAAED,EAAEwvB,KAAKxvB,EAAEwvB,KAAKzvB,EAAED,EAAE0vB,KAAKvvB,CAAC,CAACzB,EAAE6xB,QAAQvwB,CAAC,CAAC2vB,GAAG,IAAI,CAAC,OAAOnxB,CAAC,CAC3K,SAASknC,GAAGlnC,EAAEC,GAAG,OAAE,CAAC,IAAIC,EAAEglC,GAAE,IAAuB,GAAnB7U,KAAK4G,GAAG9kB,QAAQ+lB,GAAMV,GAAG,CAAC,IAAI,IAAIh2B,EAAE61B,GAAExlB,cAAc,OAAOrQ,GAAG,CAAC,IAAIC,EAAED,EAAE82B,MAAM,OAAO72B,IAAIA,EAAEswB,QAAQ,MAAMvwB,EAAEA,EAAE0vB,IAAI,CAACsG,IAAG,CAAE,CAA4C,GAA3CJ,GAAG,EAAEG,GAAED,GAAED,GAAE,KAAKI,IAAG,EAAGC,GAAG,EAAEsN,GAAG7yB,QAAQ,KAAQ,OAAOjS,GAAG,OAAOA,EAAEwR,OAAO,CAACswB,GAAE,EAAEoD,GAAGnlC,EAAEilC,GAAE,KAAK,KAAK,CAACllC,EAAE,CAAC,IAAI0B,EAAE1B,EAAE2B,EAAEzB,EAAEwR,OAAO7L,EAAE3F,EAAE4F,EAAE7F,EAAqB,GAAnBA,EAAEklC,GAAEt/B,EAAE8L,OAAO,MAAS,OAAO7L,GAAG,kBAAkBA,GAAG,oBAAoBA,EAAEslB,KAAK,CAAC,IAAIxlB,EAAEE,EAAEkL,EAAEnL,EAAE+sB,EAAE5hB,EAAE7K,IAAI,GAAG,KAAY,EAAP6K,EAAEse,QAAU,IAAIsD,GAAG,KAAKA,GAAG,KAAKA,GAAG,CAAC,IAAIC,EAAE7hB,EAAES,UAAUohB,GAAG7hB,EAAE0gB,YAAYmB,EAAEnB,YAAY1gB,EAAEa,cAAcghB,EAAEhhB,cACxeb,EAAE6f,MAAMgC,EAAEhC,QAAQ7f,EAAE0gB,YAAY,KAAK1gB,EAAEa,cAAc,KAAK,CAAC,IAAIihB,EAAE8K,GAAGj8B,GAAG,GAAG,OAAOmxB,EAAE,CAACA,EAAEnhB,QAAQ,IAAIksB,GAAG/K,EAAEnxB,EAAEkE,EAAEnE,EAAEzB,GAAU,EAAP6yB,EAAExD,MAAQmO,GAAG/7B,EAAEkE,EAAE3F,GAAO6F,EAAEF,EAAE,IAAIkjB,GAAZ7oB,EAAE6yB,GAAcpB,YAAY,GAAG,OAAO5I,EAAE,CAAC,IAAIC,EAAE,IAAIxoB,IAAIwoB,EAAEpoB,IAAImF,GAAG7F,EAAEyxB,YAAY3I,CAAC,MAAMD,EAAEnoB,IAAImF,GAAG,MAAM9F,CAAC,CAAM,GAAG,KAAO,EAAFC,GAAK,CAACw9B,GAAG/7B,EAAEkE,EAAE3F,GAAGogC,KAAK,MAAMrgC,CAAC,CAAC8F,EAAEb,MAAMlF,EAAE,KAAM,MAAM,GAAG2uB,IAAU,EAAP7oB,EAAEypB,KAAO,CAAC,IAAItG,EAAE4U,GAAGj8B,GAAG,GAAG,OAAOqnB,EAAE,CAAC,KAAa,MAARA,EAAErX,SAAeqX,EAAErX,OAAO,KAAKksB,GAAG7U,EAAErnB,EAAEkE,EAAEnE,EAAEzB,GAAG4vB,GAAG2M,GAAG12B,EAAED,IAAI,MAAM7F,CAAC,CAAC,CAAC0B,EAAEoE,EAAE02B,GAAG12B,EAAED,GAAG,IAAIm8B,KAAIA,GAAE,GAAG,OAAOuD,GAAGA,GAAG,CAAC7jC,GAAG6jC,GAAGp1B,KAAKzO,GAAGA,EAAEC,EAAE,EAAE,CAAC,OAAOD,EAAEyE,KAAK,KAAK,EAAEzE,EAAEiQ,OAAO,MACpf1R,IAAIA,EAAEyB,EAAEmvB,OAAO5wB,EAAkByyB,GAAGhxB,EAAbu7B,GAAGv7B,EAAEoE,EAAE7F,IAAW,MAAMD,EAAE,KAAK,EAAE6F,EAAEC,EAAE,IAAIqjB,EAAEznB,EAAEQ,KAAKgnB,EAAExnB,EAAEsO,UAAU,GAAG,KAAa,IAARtO,EAAEiQ,SAAa,oBAAoBwX,EAAEkU,0BAA0B,OAAOnU,GAAG,oBAAoBA,EAAEoU,oBAAoB,OAAOC,KAAKA,GAAGlV,IAAIa,KAAK,CAACxnB,EAAEiQ,OAAO,MAAM1R,IAAIA,EAAEyB,EAAEmvB,OAAO5wB,EAAkByyB,GAAGhxB,EAAb07B,GAAG17B,EAAEmE,EAAE5F,IAAW,MAAMD,CAAC,EAAE0B,EAAEA,EAAEgQ,MAAM,OAAO,OAAOhQ,EAAE,CAACimC,GAAGznC,EAAE,CAAC,MAAMwpB,GAAIzpB,EAAEypB,EAAGwb,KAAIhlC,GAAG,OAAOA,IAAIglC,GAAEhlC,EAAEA,EAAEwR,QAAQ,QAAQ,CAAC,KAAK,CAAS,CAAC,SAASq1B,KAAK,IAAI/mC,EAAE+kC,GAAG5yB,QAAsB,OAAd4yB,GAAG5yB,QAAQ+lB,GAAU,OAAOl4B,EAAEk4B,GAAGl4B,CAAC,CACrd,SAASqgC,KAAQ,IAAI2B,IAAG,IAAIA,IAAG,IAAIA,KAAEA,GAAE,GAAE,OAAOxI,IAAG,KAAQ,UAAHzG,KAAe,KAAQ,UAAHsS,KAAea,GAAG1M,GAAE2L,GAAE,CAAC,SAAS2B,GAAG9mC,EAAEC,GAAG,IAAIC,EAAEsyB,GAAEA,IAAG,EAAE,IAAIhxB,EAAEulC,KAAqC,IAA7BvN,KAAIx5B,GAAGmlC,KAAIllC,IAAEylC,GAAG,KAAKsB,GAAGhnC,EAAEC,UAAU2nC,KAAK,KAAK,CAAC,MAAMnmC,GAAGylC,GAAGlnC,EAAEyB,EAAE,CAAgC,GAAtB4uB,KAAKmC,GAAEtyB,EAAE6kC,GAAG5yB,QAAQ3Q,EAAK,OAAO0jC,GAAE,MAAMjgC,MAAMlF,EAAE,MAAiB,OAAXy5B,GAAE,KAAK2L,GAAE,EAASnD,EAAC,CAAC,SAAS4F,KAAK,KAAK,OAAO1C,IAAG2C,GAAG3C,GAAE,CAAC,SAAS+B,KAAK,KAAK,OAAO/B,KAAIxyB,MAAMm1B,GAAG3C,GAAE,CAAC,SAAS2C,GAAG7nC,GAAG,IAAIC,EAAE2kC,GAAG5kC,EAAEyR,UAAUzR,EAAE6+B,IAAI7+B,EAAE0vB,cAAc1vB,EAAEivB,aAAa,OAAOhvB,EAAE0nC,GAAG3nC,GAAGklC,GAAEjlC,EAAE+kC,GAAG7yB,QAAQ,IAAI,CAC1d,SAASw1B,GAAG3nC,GAAG,IAAIC,EAAED,EAAE,EAAE,CAAC,IAAIE,EAAED,EAAEwR,UAAqB,GAAXzR,EAAEC,EAAEyR,OAAU,KAAa,MAARzR,EAAE0R,QAAc,GAAgB,QAAbzR,EAAEmhC,GAAGnhC,EAAED,EAAE4+B,KAAkB,YAAJqG,GAAEhlC,OAAc,CAAW,GAAG,QAAbA,EAAEiiC,GAAGjiC,EAAED,IAAmC,OAAnBC,EAAEyR,OAAO,WAAMuzB,GAAEhlC,GAAS,GAAG,OAAOF,EAAmE,OAAXgiC,GAAE,OAAEkD,GAAE,MAA5DllC,EAAE2R,OAAO,MAAM3R,EAAEygC,aAAa,EAAEzgC,EAAE+uB,UAAU,IAA4B,CAAa,GAAG,QAAf9uB,EAAEA,EAAEiS,SAAyB,YAAJgzB,GAAEjlC,GAASilC,GAAEjlC,EAAED,CAAC,OAAO,OAAOC,GAAG,IAAI+hC,KAAIA,GAAE,EAAE,CAAC,SAASuF,GAAGvnC,EAAEC,EAAEC,GAAG,IAAIsB,EAAE6T,GAAE5T,EAAEwjC,GAAGjtB,WAAW,IAAIitB,GAAGjtB,WAAW,KAAK3C,GAAE,EAC3Y,SAAYrV,EAAEC,EAAEC,EAAEsB,GAAG,GAAGqlC,WAAW,OAAOjB,IAAI,GAAG,KAAO,EAAFpT,IAAK,MAAMvtB,MAAMlF,EAAE,MAAMG,EAAEF,EAAEqnC,aAAa,IAAI5lC,EAAEzB,EAAEsnC,cAAc,GAAG,OAAOpnC,EAAE,OAAO,KAA2C,GAAtCF,EAAEqnC,aAAa,KAAKrnC,EAAEsnC,cAAc,EAAKpnC,IAAIF,EAAEmS,QAAQ,MAAMlN,MAAMlF,EAAE,MAAMC,EAAEomC,aAAa,KAAKpmC,EAAEwmC,iBAAiB,EAAE,IAAI9kC,EAAExB,EAAE2wB,MAAM3wB,EAAEuwB,WAA8J,GA1NtT,SAAYzwB,EAAEC,GAAG,IAAIC,EAAEF,EAAEyU,cAAcxU,EAAED,EAAEyU,aAAaxU,EAAED,EAAE0U,eAAe,EAAE1U,EAAE2U,YAAY,EAAE3U,EAAEsmC,cAAcrmC,EAAED,EAAE8nC,kBAAkB7nC,EAAED,EAAE4U,gBAAgB3U,EAAEA,EAAED,EAAE6U,cAAc,IAAIrT,EAAExB,EAAEmV,WAAW,IAAInV,EAAEA,EAAEqmC,gBAAgB,EAAEnmC,GAAG,CAAC,IAAIuB,EAAE,GAAGqS,GAAG5T,GAAGwB,EAAE,GAAGD,EAAExB,EAAEwB,GAAG,EAAED,EAAEC,IAAI,EAAEzB,EAAEyB,IAAI,EAAEvB,IAAIwB,CAAC,CAAC,CA0N5GqmC,CAAG/nC,EAAE0B,GAAG1B,IAAIw5B,KAAI0L,GAAE1L,GAAE,KAAK2L,GAAE,GAAG,KAAoB,KAAfjlC,EAAEugC,eAAoB,KAAa,KAARvgC,EAAEyR,QAAag0B,KAAKA,IAAG,EAAGgB,GAAGrzB,IAAG,WAAgB,OAALuzB,KAAY,IAAI,KAAInlC,EAAE,KAAa,MAARxB,EAAEyR,OAAgB,KAAoB,MAAfzR,EAAEugC,eAAqB/+B,EAAE,CAACA,EAAEujC,GAAGjtB,WAAWitB,GAAGjtB,WAAW,KAChf,IAAIrW,EAAE0T,GAAEA,GAAE,EAAE,IAAIxP,EAAE2sB,GAAEA,IAAG,EAAEwS,GAAG7yB,QAAQ,KA1CpC,SAAYnS,EAAEC,GAAgB,GAAbsqB,GAAGzS,GAAauM,GAAVrkB,EAAEikB,MAAc,CAAC,GAAG,mBAAmBjkB,EAAE,IAAIE,EAAE,CAACykB,MAAM3kB,EAAE6kB,eAAeD,IAAI5kB,EAAE8kB,mBAAmB9kB,EAAE,CAA8C,IAAIwB,GAAjDtB,GAAGA,EAAEF,EAAE2I,gBAAgBzI,EAAE8kB,aAAankB,QAAeokB,cAAc/kB,EAAE+kB,eAAe,GAAGzjB,GAAG,IAAIA,EAAE2jB,WAAW,CAACjlB,EAAEsB,EAAE4jB,WAAW,IAAI3jB,EAAED,EAAE6jB,aAAa3jB,EAAEF,EAAE8jB,UAAU9jB,EAAEA,EAAE+jB,YAAY,IAAIrlB,EAAEwK,SAAShJ,EAAEgJ,QAAQ,CAAC,MAAM0e,GAAGlpB,EAAE,KAAK,MAAMF,CAAC,CAAC,IAAI2B,EAAE,EAAEkE,GAAG,EAAEC,GAAG,EAAEF,EAAE,EAAEoL,EAAE,EAAE4hB,EAAE5yB,EAAE6yB,EAAE,KAAK5yB,EAAE,OAAO,CAAC,IAAI,IAAI6yB,EAAKF,IAAI1yB,GAAG,IAAIuB,GAAG,IAAImxB,EAAEloB,WAAW7E,EAAElE,EAAEF,GAAGmxB,IAAIlxB,GAAG,IAAIF,GAAG,IAAIoxB,EAAEloB,WAAW5E,EAAEnE,EAAEH,GAAG,IAAIoxB,EAAEloB,WAAW/I,GACnfixB,EAAEjoB,UAAUvK,QAAW,QAAQ0yB,EAAEF,EAAEzoB,aAAkB0oB,EAAED,EAAEA,EAAEE,EAAE,OAAO,CAAC,GAAGF,IAAI5yB,EAAE,MAAMC,EAA8C,GAA5C4yB,IAAI3yB,KAAK0F,IAAInE,IAAIoE,EAAElE,GAAGkxB,IAAInxB,KAAKsP,IAAIxP,IAAIsE,EAAEnE,GAAM,QAAQmxB,EAAEF,EAAE/O,aAAa,MAAUgP,GAAJD,EAAEC,GAAMnjB,UAAU,CAACkjB,EAAEE,CAAC,CAAC5yB,GAAG,IAAI2F,IAAI,IAAIC,EAAE,KAAK,CAAC6e,MAAM9e,EAAE+e,IAAI9e,EAAE,MAAM5F,EAAE,IAAI,CAACA,EAAEA,GAAG,CAACykB,MAAM,EAAEC,IAAI,EAAE,MAAM1kB,EAAE,KAA+C,IAA1CsqB,GAAG,CAAChG,YAAYxkB,EAAEykB,eAAevkB,GAAG4X,IAAG,EAAO0qB,GAAEviC,EAAE,OAAOuiC,IAAG,GAAOxiC,GAAJC,EAAEuiC,IAAMvwB,MAAM,KAAoB,KAAfhS,EAAEwgC,eAAoB,OAAOzgC,EAAEA,EAAE0R,OAAOzR,EAAEuiC,GAAExiC,OAAO,KAAK,OAAOwiC,IAAG,CAACviC,EAAEuiC,GAAE,IAAI,IAAI1Z,EAAE7oB,EAAEwR,UAAU,GAAG,KAAa,KAARxR,EAAE0R,OAAY,OAAO1R,EAAEkG,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GACvK,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,MAA3W,KAAK,EAAE,GAAG,OAAO2iB,EAAE,CAAC,IAAIC,EAAED,EAAE4G,cAAc1G,EAAEF,EAAEjX,cAAcoX,EAAEhpB,EAAE+P,UAAUmZ,EAAEF,EAAE0L,wBAAwB10B,EAAE6uB,cAAc7uB,EAAEiC,KAAK6mB,EAAEgH,GAAG9vB,EAAEiC,KAAK6mB,GAAGC,GAAGC,EAAEyb,oCAAoCvb,CAAC,CAAC,MAAM,KAAK,EAAE,IAAID,EAAEjpB,EAAE+P,UAAUmH,cAAc,IAAI+R,EAAExe,SAASwe,EAAExf,YAAY,GAAG,IAAIwf,EAAExe,UAAUwe,EAAExE,iBAAiBwE,EAAE9e,YAAY8e,EAAExE,iBAAiB,MAAyC,QAAQ,MAAMzf,MAAMlF,EAAE,MAAO,CAAC,MAAMqpB,GAAGsZ,GAAEziC,EAAEA,EAAEyR,OAAO0X,EAAE,CAAa,GAAG,QAAfppB,EAAEC,EAAEiS,SAAoB,CAAClS,EAAE0R,OAAOzR,EAAEyR,OAAO8wB,GAAExiC,EAAE,KAAK,CAACwiC,GAAEviC,EAAEyR,MAAM,CAACoX,EAAE8Z,GAAGA,IAAG,CAAW,CAwCldoF,CAAGhoC,EAAEE,GAAG8jC,GAAG9jC,EAAEF,GAAGukB,GAAGiG,IAAI1S,KAAKyS,GAAGC,GAAGD,GAAG,KAAKvqB,EAAEmS,QAAQjS,EAAEokC,GAAGpkC,EAAEF,EAAEyB,GAAGmR,KAAK4f,GAAE3sB,EAAEwP,GAAE1T,EAAEsjC,GAAGjtB,WAAWtW,CAAC,MAAM1B,EAAEmS,QAAQjS,EAAsF,GAApFylC,KAAKA,IAAG,EAAGC,GAAG5lC,EAAE6lC,GAAGpkC,GAAGC,EAAE1B,EAAEyU,aAAa,IAAI/S,IAAI67B,GAAG,MAjOmJ,SAAYv9B,GAAG,GAAG6T,IAAI,oBAAoBA,GAAGo0B,kBAAkB,IAAIp0B,GAAGo0B,kBAAkBr0B,GAAG5T,OAAE,EAAO,OAAuB,IAAhBA,EAAEmS,QAAQR,OAAW,CAAC,MAAM1R,GAAG,CAAC,CAiOxRioC,CAAGhoC,EAAE8P,WAAam2B,GAAGnmC,EAAE8S,MAAQ,OAAO7S,EAAE,IAAIuB,EAAExB,EAAEmoC,mBAAmBjoC,EAAE,EAAEA,EAAED,EAAEG,OAAOF,IAAIuB,EAAExB,EAAEC,GAAGsB,EAAEC,EAAEkG,MAAM,CAAC61B,eAAe/7B,EAAEyD,MAAMw3B,OAAOj7B,EAAEi7B,SAAS,GAAGQ,GAAG,MAAMA,IAAG,EAAGl9B,EAAEm9B,GAAGA,GAAG,KAAKn9B,EAAE,KAAQ,EAAH6lC,KAAO,IAAI7lC,EAAEmG,KAAK0gC,KAAKnlC,EAAE1B,EAAEyU,aAAa,KAAO,EAAF/S,GAAK1B,IAAI+lC,GAAGD,MAAMA,GAAG,EAAEC,GAAG/lC,GAAG8lC,GAAG,EAAEpY,IAAgB,CAFxF0a,CAAGpoC,EAAEC,EAAEC,EAAEsB,EAAE,CAAC,QAAQyjC,GAAGjtB,WAAWvW,EAAE4T,GAAE7T,CAAC,CAAC,OAAO,IAAI,CAGhc,SAASqlC,KAAK,GAAG,OAAOjB,GAAG,CAAC,IAAI5lC,EAAEsV,GAAGuwB,IAAI5lC,EAAEglC,GAAGjtB,WAAW9X,EAAEmV,GAAE,IAAmC,GAA/B4vB,GAAGjtB,WAAW,KAAK3C,GAAE,GAAGrV,EAAE,GAAGA,EAAK,OAAO4lC,GAAG,IAAIpkC,GAAE,MAAO,CAAmB,GAAlBxB,EAAE4lC,GAAGA,GAAG,KAAKC,GAAG,EAAK,KAAO,EAAFrT,IAAK,MAAMvtB,MAAMlF,EAAE,MAAM,IAAI0B,EAAE+wB,GAAO,IAALA,IAAG,EAAMgQ,GAAExiC,EAAEmS,QAAQ,OAAOqwB,IAAG,CAAC,IAAI9gC,EAAE8gC,GAAE7gC,EAAED,EAAEuQ,MAAM,GAAG,KAAa,GAARuwB,GAAE7wB,OAAU,CAAC,IAAI9L,EAAEnE,EAAEqtB,UAAU,GAAG,OAAOlpB,EAAE,CAAC,IAAI,IAAIC,EAAE,EAAEA,EAAED,EAAEzF,OAAO0F,IAAI,CAAC,IAAIF,EAAEC,EAAEC,GAAG,IAAI08B,GAAE58B,EAAE,OAAO48B,IAAG,CAAC,IAAIxxB,EAAEwxB,GAAE,OAAOxxB,EAAE7K,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG08B,GAAG,EAAE7xB,EAAEtP,GAAG,IAAIkxB,EAAE5hB,EAAEiB,MAAM,GAAG,OAAO2gB,EAAEA,EAAElhB,OAAOV,EAAEwxB,GAAE5P,OAAO,KAAK,OAAO4P,IAAG,CAAK,IAAI3P,GAAR7hB,EAAEwxB,IAAUtwB,QAAQ4gB,EAAE9hB,EAAEU,OAAa,GAANsxB,GAAGhyB,GAAMA,IACnfpL,EAAE,CAAC48B,GAAE,KAAK,KAAK,CAAC,GAAG,OAAO3P,EAAE,CAACA,EAAEnhB,OAAOohB,EAAE0P,GAAE3P,EAAE,KAAK,CAAC2P,GAAE1P,CAAC,CAAC,CAAC,CAAC,IAAIhK,EAAEpnB,EAAE+P,UAAU,GAAG,OAAOqX,EAAE,CAAC,IAAIC,EAAED,EAAE7W,MAAM,GAAG,OAAO8W,EAAE,CAACD,EAAE7W,MAAM,KAAK,EAAE,CAAC,IAAI+W,EAAED,EAAE7W,QAAQ6W,EAAE7W,QAAQ,KAAK6W,EAAEC,CAAC,OAAO,OAAOD,EAAE,CAAC,CAACyZ,GAAE9gC,CAAC,CAAC,CAAC,GAAG,KAAoB,KAAfA,EAAE++B,eAAoB,OAAO9+B,EAAEA,EAAE+P,OAAOhQ,EAAE8gC,GAAE7gC,OAAO1B,EAAE,KAAK,OAAOuiC,IAAG,CAAK,GAAG,KAAa,MAApB9gC,EAAE8gC,IAAY7wB,OAAY,OAAOjQ,EAAEyE,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG08B,GAAG,EAAEnhC,EAAEA,EAAEgQ,QAAQ,IAAIuX,EAAEvnB,EAAEwQ,QAAQ,GAAG,OAAO+W,EAAE,CAACA,EAAEvX,OAAOhQ,EAAEgQ,OAAO8wB,GAAEvZ,EAAE,MAAMhpB,CAAC,CAACuiC,GAAE9gC,EAAEgQ,MAAM,CAAC,CAAC,IAAIyX,EAAEnpB,EAAEmS,QAAQ,IAAIqwB,GAAErZ,EAAE,OAAOqZ,IAAG,CAAK,IAAItZ,GAARvnB,EAAE6gC,IAAUvwB,MAAM,GAAG,KAAoB,KAAftQ,EAAE8+B,eAAoB,OAClfvX,EAAEA,EAAExX,OAAO/P,EAAE6gC,GAAEtZ,OAAOjpB,EAAE,IAAI0B,EAAEwnB,EAAE,OAAOqZ,IAAG,CAAK,GAAG,KAAa,MAApB38B,EAAE28B,IAAY7wB,OAAY,IAAI,OAAO9L,EAAEM,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG28B,GAAG,EAAEj9B,GAAG,CAAC,MAAM6jB,GAAIgZ,GAAE78B,EAAEA,EAAE6L,OAAOgY,EAAG,CAAC,GAAG7jB,IAAIlE,EAAE,CAAC6gC,GAAE,KAAK,MAAMviC,CAAC,CAAC,IAAImpB,EAAEvjB,EAAEqM,QAAQ,GAAG,OAAOkX,EAAE,CAACA,EAAE1X,OAAO7L,EAAE6L,OAAO8wB,GAAEpZ,EAAE,MAAMnpB,CAAC,CAACuiC,GAAE38B,EAAE6L,MAAM,CAAC,CAAU,GAAT8gB,GAAE/wB,EAAEisB,KAAQ7Z,IAAI,oBAAoBA,GAAGw0B,sBAAsB,IAAIx0B,GAAGw0B,sBAAsBz0B,GAAG5T,EAAE,CAAC,MAAM0pB,GAAI,CAACloB,GAAE,CAAE,CAAC,OAAOA,CAAC,CAAC,QAAQ6T,GAAEnV,EAAE+kC,GAAGjtB,WAAW/X,CAAC,CAAC,CAAC,OAAM,CAAE,CAAC,SAASqoC,GAAGtoC,EAAEC,EAAEC,GAAyBF,EAAEuyB,GAAGvyB,EAAjBC,EAAEg9B,GAAGj9B,EAAfC,EAAEu8B,GAAGt8B,EAAED,GAAY,GAAY,GAAGA,EAAEwzB,KAAI,OAAOzzB,IAAIkV,GAAGlV,EAAE,EAAEC,GAAGkmC,GAAGnmC,EAAEC,GAAG,CACze,SAASyiC,GAAE1iC,EAAEC,EAAEC,GAAG,GAAG,IAAIF,EAAEmG,IAAImiC,GAAGtoC,EAAEA,EAAEE,QAAQ,KAAK,OAAOD,GAAG,CAAC,GAAG,IAAIA,EAAEkG,IAAI,CAACmiC,GAAGroC,EAAED,EAAEE,GAAG,KAAK,CAAM,GAAG,IAAID,EAAEkG,IAAI,CAAC,IAAI3E,EAAEvB,EAAE+P,UAAU,GAAG,oBAAoB/P,EAAEiC,KAAKm7B,0BAA0B,oBAAoB77B,EAAE87B,oBAAoB,OAAOC,KAAKA,GAAGlV,IAAI7mB,IAAI,CAAuBvB,EAAEsyB,GAAGtyB,EAAjBD,EAAEo9B,GAAGn9B,EAAfD,EAAEw8B,GAAGt8B,EAAEF,GAAY,GAAY,GAAGA,EAAEyzB,KAAI,OAAOxzB,IAAIiV,GAAGjV,EAAE,EAAED,GAAGmmC,GAAGlmC,EAAED,IAAI,KAAK,CAAC,CAACC,EAAEA,EAAEyR,MAAM,CAAC,CACnV,SAASisB,GAAG39B,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAE09B,UAAU,OAAOl8B,GAAGA,EAAE+U,OAAOtW,GAAGA,EAAEwzB,KAAIzzB,EAAE2U,aAAa3U,EAAE0U,eAAexU,EAAEs5B,KAAIx5B,IAAImlC,GAAEjlC,KAAKA,IAAI,IAAI8hC,IAAG,IAAIA,KAAM,UAAFmD,MAAeA,IAAG,IAAIryB,KAAIqxB,GAAG6C,GAAGhnC,EAAE,GAAGslC,IAAIplC,GAAGimC,GAAGnmC,EAAEC,EAAE,CAAC,SAASsoC,GAAGvoC,EAAEC,GAAG,IAAIA,IAAI,KAAY,EAAPD,EAAEsvB,MAAQrvB,EAAE,GAAGA,EAAEqU,GAAU,KAAQ,WAAfA,KAAK,MAAuBA,GAAG,WAAW,IAAIpU,EAAEuzB,KAAc,QAAVzzB,EAAEuxB,GAAGvxB,EAAEC,MAAciV,GAAGlV,EAAEC,EAAEC,GAAGimC,GAAGnmC,EAAEE,GAAG,CAAC,SAASogC,GAAGtgC,GAAG,IAAIC,EAAED,EAAE6R,cAAc3R,EAAE,EAAE,OAAOD,IAAIC,EAAED,EAAEmvB,WAAWmZ,GAAGvoC,EAAEE,EAAE,CACjZ,SAAS4jC,GAAG9jC,EAAEC,GAAG,IAAIC,EAAE,EAAE,OAAOF,EAAEmG,KAAK,KAAK,GAAG,IAAI3E,EAAExB,EAAEgQ,UAAcvO,EAAEzB,EAAE6R,cAAc,OAAOpQ,IAAIvB,EAAEuB,EAAE2tB,WAAW,MAAM,KAAK,GAAG5tB,EAAExB,EAAEgQ,UAAU,MAAM,QAAQ,MAAM/K,MAAMlF,EAAE,MAAO,OAAOyB,GAAGA,EAAE+U,OAAOtW,GAAGsoC,GAAGvoC,EAAEE,EAAE,CAQqK,SAASymC,GAAG3mC,EAAEC,GAAG,OAAOqS,GAAGtS,EAAEC,EAAE,CACjZ,SAASuoC,GAAGxoC,EAAEC,EAAEC,EAAEsB,GAAGI,KAAKuE,IAAInG,EAAE4B,KAAKuc,IAAIje,EAAE0B,KAAKsQ,QAAQtQ,KAAKqQ,MAAMrQ,KAAK8P,OAAO9P,KAAKoO,UAAUpO,KAAKM,KAAKN,KAAKktB,YAAY,KAAKltB,KAAK2zB,MAAM,EAAE3zB,KAAKozB,IAAI,KAAKpzB,KAAKqtB,aAAahvB,EAAE2B,KAAK+uB,aAAa/uB,KAAKiQ,cAAcjQ,KAAK8vB,YAAY9vB,KAAK8tB,cAAc,KAAK9tB,KAAK0tB,KAAK9tB,EAAEI,KAAK6+B,aAAa7+B,KAAK+P,MAAM,EAAE/P,KAAKmtB,UAAU,KAAKntB,KAAK6uB,WAAW7uB,KAAKivB,MAAM,EAAEjvB,KAAK6P,UAAU,IAAI,CAAC,SAASod,GAAG7uB,EAAEC,EAAEC,EAAEsB,GAAG,OAAO,IAAIgnC,GAAGxoC,EAAEC,EAAEC,EAAEsB,EAAE,CAAC,SAAS48B,GAAGp+B,GAAiB,UAAdA,EAAEA,EAAEkB,aAAuBlB,EAAEyoC,iBAAiB,CAEpd,SAASjT,GAAGx1B,EAAEC,GAAG,IAAIC,EAAEF,EAAEyR,UACuB,OADb,OAAOvR,IAAGA,EAAE2uB,GAAG7uB,EAAEmG,IAAIlG,EAAED,EAAEme,IAAIne,EAAEsvB,OAAQR,YAAY9uB,EAAE8uB,YAAY5uB,EAAEgC,KAAKlC,EAAEkC,KAAKhC,EAAE8P,UAAUhQ,EAAEgQ,UAAU9P,EAAEuR,UAAUzR,EAAEA,EAAEyR,UAAUvR,IAAIA,EAAE+uB,aAAahvB,EAAEC,EAAEgC,KAAKlC,EAAEkC,KAAKhC,EAAEyR,MAAM,EAAEzR,EAAEugC,aAAa,EAAEvgC,EAAE6uB,UAAU,MAAM7uB,EAAEyR,MAAc,SAAR3R,EAAE2R,MAAezR,EAAEuwB,WAAWzwB,EAAEywB,WAAWvwB,EAAE2wB,MAAM7wB,EAAE6wB,MAAM3wB,EAAE+R,MAAMjS,EAAEiS,MAAM/R,EAAEwvB,cAAc1vB,EAAE0vB,cAAcxvB,EAAE2R,cAAc7R,EAAE6R,cAAc3R,EAAEwxB,YAAY1xB,EAAE0xB,YAAYzxB,EAAED,EAAE2wB,aAAazwB,EAAEywB,aAAa,OAAO1wB,EAAE,KAAK,CAAC4wB,MAAM5wB,EAAE4wB,MAAMD,aAAa3wB,EAAE2wB,cAC/e1wB,EAAEgS,QAAQlS,EAAEkS,QAAQhS,EAAEq1B,MAAMv1B,EAAEu1B,MAAMr1B,EAAE80B,IAAIh1B,EAAEg1B,IAAW90B,CAAC,CACxD,SAASw1B,GAAG11B,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,GAAG,IAAIC,EAAE,EAAM,GAAJH,EAAExB,EAAK,oBAAoBA,EAAEo+B,GAAGp+B,KAAK2B,EAAE,QAAQ,GAAG,kBAAkB3B,EAAE2B,EAAE,OAAO3B,EAAE,OAAOA,GAAG,KAAK+D,EAAG,OAAO8xB,GAAG31B,EAAEoJ,SAAS7H,EAAEC,EAAEzB,GAAG,KAAK+D,EAAGrC,EAAE,EAAEF,GAAG,EAAE,MAAM,KAAKwC,EAAG,OAAOjE,EAAE6uB,GAAG,GAAG3uB,EAAED,EAAI,EAAFwB,IAAOqtB,YAAY7qB,EAAGjE,EAAE6wB,MAAMnvB,EAAE1B,EAAE,KAAKqE,EAAG,OAAOrE,EAAE6uB,GAAG,GAAG3uB,EAAED,EAAEwB,IAAKqtB,YAAYzqB,EAAGrE,EAAE6wB,MAAMnvB,EAAE1B,EAAE,KAAKsE,EAAG,OAAOtE,EAAE6uB,GAAG,GAAG3uB,EAAED,EAAEwB,IAAKqtB,YAAYxqB,EAAGtE,EAAE6wB,MAAMnvB,EAAE1B,EAAE,KAAKyE,EAAG,OAAOu7B,GAAG9/B,EAAEuB,EAAEC,EAAEzB,GAAG,QAAQ,GAAG,kBAAkBD,GAAG,OAAOA,EAAE,OAAOA,EAAEsG,UAAU,KAAKpC,EAAGvC,EAAE,GAAG,MAAM3B,EAAE,KAAKmE,EAAGxC,EAAE,EAAE,MAAM3B,EAAE,KAAKoE,EAAGzC,EAAE,GACpf,MAAM3B,EAAE,KAAKuE,EAAG5C,EAAE,GAAG,MAAM3B,EAAE,KAAKwE,EAAG7C,EAAE,GAAGH,EAAE,KAAK,MAAMxB,EAAE,MAAMiF,MAAMlF,EAAE,IAAI,MAAMC,EAAEA,SAASA,EAAE,KAAuD,OAAjDC,EAAE4uB,GAAGltB,EAAEzB,EAAED,EAAEwB,IAAKqtB,YAAY9uB,EAAEC,EAAEiC,KAAKV,EAAEvB,EAAE4wB,MAAMnvB,EAASzB,CAAC,CAAC,SAAS41B,GAAG71B,EAAEC,EAAEC,EAAEsB,GAA2B,OAAxBxB,EAAE6uB,GAAG,EAAE7uB,EAAEwB,EAAEvB,IAAK4wB,MAAM3wB,EAASF,CAAC,CAAC,SAASggC,GAAGhgC,EAAEC,EAAEC,EAAEsB,GAAuE,OAApExB,EAAE6uB,GAAG,GAAG7uB,EAAEwB,EAAEvB,IAAK6uB,YAAYrqB,EAAGzE,EAAE6wB,MAAM3wB,EAAEF,EAAEgQ,UAAU,CAACk0B,UAAS,GAAWlkC,CAAC,CAAC,SAASy1B,GAAGz1B,EAAEC,EAAEC,GAA8B,OAA3BF,EAAE6uB,GAAG,EAAE7uB,EAAE,KAAKC,IAAK4wB,MAAM3wB,EAASF,CAAC,CAC5W,SAAS41B,GAAG51B,EAAEC,EAAEC,GAA8J,OAA3JD,EAAE4uB,GAAG,EAAE,OAAO7uB,EAAEsJ,SAAStJ,EAAEsJ,SAAS,GAAGtJ,EAAEme,IAAIle,IAAK4wB,MAAM3wB,EAAED,EAAE+P,UAAU,CAACmH,cAAcnX,EAAEmX,cAAcuxB,gBAAgB,KAAK/S,eAAe31B,EAAE21B,gBAAuB11B,CAAC,CACtL,SAAS0oC,GAAG3oC,EAAEC,EAAEC,EAAEsB,EAAEC,GAAGG,KAAKuE,IAAIlG,EAAE2B,KAAKuV,cAAcnX,EAAE4B,KAAKylC,aAAazlC,KAAK87B,UAAU97B,KAAKuQ,QAAQvQ,KAAK8mC,gBAAgB,KAAK9mC,KAAK4lC,eAAe,EAAE5lC,KAAKwkC,aAAaxkC,KAAK09B,eAAe19B,KAAKovB,QAAQ,KAAKpvB,KAAK4kC,iBAAiB,EAAE5kC,KAAKuT,WAAWF,GAAG,GAAGrT,KAAKykC,gBAAgBpxB,IAAI,GAAGrT,KAAKgT,eAAehT,KAAK0lC,cAAc1lC,KAAKkmC,iBAAiBlmC,KAAK0kC,aAAa1kC,KAAK+S,YAAY/S,KAAK8S,eAAe9S,KAAK6S,aAAa,EAAE7S,KAAKiT,cAAcI,GAAG,GAAGrT,KAAK26B,iBAAiB/6B,EAAEI,KAAKumC,mBAAmB1mC,EAAEG,KAAKgnC,gCAC/e,IAAI,CAAC,SAASC,GAAG7oC,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,EAAEkE,EAAEC,GAAgN,OAA7M9F,EAAE,IAAI2oC,GAAG3oC,EAAEC,EAAEC,EAAE2F,EAAEC,GAAG,IAAI7F,GAAGA,EAAE,GAAE,IAAKyB,IAAIzB,GAAG,IAAIA,EAAE,EAAEyB,EAAEmtB,GAAG,EAAE,KAAK,KAAK5uB,GAAGD,EAAEmS,QAAQzQ,EAAEA,EAAEsO,UAAUhQ,EAAE0B,EAAEmQ,cAAc,CAACgU,QAAQrkB,EAAE0V,aAAahX,EAAE4oC,MAAM,KAAKnK,YAAY,KAAKoK,0BAA0B,MAAMtX,GAAG/vB,GAAU1B,CAAC,CACzP,SAASgpC,GAAGhpC,GAAG,IAAIA,EAAE,OAAOqsB,GAAuBrsB,EAAE,CAAC,GAAGwR,GAA1BxR,EAAEA,EAAEuzB,mBAA8BvzB,GAAG,IAAIA,EAAEmG,IAAI,MAAMlB,MAAMlF,EAAE,MAAM,IAAIE,EAAED,EAAE,EAAE,CAAC,OAAOC,EAAEkG,KAAK,KAAK,EAAElG,EAAEA,EAAE+P,UAAUghB,QAAQ,MAAMhxB,EAAE,KAAK,EAAE,GAAG6sB,GAAG5sB,EAAEiC,MAAM,CAACjC,EAAEA,EAAE+P,UAAUod,0CAA0C,MAAMptB,CAAC,EAAEC,EAAEA,EAAEyR,MAAM,OAAO,OAAOzR,GAAG,MAAMgF,MAAMlF,EAAE,KAAM,CAAC,GAAG,IAAIC,EAAEmG,IAAI,CAAC,IAAIjG,EAAEF,EAAEkC,KAAK,GAAG2qB,GAAG3sB,GAAG,OAAO+sB,GAAGjtB,EAAEE,EAAED,EAAE,CAAC,OAAOA,CAAC,CACpW,SAASgpC,GAAGjpC,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,EAAEkE,EAAEC,GAAwK,OAArK9F,EAAE6oC,GAAG3oC,EAAEsB,GAAE,EAAGxB,EAAEyB,EAAEC,EAAEC,EAAEkE,EAAEC,IAAKkrB,QAAQgY,GAAG,MAAM9oC,EAAEF,EAAEmS,SAAsBzQ,EAAEwwB,GAAhB1wB,EAAEiyB,KAAIhyB,EAAEiyB,GAAGxzB,KAAeoyB,cAAS,IAASryB,GAAG,OAAOA,EAAEA,EAAE,KAAKsyB,GAAGryB,EAAEwB,EAAED,GAAGzB,EAAEmS,QAAQ0e,MAAMpvB,EAAEyT,GAAGlV,EAAEyB,EAAED,GAAG2kC,GAAGnmC,EAAEwB,GAAUxB,CAAC,CAAC,SAASkpC,GAAGlpC,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAExB,EAAEkS,QAAQzQ,EAAE+xB,KAAI9xB,EAAE+xB,GAAGjyB,GAAsL,OAAnLvB,EAAE8oC,GAAG9oC,GAAG,OAAOD,EAAE+wB,QAAQ/wB,EAAE+wB,QAAQ9wB,EAAED,EAAEq/B,eAAep/B,GAAED,EAAEiyB,GAAGxwB,EAAEC,IAAK0wB,QAAQ,CAACxM,QAAQ7lB,GAAuB,QAApBwB,OAAE,IAASA,EAAE,KAAKA,KAAavB,EAAEqyB,SAAS9wB,GAAe,QAAZxB,EAAEuyB,GAAG9wB,EAAExB,EAAE0B,MAAcgyB,GAAG3zB,EAAEyB,EAAEE,EAAED,GAAG+wB,GAAGzyB,EAAEyB,EAAEE,IAAWA,CAAC,CAC3b,SAASwnC,GAAGnpC,GAAe,OAAZA,EAAEA,EAAEmS,SAAcF,OAAyBjS,EAAEiS,MAAM9L,IAAoDnG,EAAEiS,MAAMjC,WAAhF,IAA0F,CAAC,SAASo5B,GAAGppC,EAAEC,GAAqB,GAAG,QAArBD,EAAEA,EAAE6R,gBAA2B,OAAO7R,EAAE8R,WAAW,CAAC,IAAI5R,EAAEF,EAAEovB,UAAUpvB,EAAEovB,UAAU,IAAIlvB,GAAGA,EAAED,EAAEC,EAAED,CAAC,CAAC,CAAC,SAASopC,GAAGrpC,EAAEC,GAAGmpC,GAAGppC,EAAEC,IAAID,EAAEA,EAAEyR,YAAY23B,GAAGppC,EAAEC,EAAE,CAnB7S2kC,GAAG,SAAS5kC,EAAEC,EAAEC,GAAG,GAAG,OAAOF,EAAE,GAAGA,EAAE0vB,gBAAgBzvB,EAAEgvB,cAAc1C,GAAGpa,QAAQ2e,IAAG,MAAO,CAAC,GAAG,KAAK9wB,EAAE6wB,MAAM3wB,IAAI,KAAa,IAARD,EAAE0R,OAAW,OAAOmf,IAAG,EAzE1I,SAAY9wB,EAAEC,EAAEC,GAAG,OAAOD,EAAEkG,KAAK,KAAK,EAAEk5B,GAAGp/B,GAAG2vB,KAAK,MAAM,KAAK,EAAE6G,GAAGx2B,GAAG,MAAM,KAAK,EAAE4sB,GAAG5sB,EAAEiC,OAAOirB,GAAGltB,GAAG,MAAM,KAAK,EAAEq2B,GAAGr2B,EAAEA,EAAE+P,UAAUmH,eAAe,MAAM,KAAK,GAAG,IAAI3V,EAAEvB,EAAEiC,KAAKqE,SAAS9E,EAAExB,EAAEyvB,cAAc/nB,MAAMykB,GAAE6D,GAAGzuB,EAAE+uB,eAAe/uB,EAAE+uB,cAAc9uB,EAAE,MAAM,KAAK,GAAqB,GAAG,QAArBD,EAAEvB,EAAE4R,eAA2B,OAAG,OAAOrQ,EAAEsQ,YAAkBsa,GAAEuK,GAAY,EAAVA,GAAExkB,SAAWlS,EAAE0R,OAAO,IAAI,MAAQ,KAAKzR,EAAED,EAAEgS,MAAMwe,YAAmBqP,GAAG9/B,EAAEC,EAAEC,IAAGksB,GAAEuK,GAAY,EAAVA,GAAExkB,SAA8B,QAAnBnS,EAAEk+B,GAAGl+B,EAAEC,EAAEC,IAAmBF,EAAEkS,QAAQ,MAAKka,GAAEuK,GAAY,EAAVA,GAAExkB,SAAW,MAAM,KAAK,GAC7d,GADge3Q,EAAE,KAAKtB,EACrfD,EAAEwwB,YAAe,KAAa,IAARzwB,EAAE2R,OAAW,CAAC,GAAGnQ,EAAE,OAAO0/B,GAAGlhC,EAAEC,EAAEC,GAAGD,EAAE0R,OAAO,GAAG,CAA6F,GAA1E,QAAlBlQ,EAAExB,EAAE4R,iBAAyBpQ,EAAEo/B,UAAU,KAAKp/B,EAAEu/B,KAAK,KAAKv/B,EAAEi4B,WAAW,MAAMtN,GAAEuK,GAAEA,GAAExkB,SAAY3Q,EAAE,MAAW,OAAO,KAAK,KAAK,GAAG,KAAK,GAAG,OAAOvB,EAAE4wB,MAAM,EAAE2N,GAAGx+B,EAAEC,EAAEC,GAAG,OAAOg+B,GAAGl+B,EAAEC,EAAEC,EAAE,CAwE7GopC,CAAGtpC,EAAEC,EAAEC,GAAG4wB,GAAG,KAAa,OAAR9wB,EAAE2R,MAAmB,MAAMmf,IAAG,EAAGpC,IAAG,KAAa,QAARzuB,EAAE0R,QAAgB0c,GAAGpuB,EAAE6tB,GAAG7tB,EAAEs1B,OAAiB,OAAVt1B,EAAE4wB,MAAM,EAAS5wB,EAAEkG,KAAK,KAAK,EAAE,IAAI3E,EAAEvB,EAAEiC,KAAK88B,GAAGh/B,EAAEC,GAAGD,EAAEC,EAAEgvB,aAAa,IAAIxtB,EAAEgrB,GAAGxsB,EAAEqsB,GAAEna,SAASue,GAAGzwB,EAAEC,GAAGuB,EAAEq2B,GAAG,KAAK73B,EAAEuB,EAAExB,EAAEyB,EAAEvB,GAAG,IAAIwB,EAAEy2B,KACvI,OAD4Il4B,EAAE0R,OAAO,EAAE,kBAAkBlQ,GAAG,OAAOA,GAAG,oBAAoBA,EAAE2E,aAAQ,IAAS3E,EAAE6E,UAAUrG,EAAEkG,IAAI,EAAElG,EAAE4R,cAAc,KAAK5R,EAAEyxB,YAC1e,KAAK7E,GAAGrrB,IAAIE,GAAE,EAAGyrB,GAAGltB,IAAIyB,GAAE,EAAGzB,EAAE4R,cAAc,OAAOpQ,EAAE0yB,YAAO,IAAS1yB,EAAE0yB,MAAM1yB,EAAE0yB,MAAM,KAAK1C,GAAGxxB,GAAGwB,EAAE2yB,QAAQf,GAAGpzB,EAAE+P,UAAUvO,EAAEA,EAAE8xB,gBAAgBtzB,EAAEu0B,GAAGv0B,EAAEuB,EAAExB,EAAEE,GAAGD,EAAEm/B,GAAG,KAAKn/B,EAAEuB,GAAE,EAAGE,EAAExB,KAAKD,EAAEkG,IAAI,EAAEuoB,IAAGhtB,GAAG4sB,GAAGruB,GAAG+9B,GAAG,KAAK/9B,EAAEwB,EAAEvB,GAAGD,EAAEA,EAAEgS,OAAchS,EAAE,KAAK,GAAGuB,EAAEvB,EAAE6uB,YAAY9uB,EAAE,CAAqF,OAApFg/B,GAAGh/B,EAAEC,GAAGD,EAAEC,EAAEgvB,aAAuBztB,GAAVC,EAAED,EAAEiF,OAAUjF,EAAEgF,UAAUvG,EAAEiC,KAAKV,EAAEC,EAAExB,EAAEkG,IAQtU,SAAYnG,GAAG,GAAG,oBAAoBA,EAAE,OAAOo+B,GAAGp+B,GAAG,EAAE,EAAE,QAAG,IAASA,GAAG,OAAOA,EAAE,CAAc,IAAbA,EAAEA,EAAEsG,YAAgBlC,EAAG,OAAO,GAAG,GAAGpE,IAAIuE,EAAG,OAAO,EAAE,CAAC,OAAO,CAAC,CAR2LglC,CAAG/nC,GAAGxB,EAAE+vB,GAAGvuB,EAAExB,GAAUyB,GAAG,KAAK,EAAExB,EAAEs+B,GAAG,KAAKt+B,EAAEuB,EAAExB,EAAEE,GAAG,MAAMF,EAAE,KAAK,EAAEC,EAAE8+B,GAAG,KAAK9+B,EAAEuB,EAAExB,EAAEE,GAAG,MAAMF,EAAE,KAAK,GAAGC,EAAEg+B,GAAG,KAAKh+B,EAAEuB,EAAExB,EAAEE,GAAG,MAAMF,EAAE,KAAK,GAAGC,EAAEk+B,GAAG,KAAKl+B,EAAEuB,EAAEuuB,GAAGvuB,EAAEU,KAAKlC,GAAGE,GAAG,MAAMF,EAAE,MAAMiF,MAAMlF,EAAE,IACvgByB,EAAE,IAAK,CAAC,OAAOvB,EAAE,KAAK,EAAE,OAAOuB,EAAEvB,EAAEiC,KAAKT,EAAExB,EAAEgvB,aAA2CsP,GAAGv+B,EAAEC,EAAEuB,EAArCC,EAAExB,EAAE6uB,cAActtB,EAAEC,EAAEsuB,GAAGvuB,EAAEC,GAAcvB,GAAG,KAAK,EAAE,OAAOsB,EAAEvB,EAAEiC,KAAKT,EAAExB,EAAEgvB,aAA2C8P,GAAG/+B,EAAEC,EAAEuB,EAArCC,EAAExB,EAAE6uB,cAActtB,EAAEC,EAAEsuB,GAAGvuB,EAAEC,GAAcvB,GAAG,KAAK,EAAEF,EAAE,CAAO,GAANq/B,GAAGp/B,GAAM,OAAOD,EAAE,MAAMiF,MAAMlF,EAAE,MAAMyB,EAAEvB,EAAEgvB,aAA+BxtB,GAAlBC,EAAEzB,EAAE4R,eAAkBgU,QAAQoM,GAAGjyB,EAAEC,GAAG0yB,GAAG1yB,EAAEuB,EAAE,KAAKtB,GAAG,IAAIyB,EAAE1B,EAAE4R,cAA0B,GAAZrQ,EAAEG,EAAEkkB,QAAWnkB,EAAEwV,aAAY,CAAC,GAAGxV,EAAE,CAACmkB,QAAQrkB,EAAE0V,cAAa,EAAG4xB,MAAMnnC,EAAEmnC,MAAMC,0BAA0BpnC,EAAEonC,0BAA0BpK,YAAYh9B,EAAEg9B,aAAa1+B,EAAEyxB,YAAYC,UAChfjwB,EAAEzB,EAAE4R,cAAcnQ,EAAU,IAARzB,EAAE0R,MAAU,CAAuB1R,EAAEs/B,GAAGv/B,EAAEC,EAAEuB,EAAEtB,EAAjCuB,EAAE+6B,GAAGv3B,MAAMlF,EAAE,MAAME,IAAmB,MAAMD,CAAC,CAAM,GAAGwB,IAAIC,EAAE,CAAuBxB,EAAEs/B,GAAGv/B,EAAEC,EAAEuB,EAAEtB,EAAjCuB,EAAE+6B,GAAGv3B,MAAMlF,EAAE,MAAME,IAAmB,MAAMD,CAAC,CAAM,IAAIyuB,GAAGjD,GAAGvrB,EAAE+P,UAAUmH,cAAchN,YAAYqkB,GAAGvuB,EAAEyuB,IAAE,EAAGC,GAAG,KAAKzuB,EAAE81B,GAAG/1B,EAAE,KAAKuB,EAAEtB,GAAGD,EAAEgS,MAAM/R,EAAEA,GAAGA,EAAEyR,OAAe,EAATzR,EAAEyR,MAAS,KAAKzR,EAAEA,EAAEgS,OAAQ,KAAI,CAAM,GAAL0d,KAAQpuB,IAAIC,EAAE,CAACxB,EAAEi+B,GAAGl+B,EAAEC,EAAEC,GAAG,MAAMF,CAAC,CAACg+B,GAAGh+B,EAAEC,EAAEuB,EAAEtB,EAAE,CAACD,EAAEA,EAAEgS,KAAK,CAAC,OAAOhS,EAAE,KAAK,EAAE,OAAOw2B,GAAGx2B,GAAG,OAAOD,GAAGuvB,GAAGtvB,GAAGuB,EAAEvB,EAAEiC,KAAKT,EAAExB,EAAEgvB,aAAavtB,EAAE,OAAO1B,EAAEA,EAAE0vB,cAAc,KAAK/tB,EAAEF,EAAE6H,SAASmhB,GAAGjpB,EAAEC,GAAGE,EAAE,KAAK,OAAOD,GAAG+oB,GAAGjpB,EAAEE,KAAKzB,EAAE0R,OAAO,IACnfmtB,GAAG9+B,EAAEC,GAAG+9B,GAAGh+B,EAAEC,EAAE0B,EAAEzB,GAAGD,EAAEgS,MAAM,KAAK,EAAE,OAAO,OAAOjS,GAAGuvB,GAAGtvB,GAAG,KAAK,KAAK,GAAG,OAAO6/B,GAAG9/B,EAAEC,EAAEC,GAAG,KAAK,EAAE,OAAOo2B,GAAGr2B,EAAEA,EAAE+P,UAAUmH,eAAe3V,EAAEvB,EAAEgvB,aAAa,OAAOjvB,EAAEC,EAAEgS,MAAM8jB,GAAG91B,EAAE,KAAKuB,EAAEtB,GAAG89B,GAAGh+B,EAAEC,EAAEuB,EAAEtB,GAAGD,EAAEgS,MAAM,KAAK,GAAG,OAAOzQ,EAAEvB,EAAEiC,KAAKT,EAAExB,EAAEgvB,aAA2CgP,GAAGj+B,EAAEC,EAAEuB,EAArCC,EAAExB,EAAE6uB,cAActtB,EAAEC,EAAEsuB,GAAGvuB,EAAEC,GAAcvB,GAAG,KAAK,EAAE,OAAO89B,GAAGh+B,EAAEC,EAAEA,EAAEgvB,aAAa/uB,GAAGD,EAAEgS,MAAM,KAAK,EAAmD,KAAK,GAAG,OAAO+rB,GAAGh+B,EAAEC,EAAEA,EAAEgvB,aAAa3lB,SAASpJ,GAAGD,EAAEgS,MAAM,KAAK,GAAGjS,EAAE,CACxZ,GADyZwB,EAAEvB,EAAEiC,KAAKqE,SAAS9E,EAAExB,EAAEgvB,aAAavtB,EAAEzB,EAAEyvB,cAClf/tB,EAAEF,EAAEkG,MAAMykB,GAAE6D,GAAGzuB,EAAE+uB,eAAe/uB,EAAE+uB,cAAc5uB,EAAK,OAAOD,EAAE,GAAG6hB,GAAG7hB,EAAEiG,MAAMhG,IAAI,GAAGD,EAAE4H,WAAW7H,EAAE6H,WAAWijB,GAAGpa,QAAQ,CAAClS,EAAEi+B,GAAGl+B,EAAEC,EAAEC,GAAG,MAAMF,CAAC,OAAO,IAAc,QAAV0B,EAAEzB,EAAEgS,SAAiBvQ,EAAEgQ,OAAOzR,GAAG,OAAOyB,GAAG,CAAC,IAAImE,EAAEnE,EAAEivB,aAAa,GAAG,OAAO9qB,EAAE,CAAClE,EAAED,EAAEuQ,MAAM,IAAI,IAAInM,EAAED,EAAE+qB,aAAa,OAAO9qB,GAAG,CAAC,GAAGA,EAAEkrB,UAAUxvB,EAAE,CAAC,GAAG,IAAIE,EAAEyE,IAAI,EAACL,EAAEosB,IAAI,EAAEhyB,GAAGA,IAAKiG,IAAI,EAAE,IAAIP,EAAElE,EAAEgwB,YAAY,GAAG,OAAO9rB,EAAE,CAAY,IAAIoL,GAAfpL,EAAEA,EAAEksB,QAAeC,QAAQ,OAAO/gB,EAAElL,EAAEorB,KAAKprB,GAAGA,EAAEorB,KAAKlgB,EAAEkgB,KAAKlgB,EAAEkgB,KAAKprB,GAAGF,EAAEmsB,QAAQjsB,CAAC,CAAC,CAACpE,EAAEmvB,OAAO3wB,EAAgB,QAAd4F,EAAEpE,EAAE+P,aAAqB3L,EAAE+qB,OAAO3wB,GAAGswB,GAAG9uB,EAAEgQ,OAClfxR,EAAED,GAAG4F,EAAEgrB,OAAO3wB,EAAE,KAAK,CAAC4F,EAAEA,EAAEorB,IAAI,CAAC,MAAM,GAAG,KAAKxvB,EAAEyE,IAAIxE,EAAED,EAAEQ,OAAOjC,EAAEiC,KAAK,KAAKR,EAAEuQ,WAAW,GAAG,KAAKvQ,EAAEyE,IAAI,CAAY,GAAG,QAAdxE,EAAED,EAAEgQ,QAAmB,MAAMzM,MAAMlF,EAAE,MAAM4B,EAAEkvB,OAAO3wB,EAAgB,QAAd2F,EAAElE,EAAE8P,aAAqB5L,EAAEgrB,OAAO3wB,GAAGswB,GAAG7uB,EAAEzB,EAAED,GAAG0B,EAAED,EAAEwQ,OAAO,MAAMvQ,EAAED,EAAEuQ,MAAM,GAAG,OAAOtQ,EAAEA,EAAE+P,OAAOhQ,OAAO,IAAIC,EAAED,EAAE,OAAOC,GAAG,CAAC,GAAGA,IAAI1B,EAAE,CAAC0B,EAAE,KAAK,KAAK,CAAa,GAAG,QAAfD,EAAEC,EAAEuQ,SAAoB,CAACxQ,EAAEgQ,OAAO/P,EAAE+P,OAAO/P,EAAED,EAAE,KAAK,CAACC,EAAEA,EAAE+P,MAAM,CAAChQ,EAAEC,CAAC,CAACq8B,GAAGh+B,EAAEC,EAAEwB,EAAE6H,SAASpJ,GAAGD,EAAEA,EAAEgS,KAAK,CAAC,OAAOhS,EAAE,KAAK,EAAE,OAAOwB,EAAExB,EAAEiC,KAAKV,EAAEvB,EAAEgvB,aAAa3lB,SAASonB,GAAGzwB,EAAEC,GAAWsB,EAAEA,EAAVC,EAAEsvB,GAAGtvB,IAAUxB,EAAE0R,OAAO,EAAEqsB,GAAGh+B,EAAEC,EAAEuB,EAAEtB,GACpfD,EAAEgS,MAAM,KAAK,GAAG,OAAgBxQ,EAAEsuB,GAAXvuB,EAAEvB,EAAEiC,KAAYjC,EAAEgvB,cAA6BkP,GAAGn+B,EAAEC,EAAEuB,EAAtBC,EAAEsuB,GAAGvuB,EAAEU,KAAKT,GAAcvB,GAAG,KAAK,GAAG,OAAOo+B,GAAGt+B,EAAEC,EAAEA,EAAEiC,KAAKjC,EAAEgvB,aAAa/uB,GAAG,KAAK,GAAG,OAAOsB,EAAEvB,EAAEiC,KAAKT,EAAExB,EAAEgvB,aAAaxtB,EAAExB,EAAE6uB,cAActtB,EAAEC,EAAEsuB,GAAGvuB,EAAEC,GAAGu9B,GAAGh/B,EAAEC,GAAGA,EAAEkG,IAAI,EAAE0mB,GAAGrrB,IAAIxB,GAAE,EAAGmtB,GAAGltB,IAAID,GAAE,EAAG0wB,GAAGzwB,EAAEC,GAAG+zB,GAAGh0B,EAAEuB,EAAEC,GAAG+yB,GAAGv0B,EAAEuB,EAAEC,EAAEvB,GAAGk/B,GAAG,KAAKn/B,EAAEuB,GAAE,EAAGxB,EAAEE,GAAG,KAAK,GAAG,OAAOghC,GAAGlhC,EAAEC,EAAEC,GAAG,KAAK,GAAG,OAAOs+B,GAAGx+B,EAAEC,EAAEC,GAAG,MAAM+E,MAAMlF,EAAE,IAAIE,EAAEkG,KAAM,EAYxC,IAAIqjC,GAAG,oBAAoBC,YAAYA,YAAY,SAASzpC,GAAG68B,QAAQC,MAAM98B,EAAE,EAAE,SAAS0pC,GAAG1pC,GAAG4B,KAAK+nC,cAAc3pC,CAAC,CACjI,SAAS4pC,GAAG5pC,GAAG4B,KAAK+nC,cAAc3pC,CAAC,CAC5J,SAAS6pC,GAAG7pC,GAAG,SAASA,GAAG,IAAIA,EAAE0K,UAAU,IAAI1K,EAAE0K,UAAU,KAAK1K,EAAE0K,SAAS,CAAC,SAASo/B,GAAG9pC,GAAG,SAASA,GAAG,IAAIA,EAAE0K,UAAU,IAAI1K,EAAE0K,UAAU,KAAK1K,EAAE0K,WAAW,IAAI1K,EAAE0K,UAAU,iCAAiC1K,EAAE2K,WAAW,CAAC,SAASo/B,KAAK,CAExa,SAASC,GAAGhqC,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,IAAIC,EAAExB,EAAEmjC,oBAAoB,GAAG3hC,EAAE,CAAC,IAAIC,EAAED,EAAE,GAAG,oBAAoBD,EAAE,CAAC,IAAIoE,EAAEpE,EAAEA,EAAE,WAAW,IAAIzB,EAAEmpC,GAAGxnC,GAAGkE,EAAE5C,KAAKjD,EAAE,CAAC,CAACkpC,GAAGjpC,EAAE0B,EAAE3B,EAAEyB,EAAE,MAAME,EADxJ,SAAY3B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,GAAGA,EAAE,CAAC,GAAG,oBAAoBD,EAAE,CAAC,IAAIE,EAAEF,EAAEA,EAAE,WAAW,IAAIxB,EAAEmpC,GAAGxnC,GAAGD,EAAEuB,KAAKjD,EAAE,CAAC,CAAC,IAAI2B,EAAEsnC,GAAGhpC,EAAEuB,EAAExB,EAAE,EAAE,MAAK,EAAG,EAAG,GAAG+pC,IAAmF,OAA/E/pC,EAAEqjC,oBAAoB1hC,EAAE3B,EAAEspB,IAAI3nB,EAAEwQ,QAAQuW,GAAG,IAAI1oB,EAAE0K,SAAS1K,EAAE0P,WAAW1P,GAAG0nC,KAAY/lC,CAAC,CAAC,KAAKF,EAAEzB,EAAEyK,WAAWzK,EAAEoK,YAAY3I,GAAG,GAAG,oBAAoBD,EAAE,CAAC,IAAIqE,EAAErE,EAAEA,EAAE,WAAW,IAAIxB,EAAEmpC,GAAGrjC,GAAGD,EAAE5C,KAAKjD,EAAE,CAAC,CAAC,IAAI8F,EAAE+iC,GAAG7oC,EAAE,GAAE,EAAG,KAAK,GAAK,EAAG,EAAG,GAAG+pC,IAA0G,OAAtG/pC,EAAEqjC,oBAAoBv9B,EAAE9F,EAAEspB,IAAIxjB,EAAEqM,QAAQuW,GAAG,IAAI1oB,EAAE0K,SAAS1K,EAAE0P,WAAW1P,GAAG0nC,IAAG,WAAWwB,GAAGjpC,EAAE6F,EAAE5F,EAAEsB,EAAE,IAAUsE,CAAC,CACpUmkC,CAAG/pC,EAAED,EAAED,EAAEyB,EAAED,GAAG,OAAO2nC,GAAGxnC,EAAE,CAHpLioC,GAAG1oC,UAAUkF,OAAOsjC,GAAGxoC,UAAUkF,OAAO,SAASpG,GAAG,IAAIC,EAAE2B,KAAK+nC,cAAc,GAAG,OAAO1pC,EAAE,MAAMgF,MAAMlF,EAAE,MAAMmpC,GAAGlpC,EAAEC,EAAE,KAAK,KAAK,EAAE2pC,GAAG1oC,UAAUgpC,QAAQR,GAAGxoC,UAAUgpC,QAAQ,WAAW,IAAIlqC,EAAE4B,KAAK+nC,cAAc,GAAG,OAAO3pC,EAAE,CAAC4B,KAAK+nC,cAAc,KAAK,IAAI1pC,EAAED,EAAEmX,cAAcuwB,IAAG,WAAWwB,GAAG,KAAKlpC,EAAE,KAAK,KAAK,IAAGC,EAAEqpB,IAAI,IAAI,CAAC,EACzTsgB,GAAG1oC,UAAUipC,2BAA2B,SAASnqC,GAAG,GAAGA,EAAE,CAAC,IAAIC,EAAEyV,KAAK1V,EAAE,CAAC2W,UAAU,KAAKpH,OAAOvP,EAAEiX,SAAShX,GAAG,IAAI,IAAIC,EAAE,EAAEA,EAAEkW,GAAGhW,QAAQ,IAAIH,GAAGA,EAAEmW,GAAGlW,GAAG+W,SAAS/W,KAAKkW,GAAGg0B,OAAOlqC,EAAE,EAAEF,GAAG,IAAIE,GAAG6W,GAAG/W,EAAE,CAAC,EAEXuV,GAAG,SAASvV,GAAG,OAAOA,EAAEmG,KAAK,KAAK,EAAE,IAAIlG,EAAED,EAAEgQ,UAAU,GAAG/P,EAAEkS,QAAQN,cAAcqF,aAAa,CAAC,IAAIhX,EAAEqU,GAAGtU,EAAEwU,cAAc,IAAIvU,IAAIkV,GAAGnV,EAAI,EAAFC,GAAKimC,GAAGlmC,EAAE6S,MAAK,KAAO,EAAF0f,MAAOyP,GAAGnvB,KAAI,IAAI4a,MAAM,CAAC,MAAM,KAAK,GAAGga,IAAG,WAAW,IAAIznC,EAAEsxB,GAAGvxB,EAAE,GAAG,GAAG,OAAOC,EAAE,CAAC,IAAIC,EAAEuzB,KAAIE,GAAG1zB,EAAED,EAAE,EAAEE,EAAE,CAAC,IAAGmpC,GAAGrpC,EAAE,GAAG,EAC/bwV,GAAG,SAASxV,GAAG,GAAG,KAAKA,EAAEmG,IAAI,CAAC,IAAIlG,EAAEsxB,GAAGvxB,EAAE,WAAW,GAAG,OAAOC,EAAa0zB,GAAG1zB,EAAED,EAAE,UAAXyzB,MAAwB4V,GAAGrpC,EAAE,UAAU,CAAC,EAAEyV,GAAG,SAASzV,GAAG,GAAG,KAAKA,EAAEmG,IAAI,CAAC,IAAIlG,EAAEyzB,GAAG1zB,GAAGE,EAAEqxB,GAAGvxB,EAAEC,GAAG,GAAG,OAAOC,EAAayzB,GAAGzzB,EAAEF,EAAEC,EAAXwzB,MAAgB4V,GAAGrpC,EAAEC,EAAE,CAAC,EAAEyV,GAAG,WAAW,OAAOL,EAAC,EAAEM,GAAG,SAAS3V,EAAEC,GAAG,IAAIC,EAAEmV,GAAE,IAAI,OAAOA,GAAErV,EAAEC,GAAG,CAAC,QAAQoV,GAAEnV,CAAC,CAAC,EAClSyP,GAAG,SAAS3P,EAAEC,EAAEC,GAAG,OAAOD,GAAG,IAAK,QAAyB,GAAjBuI,EAAGxI,EAAEE,GAAGD,EAAEC,EAAE+F,KAAQ,UAAU/F,EAAEgC,MAAM,MAAMjC,EAAE,CAAC,IAAIC,EAAEF,EAAEE,EAAEwP,YAAYxP,EAAEA,EAAEwP,WAAsF,IAA3ExP,EAAEA,EAAEmqC,iBAAiB,cAAcC,KAAKC,UAAU,GAAGtqC,GAAG,mBAAuBA,EAAE,EAAEA,EAAEC,EAAEE,OAAOH,IAAI,CAAC,IAAIuB,EAAEtB,EAAED,GAAG,GAAGuB,IAAIxB,GAAGwB,EAAEgpC,OAAOxqC,EAAEwqC,KAAK,CAAC,IAAI/oC,EAAEwO,GAAGzO,GAAG,IAAIC,EAAE,MAAMwD,MAAMlF,EAAE,KAAK0H,EAAGjG,GAAGgH,EAAGhH,EAAEC,EAAE,CAAC,CAAC,CAAC,MAAM,IAAK,WAAW+H,GAAGxJ,EAAEE,GAAG,MAAM,IAAK,SAAmB,OAAVD,EAAEC,EAAEyH,QAAeoB,GAAG/I,IAAIE,EAAEshC,SAASvhC,GAAE,GAAI,EAAEoQ,GAAGo3B,GAAGn3B,GAAGo3B,GACpa,IAAI+C,GAAG,CAACC,uBAAsB,EAAGC,OAAO,CAAC56B,GAAGyS,GAAGvS,GAAGC,GAAGE,GAAGq3B,KAAKmD,GAAG,CAACC,wBAAwB7zB,GAAG8zB,WAAW,EAAEC,QAAQ,SAASC,oBAAoB,aAC1IC,GAAG,CAACH,WAAWF,GAAGE,WAAWC,QAAQH,GAAGG,QAAQC,oBAAoBJ,GAAGI,oBAAoBE,eAAeN,GAAGM,eAAeC,kBAAkB,KAAKC,4BAA4B,KAAKC,4BAA4B,KAAKC,cAAc,KAAKC,wBAAwB,KAAKC,wBAAwB,KAAKC,gBAAgB,KAAKC,mBAAmB,KAAKC,eAAe,KAAKC,qBAAqBnoC,EAAGyzB,uBAAuB2U,wBAAwB,SAAS7rC,GAAW,OAAO,QAAfA,EAAEgS,GAAGhS,IAAmB,KAAKA,EAAEgQ,SAAS,EAAE66B,wBAAwBD,GAAGC,yBARjN,WAAc,OAAO,IAAI,EASpUiB,4BAA4B,KAAKC,gBAAgB,KAAKC,aAAa,KAAKC,kBAAkB,KAAKC,gBAAgB,KAAKC,kBAAkB,kCAAkC,GAAG,qBAAqBC,+BAA+B,CAAC,IAAIC,GAAGD,+BAA+B,IAAIC,GAAGC,YAAYD,GAAGE,cAAc,IAAI34B,GAAGy4B,GAAGG,OAAOvB,IAAIp3B,GAAGw4B,EAAE,CAAC,MAAMrsC,IAAG,CAAC,CAACysC,EAAQ/oC,mDAAmD+mC,GAC9YgC,EAAQC,aAAa,SAAS1sC,EAAEC,GAAG,IAAIC,EAAE,EAAEC,UAAUC,aAAQ,IAASD,UAAU,GAAGA,UAAU,GAAG,KAAK,IAAI0pC,GAAG5pC,GAAG,MAAMgF,MAAMlF,EAAE,MAAM,OAbuH,SAAYC,EAAEC,EAAEC,GAAG,IAAIsB,EAAE,EAAErB,UAAUC,aAAQ,IAASD,UAAU,GAAGA,UAAU,GAAG,KAAK,MAAM,CAACmG,SAASxC,EAAGqa,IAAI,MAAM3c,EAAE,KAAK,GAAGA,EAAE8H,SAAStJ,EAAEmX,cAAclX,EAAE01B,eAAez1B,EAAE,CAa1RysC,CAAG3sC,EAAEC,EAAE,KAAKC,EAAE,EAAEusC,EAAQG,WAAW,SAAS5sC,EAAEC,GAAG,IAAI4pC,GAAG7pC,GAAG,MAAMiF,MAAMlF,EAAE,MAAM,IAAIG,GAAE,EAAGsB,EAAE,GAAGC,EAAE+nC,GAA4P,OAAzP,OAAOvpC,QAAG,IAASA,KAAI,IAAKA,EAAE4sC,sBAAsB3sC,GAAE,QAAI,IAASD,EAAEs8B,mBAAmB/6B,EAAEvB,EAAEs8B,uBAAkB,IAASt8B,EAAEkoC,qBAAqB1mC,EAAExB,EAAEkoC,qBAAqBloC,EAAE4oC,GAAG7oC,EAAE,GAAE,EAAG,KAAK,EAAKE,EAAE,EAAGsB,EAAEC,GAAGzB,EAAEspB,IAAIrpB,EAAEkS,QAAQuW,GAAG,IAAI1oB,EAAE0K,SAAS1K,EAAE0P,WAAW1P,GAAU,IAAI0pC,GAAGzpC,EAAE,EACrfwsC,EAAQK,YAAY,SAAS9sC,GAAG,GAAG,MAAMA,EAAE,OAAO,KAAK,GAAG,IAAIA,EAAE0K,SAAS,OAAO1K,EAAE,IAAIC,EAAED,EAAEuzB,gBAAgB,QAAG,IAAStzB,EAAE,CAAC,GAAG,oBAAoBD,EAAEoG,OAAO,MAAMnB,MAAMlF,EAAE,MAAiC,MAA3BC,EAAEiB,OAAO6M,KAAK9N,GAAGo1B,KAAK,KAAWnwB,MAAMlF,EAAE,IAAIC,GAAI,CAAqC,OAA5BA,EAAE,QAAVA,EAAEgS,GAAG/R,IAAc,KAAKD,EAAEgQ,SAAkB,EAAEy8B,EAAQM,UAAU,SAAS/sC,GAAG,OAAO0nC,GAAG1nC,EAAE,EAAEysC,EAAQO,QAAQ,SAAShtC,EAAEC,EAAEC,GAAG,IAAI4pC,GAAG7pC,GAAG,MAAMgF,MAAMlF,EAAE,MAAM,OAAOiqC,GAAG,KAAKhqC,EAAEC,GAAE,EAAGC,EAAE,EAC/YusC,EAAQQ,YAAY,SAASjtC,EAAEC,EAAEC,GAAG,IAAI2pC,GAAG7pC,GAAG,MAAMiF,MAAMlF,EAAE,MAAM,IAAIyB,EAAE,MAAMtB,GAAGA,EAAEgtC,iBAAiB,KAAKzrC,GAAE,EAAGC,EAAE,GAAGC,EAAE6nC,GAAyO,GAAtO,OAAOtpC,QAAG,IAASA,KAAI,IAAKA,EAAE2sC,sBAAsBprC,GAAE,QAAI,IAASvB,EAAEq8B,mBAAmB76B,EAAExB,EAAEq8B,uBAAkB,IAASr8B,EAAEioC,qBAAqBxmC,EAAEzB,EAAEioC,qBAAqBloC,EAAEgpC,GAAGhpC,EAAE,KAAKD,EAAE,EAAE,MAAME,EAAEA,EAAE,KAAKuB,EAAE,EAAGC,EAAEC,GAAG3B,EAAEspB,IAAIrpB,EAAEkS,QAAQuW,GAAG1oB,GAAMwB,EAAE,IAAIxB,EAAE,EAAEA,EAAEwB,EAAEpB,OAAOJ,IAA2ByB,GAAhBA,GAAPvB,EAAEsB,EAAExB,IAAOmtC,aAAgBjtC,EAAEktC,SAAS,MAAMntC,EAAE2oC,gCAAgC3oC,EAAE2oC,gCAAgC,CAAC1oC,EAAEuB,GAAGxB,EAAE2oC,gCAAgCz4B,KAAKjQ,EACvhBuB,GAAG,OAAO,IAAImoC,GAAG3pC,EAAE,EAAEwsC,EAAQrmC,OAAO,SAASpG,EAAEC,EAAEC,GAAG,IAAI4pC,GAAG7pC,GAAG,MAAMgF,MAAMlF,EAAE,MAAM,OAAOiqC,GAAG,KAAKhqC,EAAEC,GAAE,EAAGC,EAAE,EAAEusC,EAAQY,uBAAuB,SAASrtC,GAAG,IAAI8pC,GAAG9pC,GAAG,MAAMiF,MAAMlF,EAAE,KAAK,QAAOC,EAAEqjC,sBAAqBqE,IAAG,WAAWsC,GAAG,KAAK,KAAKhqC,GAAE,GAAG,WAAWA,EAAEqjC,oBAAoB,KAAKrjC,EAAEspB,IAAI,IAAI,GAAE,KAAG,EAAM,EAAEmjB,EAAQa,wBAAwB7F,GAC/UgF,EAAQc,oCAAoC,SAASvtC,EAAEC,EAAEC,EAAEsB,GAAG,IAAIsoC,GAAG5pC,GAAG,MAAM+E,MAAMlF,EAAE,MAAM,GAAG,MAAMC,QAAG,IAASA,EAAEuzB,gBAAgB,MAAMtuB,MAAMlF,EAAE,KAAK,OAAOiqC,GAAGhqC,EAAEC,EAAEC,GAAE,EAAGsB,EAAE,EAAEirC,EAAQ1B,QAAQ,sDChU7L,IAAI/5B,EAAInR,EAAQ,KAEd4sC,EAAQG,WAAa57B,EAAE47B,WACvBH,EAAQQ,YAAcj8B,EAAEi8B,kCCH1B,SAASO,IAEP,GAC4C,qBAAnCpB,gCAC4C,oBAA5CA,+BAA+BoB,SAcxC,IAEEpB,+BAA+BoB,SAASA,EAC1C,CAAE,MAAOC,GAGP5Q,QAAQC,MAAM2Q,EAChB,CACF,CAKED,GACAE,EAAOjB,QAAU,EAAjBiB,0BCzBW,IAAIhsC,EAAE7B,EAAQ,KAASiG,EAAElC,OAAOC,IAAI,iBAAiB+B,EAAEhC,OAAOC,IAAI,kBAAkBmN,EAAE/P,OAAOC,UAAUC,eAAe2nB,EAAEpnB,EAAEgC,mDAAmDq6B,kBAAkBh+B,EAAE,CAACoe,KAAI,EAAG6W,KAAI,EAAG2Y,QAAO,EAAGC,UAAS,GAChP,SAAShb,EAAE1yB,EAAEF,EAAE2B,GAAG,IAAI1B,EAAEuB,EAAE,CAAC,EAAEC,EAAE,KAAKoE,EAAE,KAAiF,IAAI5F,UAAhF,IAAS0B,IAAIF,EAAE,GAAGE,QAAG,IAAS3B,EAAEme,MAAM1c,EAAE,GAAGzB,EAAEme,UAAK,IAASne,EAAEg1B,MAAMnvB,EAAE7F,EAAEg1B,KAAch1B,EAAEgR,EAAE/N,KAAKjD,EAAEC,KAAKF,EAAEoB,eAAelB,KAAKuB,EAAEvB,GAAGD,EAAEC,IAAI,GAAGC,GAAGA,EAAE8vB,aAAa,IAAI/vB,KAAKD,EAAEE,EAAE8vB,kBAAe,IAASxuB,EAAEvB,KAAKuB,EAAEvB,GAAGD,EAAEC,IAAI,MAAM,CAACqG,SAASR,EAAE5D,KAAKhC,EAAEie,IAAI1c,EAAEuzB,IAAInvB,EAAE4uB,MAAMjzB,EAAEyzB,OAAOnM,EAAE3W,QAAQ,CAACs6B,EAAQoB,SAASjoC,EAAE6mC,EAAQqB,IAAIlb,EAAE6Z,EAAQsB,KAAKnb,qBCD7V,IAAIhtB,EAAEhC,OAAOC,IAAI,iBAAiBilB,EAAEllB,OAAOC,IAAI,gBAAgB9D,EAAE6D,OAAOC,IAAI,kBAAkB+uB,EAAEhvB,OAAOC,IAAI,qBAAqBgvB,EAAEjvB,OAAOC,IAAI,kBAAkBklB,EAAEnlB,OAAOC,IAAI,kBAAkBqlB,EAAEtlB,OAAOC,IAAI,iBAAiBtC,EAAEqC,OAAOC,IAAI,qBAAqBslB,EAAEvlB,OAAOC,IAAI,kBAAkBolB,EAAErlB,OAAOC,IAAI,cAAcivB,EAAElvB,OAAOC,IAAI,cAAcxB,EAAEuB,OAAOe,SACzW,IAAImO,EAAE,CAACwgB,UAAU,WAAW,OAAM,CAAE,EAAEO,mBAAmB,WAAW,EAAED,oBAAoB,WAAW,EAAEJ,gBAAgB,WAAW,GAAGne,EAAEpU,OAAO8D,OAAOojB,EAAE,CAAC,EAAE,SAASgE,EAAEnsB,EAAEC,EAAEwB,GAAGG,KAAK6yB,MAAMz0B,EAAE4B,KAAKovB,QAAQ/wB,EAAE2B,KAAKuxB,KAAKhL,EAAEvmB,KAAKwyB,QAAQ3yB,GAAGqR,CAAC,CACwI,SAASsW,IAAI,CAAyB,SAASgD,EAAEpsB,EAAEC,EAAEwB,GAAGG,KAAK6yB,MAAMz0B,EAAE4B,KAAKovB,QAAQ/wB,EAAE2B,KAAKuxB,KAAKhL,EAAEvmB,KAAKwyB,QAAQ3yB,GAAGqR,CAAC,CADxPqZ,EAAEjrB,UAAUunC,iBAAiB,CAAC,EACpQtc,EAAEjrB,UAAU8sC,SAAS,SAAShuC,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,oBAAoBA,GAAG,MAAMA,EAAE,MAAMiF,MAAM,yHAAyHrD,KAAKwyB,QAAQZ,gBAAgB5xB,KAAK5B,EAAEC,EAAE,WAAW,EAAEksB,EAAEjrB,UAAU+sC,YAAY,SAASjuC,GAAG4B,KAAKwyB,QAAQP,mBAAmBjyB,KAAK5B,EAAE,cAAc,EAAgBopB,EAAEloB,UAAUirB,EAAEjrB,UAAsF,IAAIorB,EAAEF,EAAElrB,UAAU,IAAIkoB,EACrfkD,EAAErlB,YAAYmlB,EAAE/W,EAAEiX,EAAEH,EAAEjrB,WAAWorB,EAAE0H,sBAAqB,EAAG,IAAItF,EAAE7lB,MAAMC,QAAQkgB,EAAE/nB,OAAOC,UAAUC,eAAeqxB,EAAE,CAACrgB,QAAQ,MAAMshB,EAAE,CAACtV,KAAI,EAAG6W,KAAI,EAAG2Y,QAAO,EAAGC,UAAS,GACtK,SAASjX,EAAE32B,EAAEC,EAAEwB,GAAG,IAAID,EAAEtB,EAAE,CAAC,EAAE4F,EAAE,KAAKD,EAAE,KAAK,GAAG,MAAM5F,EAAE,IAAIuB,UAAK,IAASvB,EAAE+0B,MAAMnvB,EAAE5F,EAAE+0B,UAAK,IAAS/0B,EAAEke,MAAMrY,EAAE,GAAG7F,EAAEke,KAAKle,EAAE+oB,EAAE/lB,KAAKhD,EAAEuB,KAAKiyB,EAAEtyB,eAAeK,KAAKtB,EAAEsB,GAAGvB,EAAEuB,IAAI,IAAIG,EAAExB,UAAUC,OAAO,EAAE,GAAG,IAAIuB,EAAEzB,EAAEoJ,SAAS7H,OAAO,GAAG,EAAEE,EAAE,CAAC,IAAI,IAAID,EAAEmH,MAAMlH,GAAGqP,EAAE,EAAEA,EAAErP,EAAEqP,IAAItP,EAAEsP,GAAG7Q,UAAU6Q,EAAE,GAAG9Q,EAAEoJ,SAAS5H,CAAC,CAAC,GAAG1B,GAAGA,EAAEgwB,aAAa,IAAIxuB,KAAKG,EAAE3B,EAAEgwB,kBAAe,IAAS9vB,EAAEsB,KAAKtB,EAAEsB,GAAGG,EAAEH,IAAI,MAAM,CAAC8E,SAASV,EAAE1D,KAAKlC,EAAEme,IAAIrY,EAAEkvB,IAAInvB,EAAE4uB,MAAMv0B,EAAE+0B,OAAOzC,EAAErgB,QAAQ,CAChV,SAASmlB,EAAEt3B,GAAG,MAAM,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEsG,WAAWV,CAAC,CAAoG,IAAI2xB,EAAE,OAAO,SAASK,EAAE53B,EAAEC,GAAG,MAAM,kBAAkBD,GAAG,OAAOA,GAAG,MAAMA,EAAEme,IAA7K,SAAgBne,GAAG,IAAIC,EAAE,CAAC,IAAI,KAAK,IAAI,MAAM,MAAM,IAAID,EAAEuD,QAAQ,SAAQ,SAASvD,GAAG,OAAOC,EAAED,EAAE,GAAE,CAA+EkuC,CAAO,GAAGluC,EAAEme,KAAKle,EAAEiK,SAAS,GAAG,CAC/W,SAASsvB,EAAEx5B,EAAEC,EAAEwB,EAAED,EAAEtB,GAAG,IAAI4F,SAAS9F,EAAK,cAAc8F,GAAG,YAAYA,IAAE9F,EAAE,MAAK,IAAI6F,GAAE,EAAG,GAAG,OAAO7F,EAAE6F,GAAE,OAAQ,OAAOC,GAAG,IAAK,SAAS,IAAK,SAASD,GAAE,EAAG,MAAM,IAAK,SAAS,OAAO7F,EAAEsG,UAAU,KAAKV,EAAE,KAAKkjB,EAAEjjB,GAAE,GAAI,GAAGA,EAAE,OAAW3F,EAAEA,EAAN2F,EAAE7F,GAASA,EAAE,KAAKwB,EAAE,IAAIo2B,EAAE/xB,EAAE,GAAGrE,EAAEktB,EAAExuB,IAAIuB,EAAE,GAAG,MAAMzB,IAAIyB,EAAEzB,EAAEuD,QAAQg0B,EAAE,OAAO,KAAKiC,EAAEt5B,EAAED,EAAEwB,EAAE,IAAG,SAASzB,GAAG,OAAOA,CAAC,KAAI,MAAME,IAAIo3B,EAAEp3B,KAAKA,EADnW,SAAWF,EAAEC,GAAG,MAAM,CAACqG,SAASV,EAAE1D,KAAKlC,EAAEkC,KAAKic,IAAIle,EAAE+0B,IAAIh1B,EAAEg1B,IAAIP,MAAMz0B,EAAEy0B,MAAMQ,OAAOj1B,EAAEi1B,OAAO,CACyQoC,CAAEn3B,EAAEuB,IAAIvB,EAAEie,KAAKtY,GAAGA,EAAEsY,MAAMje,EAAEie,IAAI,IAAI,GAAGje,EAAEie,KAAK5a,QAAQg0B,EAAE,OAAO,KAAKv3B,IAAIC,EAAEkQ,KAAKjQ,IAAI,EAAyB,GAAvB2F,EAAE,EAAErE,EAAE,KAAKA,EAAE,IAAIA,EAAE,IAAOktB,EAAE1uB,GAAG,IAAI,IAAI2B,EAAE,EAAEA,EAAE3B,EAAEI,OAAOuB,IAAI,CAC/e,IAAID,EAAEF,EAAEo2B,EADwe9xB,EACrf9F,EAAE2B,GAAeA,GAAGkE,GAAG2zB,EAAE1zB,EAAE7F,EAAEwB,EAAEC,EAAExB,EAAE,MAAM,GAAGwB,EAPsU,SAAW1B,GAAG,OAAG,OAAOA,GAAG,kBAAkBA,EAAS,KAAsC,oBAAjCA,EAAEqC,GAAGrC,EAAEqC,IAAIrC,EAAE,eAA0CA,EAAE,IAAI,CAO5b8E,CAAE9E,GAAG,oBAAoB0B,EAAE,IAAI1B,EAAE0B,EAAEuB,KAAKjD,GAAG2B,EAAE,IAAImE,EAAE9F,EAAEkxB,QAAQ4E,MAA6BjwB,GAAG2zB,EAA1B1zB,EAAEA,EAAE6B,MAA0B1H,EAAEwB,EAAtBC,EAAEF,EAAEo2B,EAAE9xB,EAAEnE,KAAkBzB,QAAQ,GAAG,WAAW4F,EAAE,MAAM7F,EAAEme,OAAOpe,GAAGiF,MAAM,mDAAmD,oBAAoBhF,EAAE,qBAAqBgB,OAAO6M,KAAK9N,GAAGo1B,KAAK,MAAM,IAAIn1B,GAAG,6EAA6E,OAAO4F,CAAC,CACzZ,SAASu7B,EAAEphC,EAAEC,EAAEwB,GAAG,GAAG,MAAMzB,EAAE,OAAOA,EAAE,IAAIwB,EAAE,GAAGtB,EAAE,EAAmD,OAAjDs5B,EAAEx5B,EAAEwB,EAAE,GAAG,IAAG,SAASxB,GAAG,OAAOC,EAAEgD,KAAKxB,EAAEzB,EAAEE,IAAI,IAAUsB,CAAC,CAAC,SAASwgC,EAAEhiC,GAAG,IAAI,IAAIA,EAAEmuC,QAAQ,CAAC,IAAIluC,EAAED,EAAEouC,SAAQnuC,EAAEA,KAAMmrB,MAAK,SAASnrB,GAAM,IAAID,EAAEmuC,UAAU,IAAInuC,EAAEmuC,UAAQnuC,EAAEmuC,QAAQ,EAAEnuC,EAAEouC,QAAQnuC,EAAC,IAAE,SAASA,GAAM,IAAID,EAAEmuC,UAAU,IAAInuC,EAAEmuC,UAAQnuC,EAAEmuC,QAAQ,EAAEnuC,EAAEouC,QAAQnuC,EAAC,KAAI,IAAID,EAAEmuC,UAAUnuC,EAAEmuC,QAAQ,EAAEnuC,EAAEouC,QAAQnuC,EAAE,CAAC,GAAG,IAAID,EAAEmuC,QAAQ,OAAOnuC,EAAEouC,QAAQC,QAAQ,MAAMruC,EAAEouC,OAAQ,CAC5Z,IAAI/L,EAAE,CAAClwB,QAAQ,MAAMqwB,EAAE,CAACxqB,WAAW,MAAM0qB,EAAE,CAACxL,uBAAuBmL,EAAExqB,wBAAwB2qB,EAAEzE,kBAAkBvL,GAAGia,EAAQ6B,SAAS,CAACC,IAAInN,EAAE7+B,QAAQ,SAASvC,EAAEC,EAAEwB,GAAG2/B,EAAEphC,GAAE,WAAWC,EAAE8Q,MAAMnP,KAAKzB,UAAU,GAAEsB,EAAE,EAAE+sC,MAAM,SAASxuC,GAAG,IAAIC,EAAE,EAAuB,OAArBmhC,EAAEphC,GAAE,WAAWC,GAAG,IAAUA,CAAC,EAAEwuC,QAAQ,SAASzuC,GAAG,OAAOohC,EAAEphC,GAAE,SAASA,GAAG,OAAOA,CAAC,KAAI,EAAE,EAAE0uC,KAAK,SAAS1uC,GAAG,IAAIs3B,EAAEt3B,GAAG,MAAMiF,MAAM,yEAAyE,OAAOjF,CAAC,GAAGysC,EAAQvZ,UAAU/G,EAAEsgB,EAAQoB,SAAS9tC,EACne0sC,EAAQkC,SAAS9b,EAAE4Z,EAAQmC,cAAcxiB,EAAEqgB,EAAQoC,WAAWjc,EAAE6Z,EAAQqC,SAAS3lB,EAAEsjB,EAAQ/oC,mDAAmDg/B,EAC9I+J,EAAQsC,aAAa,SAAS/uC,EAAEC,EAAEwB,GAAG,GAAG,OAAOzB,QAAG,IAASA,EAAE,MAAMiF,MAAM,iFAAiFjF,EAAE,KAAK,IAAIwB,EAAE6T,EAAE,CAAC,EAAErV,EAAEy0B,OAAOv0B,EAAEF,EAAEme,IAAIrY,EAAE9F,EAAEg1B,IAAInvB,EAAE7F,EAAEi1B,OAAO,GAAG,MAAMh1B,EAAE,CAAoE,QAAnE,IAASA,EAAE+0B,MAAMlvB,EAAE7F,EAAE+0B,IAAInvB,EAAE2sB,EAAErgB,cAAS,IAASlS,EAAEke,MAAMje,EAAE,GAAGD,EAAEke,KAAQne,EAAEkC,MAAMlC,EAAEkC,KAAK8tB,aAAa,IAAIruB,EAAE3B,EAAEkC,KAAK8tB,aAAa,IAAItuB,KAAKzB,EAAE+oB,EAAE/lB,KAAKhD,EAAEyB,KAAK+xB,EAAEtyB,eAAeO,KAAKF,EAAEE,QAAG,IAASzB,EAAEyB,SAAI,IAASC,EAAEA,EAAED,GAAGzB,EAAEyB,GAAG,CAAC,IAAIA,EAAEvB,UAAUC,OAAO,EAAE,GAAG,IAAIsB,EAAEF,EAAE8H,SAAS7H,OAAO,GAAG,EAAEC,EAAE,CAACC,EAAEkH,MAAMnH,GACrf,IAAI,IAAIsP,EAAE,EAAEA,EAAEtP,EAAEsP,IAAIrP,EAAEqP,GAAG7Q,UAAU6Q,EAAE,GAAGxP,EAAE8H,SAAS3H,CAAC,CAAC,MAAM,CAAC2E,SAASV,EAAE1D,KAAKlC,EAAEkC,KAAKic,IAAIje,EAAE80B,IAAIlvB,EAAE2uB,MAAMjzB,EAAEyzB,OAAOpvB,EAAE,EAAE4mC,EAAQuC,cAAc,SAAShvC,GAAqK,OAAlKA,EAAE,CAACsG,SAAS4iB,EAAEqH,cAAcvwB,EAAEivC,eAAejvC,EAAEkvC,aAAa,EAAEC,SAAS,KAAKC,SAAS,KAAKC,cAAc,KAAKC,YAAY,OAAQH,SAAS,CAAC7oC,SAASyiB,EAAExiB,SAASvG,GAAUA,EAAEovC,SAASpvC,CAAC,EAAEysC,EAAQ1rC,cAAc41B,EAAE8V,EAAQ8C,cAAc,SAASvvC,GAAG,IAAIC,EAAE02B,EAAEhO,KAAK,KAAK3oB,GAAY,OAATC,EAAEiC,KAAKlC,EAASC,CAAC,EAAEwsC,EAAQ+C,UAAU,WAAW,MAAM,CAACr9B,QAAQ,KAAK,EAC9ds6B,EAAQgD,WAAW,SAASzvC,GAAG,MAAM,CAACsG,SAAS/E,EAAE6E,OAAOpG,EAAE,EAAEysC,EAAQiD,eAAepY,EAAEmV,EAAQkD,KAAK,SAAS3vC,GAAG,MAAM,CAACsG,SAASwsB,EAAEtsB,SAAS,CAAC2nC,SAAS,EAAEC,QAAQpuC,GAAGyG,MAAMu7B,EAAE,EAAEyK,EAAQmD,KAAK,SAAS5vC,EAAEC,GAAG,MAAM,CAACqG,SAAS2iB,EAAE/mB,KAAKlC,EAAEq+B,aAAQ,IAASp+B,EAAE,KAAKA,EAAE,EAAEwsC,EAAQoD,gBAAgB,SAAS7vC,GAAG,IAAIC,EAAEuiC,EAAExqB,WAAWwqB,EAAExqB,WAAW,CAAC,EAAE,IAAIhY,GAAG,CAAC,QAAQwiC,EAAExqB,WAAW/X,CAAC,CAAC,EAAEwsC,EAAQqD,aAAa,WAAW,MAAM7qC,MAAM,2DAA4D,EAC1cwnC,EAAQnR,YAAY,SAASt7B,EAAEC,GAAG,OAAOoiC,EAAElwB,QAAQmpB,YAAYt7B,EAAEC,EAAE,EAAEwsC,EAAQlR,WAAW,SAASv7B,GAAG,OAAOqiC,EAAElwB,QAAQopB,WAAWv7B,EAAE,EAAEysC,EAAQzQ,cAAc,WAAW,EAAEyQ,EAAQxQ,iBAAiB,SAASj8B,GAAG,OAAOqiC,EAAElwB,QAAQ8pB,iBAAiBj8B,EAAE,EAAEysC,EAAQjR,UAAU,SAASx7B,EAAEC,GAAG,OAAOoiC,EAAElwB,QAAQqpB,UAAUx7B,EAAEC,EAAE,EAAEwsC,EAAQpQ,MAAM,WAAW,OAAOgG,EAAElwB,QAAQkqB,OAAO,EAAEoQ,EAAQhR,oBAAoB,SAASz7B,EAAEC,EAAEwB,GAAG,OAAO4gC,EAAElwB,QAAQspB,oBAAoBz7B,EAAEC,EAAEwB,EAAE,EAC7bgrC,EAAQ/Q,mBAAmB,SAAS17B,EAAEC,GAAG,OAAOoiC,EAAElwB,QAAQupB,mBAAmB17B,EAAEC,EAAE,EAAEwsC,EAAQ9Q,gBAAgB,SAAS37B,EAAEC,GAAG,OAAOoiC,EAAElwB,QAAQwpB,gBAAgB37B,EAAEC,EAAE,EAAEwsC,EAAQ7Q,QAAQ,SAAS57B,EAAEC,GAAG,OAAOoiC,EAAElwB,QAAQypB,QAAQ57B,EAAEC,EAAE,EAAEwsC,EAAQ5Q,WAAW,SAAS77B,EAAEC,EAAEwB,GAAG,OAAO4gC,EAAElwB,QAAQ0pB,WAAW77B,EAAEC,EAAEwB,EAAE,EAAEgrC,EAAQ3Q,OAAO,SAAS97B,GAAG,OAAOqiC,EAAElwB,QAAQ2pB,OAAO97B,EAAE,EAAEysC,EAAQ1Q,SAAS,SAAS/7B,GAAG,OAAOqiC,EAAElwB,QAAQ4pB,SAAS/7B,EAAE,EAAEysC,EAAQrQ,qBAAqB,SAASp8B,EAAEC,EAAEwB,GAAG,OAAO4gC,EAAElwB,QAAQiqB,qBAAqBp8B,EAAEC,EAAEwB,EAAE,EAC/egrC,EAAQvQ,cAAc,WAAW,OAAOmG,EAAElwB,QAAQ+pB,eAAe,EAAEuQ,EAAQ1B,QAAQ,8BCtBjF2C,EAAOjB,QAAU,EAAjBiB,0BCAAA,EAAOjB,QAAU,EAAjBiB,wBCMW,SAAShsC,EAAE1B,EAAEC,GAAG,IAAIC,EAAEF,EAAEI,OAAOJ,EAAEmQ,KAAKlQ,GAAGD,EAAE,KAAK,EAAEE,GAAG,CAAC,IAAIsB,EAAEtB,EAAE,IAAI,EAAEuB,EAAEzB,EAAEwB,GAAG,KAAG,EAAEG,EAAEF,EAAExB,IAA0B,MAAMD,EAA7BA,EAAEwB,GAAGvB,EAAED,EAAEE,GAAGuB,EAAEvB,EAAEsB,CAAc,CAAC,CAAC,SAASqE,EAAE7F,GAAG,OAAO,IAAIA,EAAEI,OAAO,KAAKJ,EAAE,EAAE,CAAC,SAAS8F,EAAE9F,GAAG,GAAG,IAAIA,EAAEI,OAAO,OAAO,KAAK,IAAIH,EAAED,EAAE,GAAGE,EAAEF,EAAE+vC,MAAM,GAAG7vC,IAAID,EAAE,CAACD,EAAE,GAAGE,EAAEF,EAAE,IAAI,IAAIwB,EAAE,EAAEC,EAAEzB,EAAEI,OAAO+oB,EAAE1nB,IAAI,EAAED,EAAE2nB,GAAG,CAAC,IAAInY,EAAE,GAAGxP,EAAE,GAAG,EAAE6T,EAAErV,EAAEgR,GAAG8X,EAAE9X,EAAE,EAAEiY,EAAEjpB,EAAE8oB,GAAG,GAAG,EAAEnnB,EAAE0T,EAAEnV,GAAG4oB,EAAErnB,GAAG,EAAEE,EAAEsnB,EAAE5T,IAAIrV,EAAEwB,GAAGynB,EAAEjpB,EAAE8oB,GAAG5oB,EAAEsB,EAAEsnB,IAAI9oB,EAAEwB,GAAG6T,EAAErV,EAAEgR,GAAG9Q,EAAEsB,EAAEwP,OAAQ,MAAG8X,EAAErnB,GAAG,EAAEE,EAAEsnB,EAAE/oB,IAA0B,MAAMF,EAA7BA,EAAEwB,GAAGynB,EAAEjpB,EAAE8oB,GAAG5oB,EAAEsB,EAAEsnB,CAAc,EAAC,CAAC,OAAO7oB,CAAC,CAC3c,SAAS0B,EAAE3B,EAAEC,GAAG,IAAIC,EAAEF,EAAEgwC,UAAU/vC,EAAE+vC,UAAU,OAAO,IAAI9vC,EAAEA,EAAEF,EAAEoY,GAAGnY,EAAEmY,EAAE,CAAC,GAAG,kBAAkB63B,aAAa,oBAAoBA,YAAY31B,IAAI,CAAC,IAAI1U,EAAEqqC,YAAYxD,EAAQ15B,aAAa,WAAW,OAAOnN,EAAE0U,KAAK,CAAC,KAAK,CAAC,IAAIva,EAAEsa,KAAKuY,EAAE7yB,EAAEua,MAAMmyB,EAAQ15B,aAAa,WAAW,OAAOhT,EAAEua,MAAMsY,CAAC,CAAC,CAAC,IAAIC,EAAE,GAAG9J,EAAE,GAAGG,EAAE,EAAE3nB,EAAE,KAAKuxB,EAAE,EAAEzwB,GAAE,EAAGyC,GAAE,EAAGgO,GAAE,EAAGqV,EAAE,oBAAoByC,WAAWA,WAAW,KAAKuB,EAAE,oBAAoBrB,aAAaA,aAAa,KAAK1B,EAAE,qBAAqB8mB,aAAaA,aAAa,KACnT,SAAS9jB,EAAEpsB,GAAG,IAAI,IAAIC,EAAE4F,EAAEkjB,GAAG,OAAO9oB,GAAG,CAAC,GAAG,OAAOA,EAAEqyB,SAASxsB,EAAEijB,OAAQ,MAAG9oB,EAAEkwC,WAAWnwC,GAAgD,MAA9C8F,EAAEijB,GAAG9oB,EAAE+vC,UAAU/vC,EAAEmwC,eAAe1uC,EAAEmxB,EAAE5yB,EAAa,CAACA,EAAE4F,EAAEkjB,EAAE,CAAC,CAAC,SAASuD,EAAEtsB,GAAa,GAAV8S,GAAE,EAAGsZ,EAAEpsB,IAAO8E,EAAE,GAAG,OAAOe,EAAEgtB,GAAG/tB,GAAE,EAAG4pB,EAAE1F,OAAO,CAAC,IAAI/oB,EAAE4F,EAAEkjB,GAAG,OAAO9oB,GAAGuyB,EAAElG,EAAErsB,EAAEkwC,UAAUnwC,EAAE,CAAC,CACra,SAASgpB,EAAEhpB,EAAEC,GAAG6E,GAAE,EAAGgO,IAAIA,GAAE,EAAGqZ,EAAEsH,GAAGA,GAAG,GAAGpxB,GAAE,EAAG,IAAInC,EAAE4yB,EAAE,IAAS,IAAL1G,EAAEnsB,GAAOsB,EAAEsE,EAAEgtB,GAAG,OAAOtxB,MAAMA,EAAE6uC,eAAenwC,IAAID,IAAI22B,MAAM,CAAC,IAAIn1B,EAAED,EAAE+wB,SAAS,GAAG,oBAAoB9wB,EAAE,CAACD,EAAE+wB,SAAS,KAAKQ,EAAEvxB,EAAE8uC,cAAc,IAAI5uC,EAAED,EAAED,EAAE6uC,gBAAgBnwC,GAAGA,EAAEwsC,EAAQ15B,eAAe,oBAAoBtR,EAAEF,EAAE+wB,SAAS7wB,EAAEF,IAAIsE,EAAEgtB,IAAI/sB,EAAE+sB,GAAGzG,EAAEnsB,EAAE,MAAM6F,EAAE+sB,GAAGtxB,EAAEsE,EAAEgtB,EAAE,CAAC,GAAG,OAAOtxB,EAAE,IAAI4nB,GAAE,MAAO,CAAC,IAAInY,EAAEnL,EAAEkjB,GAAG,OAAO/X,GAAGwhB,EAAElG,EAAEtb,EAAEm/B,UAAUlwC,GAAGkpB,GAAE,CAAE,CAAC,OAAOA,CAAC,CAAC,QAAQ5nB,EAAE,KAAKuxB,EAAE5yB,EAAEmC,GAAE,CAAE,CAAC,CAD1a,qBAAqBiuC,gBAAW,IAASA,UAAUC,iBAAY,IAASD,UAAUC,WAAWC,gBAAgBF,UAAUC,WAAWC,eAAe7nB,KAAK2nB,UAAUC,YAC2Q,IACzPnP,EAD6P/J,GAAE,EAAGC,EAAE,KAAK7D,GAAG,EAAE8D,EAAE,EAAEK,GAAG,EACvc,SAASjB,IAAI,QAAO8V,EAAQ15B,eAAe6kB,EAAEL,EAAO,CAAC,SAASiC,IAAI,GAAG,OAAOlC,EAAE,CAAC,IAAIt3B,EAAEysC,EAAQ15B,eAAe6kB,EAAE53B,EAAE,IAAIC,GAAE,EAAG,IAAIA,EAAEq3B,GAAE,EAAGt3B,EAAE,CAAC,QAAQC,EAAEmhC,KAAK/J,GAAE,EAAGC,EAAE,KAAK,CAAC,MAAMD,GAAE,CAAE,CAAO,GAAG,oBAAoBjO,EAAEgY,EAAE,WAAWhY,EAAEoQ,EAAE,OAAO,GAAG,qBAAqBiX,eAAe,CAAC,IAAIzO,EAAE,IAAIyO,eAAepO,EAAEL,EAAE0O,MAAM1O,EAAE2O,MAAMC,UAAUpX,EAAE4H,EAAE,WAAWiB,EAAEwO,YAAY,KAAK,CAAC,MAAMzP,EAAE,WAAWjZ,EAAEqR,EAAE,EAAE,EAAE,SAAS9K,EAAE1uB,GAAGs3B,EAAEt3B,EAAEq3B,IAAIA,GAAE,EAAG+J,IAAI,CAAC,SAAS5O,EAAExyB,EAAEC,GAAGwzB,EAAEtL,GAAE,WAAWnoB,EAAEysC,EAAQ15B,eAAe,GAAE9S,EAAE,CAC5dwsC,EAAQ94B,sBAAsB,EAAE84B,EAAQt5B,2BAA2B,EAAEs5B,EAAQh5B,qBAAqB,EAAEg5B,EAAQl5B,wBAAwB,EAAEk5B,EAAQqE,mBAAmB,KAAKrE,EAAQp5B,8BAA8B,EAAEo5B,EAAQh6B,wBAAwB,SAASzS,GAAGA,EAAEsyB,SAAS,IAAI,EAAEma,EAAQsE,2BAA2B,WAAWjsC,GAAGzC,IAAIyC,GAAE,EAAG4pB,EAAE1F,GAAG,EAC1UyjB,EAAQuE,wBAAwB,SAAShxC,GAAG,EAAEA,GAAG,IAAIA,EAAE68B,QAAQC,MAAM,mHAAmHvF,EAAE,EAAEv3B,EAAE+T,KAAKk9B,MAAM,IAAIjxC,GAAG,CAAC,EAAEysC,EAAQx5B,iCAAiC,WAAW,OAAO6f,CAAC,EAAE2Z,EAAQyE,8BAA8B,WAAW,OAAOrrC,EAAEgtB,EAAE,EAAE4Z,EAAQ0E,cAAc,SAASnxC,GAAG,OAAO8yB,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI7yB,EAAE,EAAE,MAAM,QAAQA,EAAE6yB,EAAE,IAAI5yB,EAAE4yB,EAAEA,EAAE7yB,EAAE,IAAI,OAAOD,GAAG,CAAC,QAAQ8yB,EAAE5yB,CAAC,CAAC,EAAEusC,EAAQ2E,wBAAwB,WAAW,EAC9f3E,EAAQ55B,sBAAsB,WAAW,EAAE45B,EAAQ4E,yBAAyB,SAASrxC,EAAEC,GAAG,OAAOD,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,QAAQA,EAAE,EAAE,IAAIE,EAAE4yB,EAAEA,EAAE9yB,EAAE,IAAI,OAAOC,GAAG,CAAC,QAAQ6yB,EAAE5yB,CAAC,CAAC,EAChMusC,EAAQl6B,0BAA0B,SAASvS,EAAEC,EAAEC,GAAG,IAAIsB,EAAEirC,EAAQ15B,eAA8F,OAA/E,kBAAkB7S,GAAG,OAAOA,EAAaA,EAAE,kBAAZA,EAAEA,EAAEoxC,QAA6B,EAAEpxC,EAAEsB,EAAEtB,EAAEsB,EAAGtB,EAAEsB,EAASxB,GAAG,KAAK,EAAE,IAAIyB,GAAG,EAAE,MAAM,KAAK,EAAEA,EAAE,IAAI,MAAM,KAAK,EAAEA,EAAE,WAAW,MAAM,KAAK,EAAEA,EAAE,IAAI,MAAM,QAAQA,EAAE,IAAmN,OAAzMzB,EAAE,CAACoY,GAAG8Q,IAAIoJ,SAASryB,EAAEowC,cAAcrwC,EAAEmwC,UAAUjwC,EAAEkwC,eAAvD3uC,EAAEvB,EAAEuB,EAAoEuuC,WAAW,GAAG9vC,EAAEsB,GAAGxB,EAAEgwC,UAAU9vC,EAAEwB,EAAEqnB,EAAE/oB,GAAG,OAAO6F,EAAEgtB,IAAI7yB,IAAI6F,EAAEkjB,KAAKjW,GAAGqZ,EAAEsH,GAAGA,GAAG,GAAG3gB,GAAE,EAAG0f,EAAElG,EAAEpsB,EAAEsB,MAAMxB,EAAEgwC,UAAUvuC,EAAEC,EAAEmxB,EAAE7yB,GAAG8E,GAAGzC,IAAIyC,GAAE,EAAG4pB,EAAE1F,KAAYhpB,CAAC,EACneysC,EAAQ95B,qBAAqBgkB,EAAE8V,EAAQ8E,sBAAsB,SAASvxC,GAAG,IAAIC,EAAE6yB,EAAE,OAAO,WAAW,IAAI5yB,EAAE4yB,EAAEA,EAAE7yB,EAAE,IAAI,OAAOD,EAAE+Q,MAAMnP,KAAKzB,UAAU,CAAC,QAAQ2yB,EAAE5yB,CAAC,CAAC,CAAC,uBCf7JwtC,EAAOjB,QAAU,EAAjBiB,OCFE8D,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAalF,QAGrB,IAAIiB,EAAS8D,EAAyBE,GAAY,CAGjDjF,QAAS,CAAC,GAOX,OAHAoF,EAAoBH,GAAUhE,EAAQA,EAAOjB,QAASgF,GAG/C/D,EAAOjB,OACf,CAGAgF,EAAoBzgC,EAAI6gC,ECxBxBJ,EAAoBjwC,EAAI,SAASirC,EAASqF,GACzC,IAAI,IAAI3zB,KAAO2zB,EACXL,EAAoBM,EAAED,EAAY3zB,KAASszB,EAAoBM,EAAEtF,EAAStuB,IAC5Eld,OAAOuE,eAAeinC,EAAStuB,EAAK,CAAE/W,YAAY,EAAMF,IAAK4qC,EAAW3zB,IAG3E,ECPAszB,EAAoB/vC,EAAI,CAAC,EAGzB+vC,EAAoBhwC,EAAI,SAASuwC,GAChC,OAAOhnB,QAAQinB,IAAIhxC,OAAO6M,KAAK2jC,EAAoB/vC,GAAGwwC,QAAO,SAASC,EAAUh0B,GAE/E,OADAszB,EAAoB/vC,EAAEyc,GAAK6zB,EAASG,GAC7BA,CACR,GAAG,IACJ,ECPAV,EAAoBvoB,EAAI,SAAS8oB,GAEhC,MAAO,aAAeA,EAAf,oBACR,ECHAP,EAAoBW,SAAW,SAASJ,GAGxC,ECJAP,EAAoBM,EAAI,SAASM,EAAKC,GAAQ,OAAOrxC,OAAOC,UAAUC,eAAe8B,KAAKovC,EAAKC,EAAO,aCAtG,IAAIC,EAAa,CAAC,EACdC,EAAoB,uBAExBf,EAAoB7rC,EAAI,SAASgc,EAAKkU,EAAM3X,EAAK6zB,GAChD,GAAGO,EAAW3wB,GAAQ2wB,EAAW3wB,GAAKzR,KAAK2lB,OAA3C,CACA,IAAI2c,EAAQC,EACZ,QAAWd,IAARzzB,EAEF,IADA,IAAIw0B,EAAU7xC,SAAS8xC,qBAAqB,UACpCC,EAAI,EAAGA,EAAIF,EAAQvyC,OAAQyyC,IAAK,CACvC,IAAIC,EAAIH,EAAQE,GAChB,GAAGC,EAAEC,aAAa,QAAUnxB,GAAOkxB,EAAEC,aAAa,iBAAmBP,EAAoBr0B,EAAK,CAAEs0B,EAASK,EAAG,KAAO,CACpH,CAEGL,IACHC,GAAa,GACbD,EAAS3xC,SAASC,cAAc,WAEzBiyC,QAAU,QACjBP,EAAOQ,QAAU,IACbxB,EAAoByB,IACvBT,EAAOpvC,aAAa,QAASouC,EAAoByB,IAElDT,EAAOpvC,aAAa,eAAgBmvC,EAAoBr0B,GAExDs0B,EAAO9N,IAAM/iB,GAEd2wB,EAAW3wB,GAAO,CAACkU,GACnB,IAAIqd,EAAmB,SAASC,EAAMnxB,GAErCwwB,EAAOY,QAAUZ,EAAOa,OAAS,KACjCxoB,aAAamoB,GACb,IAAIM,EAAUhB,EAAW3wB,GAIzB,UAHO2wB,EAAW3wB,GAClB6wB,EAAO/iC,YAAc+iC,EAAO/iC,WAAWtF,YAAYqoC,GACnDc,GAAWA,EAAQhxC,SAAQ,SAASixC,GAAM,OAAOA,EAAGvxB,EAAQ,IACzDmxB,EAAM,OAAOA,EAAKnxB,EACtB,EACIgxB,EAAUroB,WAAWuoB,EAAiBxqB,KAAK,UAAMipB,EAAW,CAAE1vC,KAAM,UAAWqN,OAAQkjC,IAAW,MACtGA,EAAOY,QAAUF,EAAiBxqB,KAAK,KAAM8pB,EAAOY,SACpDZ,EAAOa,OAASH,EAAiBxqB,KAAK,KAAM8pB,EAAOa,QACnDZ,GAAc5xC,SAAS2yC,KAAKppC,YAAYooC,EApCkB,CAqC3D,KCxCAhB,EAAoB5e,EAAI,SAAS4Z,GACX,qBAAX7oC,QAA0BA,OAAO8vC,aAC1CzyC,OAAOuE,eAAeinC,EAAS7oC,OAAO8vC,YAAa,CAAE/rC,MAAO,WAE7D1G,OAAOuE,eAAeinC,EAAS,aAAc,CAAE9kC,OAAO,GACvD,ECNA8pC,EAAoB1xC,EAAI,eCKxB,IAAI4zC,EAAkB,CACrB,IAAK,GAGNlC,EAAoB/vC,EAAEkyC,EAAI,SAAS5B,EAASG,GAE1C,IAAI0B,EAAqBpC,EAAoBM,EAAE4B,EAAiB3B,GAAW2B,EAAgB3B,QAAWJ,EACtG,GAA0B,IAAvBiC,EAGF,GAAGA,EACF1B,EAAShiC,KAAK0jC,EAAmB,QAC3B,CAGL,IAAIC,EAAU,IAAI9oB,SAAQ,SAASG,EAAS4oB,GAAUF,EAAqBF,EAAgB3B,GAAW,CAAC7mB,EAAS4oB,EAAS,IACzH5B,EAAShiC,KAAK0jC,EAAmB,GAAKC,GAGtC,IAAIlyB,EAAM6vB,EAAoB1xC,EAAI0xC,EAAoBvoB,EAAE8oB,GAEpDlV,EAAQ,IAAI73B,MAgBhBwsC,EAAoB7rC,EAAEgc,GAfH,SAASK,GAC3B,GAAGwvB,EAAoBM,EAAE4B,EAAiB3B,KAEf,KAD1B6B,EAAqBF,EAAgB3B,MACR2B,EAAgB3B,QAAWJ,GACrDiC,GAAoB,CACtB,IAAIG,EAAY/xB,IAAyB,SAAfA,EAAM/f,KAAkB,UAAY+f,EAAM/f,MAChE+xC,EAAUhyB,GAASA,EAAM1S,QAAU0S,EAAM1S,OAAOo1B,IACpD7H,EAAML,QAAU,iBAAmBuV,EAAU,cAAgBgC,EAAY,KAAOC,EAAU,IAC1FnX,EAAM72B,KAAO,iBACb62B,EAAM56B,KAAO8xC,EACblX,EAAMoX,QAAUD,EAChBJ,EAAmB,GAAG/W,EACvB,CAEF,GACyC,SAAWkV,EAASA,EAE/D,CAEH,EAaA,IAAImC,EAAuB,SAASC,EAA4Bv3B,GAC/D,IAKI60B,EAAUM,EALVqC,EAAWx3B,EAAK,GAChBy3B,EAAcz3B,EAAK,GACnB03B,EAAU13B,EAAK,GAGIg2B,EAAI,EAC3B,GAAGwB,EAASG,MAAK,SAASp8B,GAAM,OAA+B,IAAxBu7B,EAAgBv7B,EAAW,IAAI,CACrE,IAAIs5B,KAAY4C,EACZ7C,EAAoBM,EAAEuC,EAAa5C,KACrCD,EAAoBzgC,EAAE0gC,GAAY4C,EAAY5C,IAGhD,GAAG6C,EAAsBA,EAAQ9C,EAClC,CAEA,IADG2C,GAA4BA,EAA2Bv3B,GACrDg2B,EAAIwB,EAASj0C,OAAQyyC,IACzBb,EAAUqC,EAASxB,GAChBpB,EAAoBM,EAAE4B,EAAiB3B,IAAY2B,EAAgB3B,IACrE2B,EAAgB3B,GAAS,KAE1B2B,EAAgB3B,GAAW,CAG7B,EAEIyC,EAAqBC,KAAsC,gCAAIA,KAAsC,iCAAK,GAC9GD,EAAmBlyC,QAAQ4xC,EAAqBxrB,KAAK,KAAM,IAC3D8rB,EAAmBtkC,KAAOgkC,EAAqBxrB,KAAK,KAAM8rB,EAAmBtkC,KAAKwY,KAAK8rB,8KC9EhF,SAASE,IAEZ,OACIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAvrC,SAAA,EACIsrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,qBAAoBxrC,SAAA,EAC/BsrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBxrC,SAAA,EACpCyrC,EAAAA,EAAAA,KAAA,OAAKpQ,IAAKqQ,EAAMF,UAAU,WAAWG,IAAI,UACzCF,EAAAA,EAAAA,KAAA,MAAID,UAAU,QAAOxrC,SAAC,8BACtByrC,EAAAA,EAAAA,KAAA,MAAID,UAAU,MAAKxrC,SAAC,6CAExByrC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,0BAAyBxrC,UACpCyrC,EAAAA,EAAAA,KAAA,KAAG3wB,KAAK,sDAAqD9a,UACzDyrC,EAAAA,EAAAA,KAAA,OAAKpQ,IAAKuQ,EAAUD,IAAI,sFAIpCL,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uBAAsBxrC,SAAA,EACjCyrC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,6BAA4BxrC,UACvCyrC,EAAAA,EAAAA,KAAA,MAAAzrC,SAAI,2EAERsrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,6BAA4BxrC,SAAA,EACvCyrC,EAAAA,EAAAA,KAAA,KAAG3wB,KAAK,iDAAgD9a,SAAC,+FACzDyrC,EAAAA,EAAAA,KAAA,KAAG3wB,KAAK,sDAAqD9a,SAAC,+FAC9DyrC,EAAAA,EAAAA,KAAA,KAAG3wB,KAAK,gDAA+C9a,SAAC,iKAK5E,CC5BO,SAAS6rC,IAEZ,OACIJ,EAAAA,EAAAA,KAAA,UAAAzrC,UACIyrC,EAAAA,EAAAA,KAACJ,EAAiB,KAI9B,CCTO,SAASS,IAEZ,OACIL,EAAAA,EAAAA,KAAA,UAAAzrC,UACIyrC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iBAAgBxrC,UA4B3ByrC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,aAAYxrC,UACvBsrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gBAAexrC,SAAA,EAC1ByrC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAMxrC,UAACyrC,EAAAA,EAAAA,KAAA,KAAAzrC,SAAG,oVACzByrC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAMxrC,UAACyrC,EAAAA,EAAAA,KAAA,KAAAzrC,SAAG,gbACzByrC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAMxrC,UAACyrC,EAAAA,EAAAA,KAAA,KAAAzrC,SAAG,wUACzByrC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAMxrC,UAACyrC,EAAAA,EAAAA,KAAA,KAAAzrC,SAAG,kYACzByrC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAMxrC,UAACyrC,EAAAA,EAAAA,KAAA,KAAAzrC,SAAG,yQACzByrC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAMxrC,UAACyrC,EAAAA,EAAAA,KAAA,KAAAzrC,SAAG,mzBACzByrC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAMxrC,UAACyrC,EAAAA,EAAAA,KAAA,KAAAzrC,SAAG,mnBACzByrC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAMxrC,UAACyrC,EAAAA,EAAAA,KAAA,KAAAzrC,SAAG,+tBACzByrC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAMxrC,UAACyrC,EAAAA,EAAAA,KAAA,KAAAzrC,SAAG,y0CAMjD,CCxDe,SAAS+rC,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIl1C,UAAQm1C,EAAMD,EAAIl1C,QAC/C,IAAK,IAAIyyC,EAAI,EAAG2C,EAAO,IAAI3sC,MAAM0sC,GAAM1C,EAAI0C,EAAK1C,IAAK2C,EAAK3C,GAAKyC,EAAIzC,GACnE,OAAO2C,CACT,CCAe,SAAS,EAAeF,EAAKzC,GAC1C,OCLa,SAAyByC,GACtC,GAAIzsC,MAAMC,QAAQwsC,GAAM,OAAOA,CACjC,CDGS,CAAeA,IELT,SAA+BA,EAAKzC,GACjD,IAAI4C,EAAK,MAAQH,EAAM,KAAO,oBAAsB1xC,QAAU0xC,EAAI1xC,OAAOe,WAAa2wC,EAAI,cAC1F,GAAI,MAAQG,EAAI,CACd,IAAIC,EACFC,EACAC,EACAC,EACAC,EAAO,GACPC,GAAK,EACLC,GAAK,EACP,IACE,GAAIJ,GAAMH,EAAKA,EAAGxyC,KAAKqyC,IAAMpkB,KAAM,IAAM2hB,EAAG,CAC1C,GAAI5xC,OAAOw0C,KAAQA,EAAI,OACvBM,GAAK,CACP,MAAO,OAASA,GAAML,EAAKE,EAAG3yC,KAAKwyC,IAAK3f,QAAUggB,EAAK3lC,KAAKulC,EAAG/tC,OAAQmuC,EAAK11C,SAAWyyC,GAAIkD,GAAK,GAClG,CAAE,MAAOtI,GACPuI,GAAK,EAAIL,EAAKlI,CAChB,CAAE,QACA,IACE,IAAKsI,GAAM,MAAQN,EAAW,SAAMI,EAAKJ,EAAW,SAAKx0C,OAAO40C,KAAQA,GAAK,MAC/E,CAAE,QACA,GAAIG,EAAI,MAAML,CAChB,CACF,CACA,OAAOG,CACT,CACF,CFrBgC,CAAqBR,EAAKzC,IGJ3C,SAAqCd,EAAGkE,GACrD,GAAKlE,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAGkE,GACtD,IAAIntB,EAAI7nB,OAAOC,UAAUgJ,SAASjH,KAAK8uC,GAAGlvC,MAAM,GAAI,GAEpD,MADU,WAANimB,GAAkBipB,EAAE9qC,cAAa6hB,EAAIipB,EAAE9qC,YAAYhB,MAC7C,QAAN6iB,GAAqB,QAANA,EAAoBjgB,MAAMqtC,KAAKnE,GACxC,cAANjpB,GAAqB,2CAA2C5lB,KAAK4lB,GAAW,EAAiBipB,EAAGkE,QAAxG,CALc,CAMhB,CHHgE,CAA2BX,EAAKzC,IILjF,WACb,MAAM,IAAIsD,UAAU,4IACtB,CJGsG,EACtG,+yZKqBA,IACA,EAAe,IAA0B,kEChBlC,SAASC,IACZ,IA2B2DC,EAAAC,GAAfva,EAAAA,EAAAA,WAAS,GAAM,GAApDwa,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GAwsNxC,OACItB,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAvrC,UACIsrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,eAAcxrC,SAAA,EACzBsrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yBAAwBxrC,SAAA,EACnCsrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oCAAmCxrC,SAAA,EAC9CsrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,4CAA2CxrC,SAAA,EACtDyrC,EAAAA,EAAAA,KAAA,MAAAzrC,SAAI,8BACJsrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,sDAAqDxrC,SAAA,EAChEsrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gEAA+DxrC,SAAA,EAC1EyrC,EAAAA,EAAAA,KAAA,UAAAzrC,UACIyrC,EAAAA,EAAAA,KAAA,OAAKpQ,IAAK8R,EAAMxB,IAAI,gCAExBF,EAAAA,EAAAA,KAAA,SAAO7yC,KAAK,aAEhB0yC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2DAA0DxrC,SAAA,EACrEyrC,EAAAA,EAAAA,KAAA,OAAKpQ,IAAK+R,EAAUzB,IAAI,UACxBL,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iEAAgExrC,SAAA,EAC3EyrC,EAAAA,EAAAA,KAAA,MAAAzrC,SAAI,8DACJyrC,EAAAA,EAAAA,KAAA,QAAAzrC,SAAM,+KAGdsrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2DAA0DxrC,SAAA,EACrEyrC,EAAAA,EAAAA,KAAA,OAAKpQ,IAAK+R,EAAUzB,IAAI,UACxBL,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iEAAgExrC,SAAA,EAC3EyrC,EAAAA,EAAAA,KAAA,MAAAzrC,SAAI,8DACJyrC,EAAAA,EAAAA,KAAA,QAAAzrC,SAAM,qLAKtBsrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,4CAA2CxrC,SAAA,EACtDyrC,EAAAA,EAAAA,KAAA,MAAAzrC,SAAI,0CACJyrC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sDAAqDxrC,SAnwNvE,CACjB,2IACA,oGACA,oGACA,wFACA,oGACA,0GACA,0GACA,0GACA,0GACA,oGACA,kFACA,oGACA,8FACA,4EACA,wFACA,0GACA,8FACA,wFACA,8FAAoB,kFACpB,sHACA,8FACA,8FACA,sEACA,yFA4uNsCilC,KAAI,SAAC1oB,EAAc0P,GAAa,OAC1Cwf,EAAAA,EAAAA,KAAA,QAAAzrC,SAAOuc,GAAe,aAKtCkvB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,mBAAmBzrC,wBAAyB,CAAEqhB,OAhuNvD,oxgmBAmuNVqqB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,uBAAsBxrC,UACjCsrC,EAAAA,EAAAA,MAAA,UAAQlT,QA9uNa,WACjC8U,GAAmBD,GACnB1Z,QAAQ1oB,IAAIwiC,EAChB,EA2uN8DrtC,SAAA,CAAC,wEAAayrC,EAAAA,EAAAA,KAAA,OAAKpQ,IAAKiS,EAAM3B,IAAI,wCAEnFsB,IAAkB3B,EAAAA,EAAAA,MAAA,OAAKE,UAAU,6BAA4BxrC,SAAA,EAC1DsrC,EAAAA,EAAAA,MAAA,UAAAtrC,SAAA,EACIyrC,EAAAA,EAAAA,KAAA,OAAKpQ,IAAKiS,EAAM3B,IAAI,MACpBF,EAAAA,EAAAA,KAAA,QAAAzrC,SAAM,mGAEVsrC,EAAAA,EAAAA,MAAA,UAAAtrC,SAAA,EACIyrC,EAAAA,EAAAA,KAAA,OAAKpQ,IAAKiS,EAAM3B,IAAI,MACpBF,EAAAA,EAAAA,KAAA,QAAAzrC,SAAM,kGAGVsrC,EAAAA,EAAAA,MAAA,UAAAtrC,SAAA,EACIyrC,EAAAA,EAAAA,KAAA,OAAKpQ,IAAKiS,EAAM3B,IAAI,MACpBF,EAAAA,EAAAA,KAAA,QAAAzrC,SAAM,mKAM9B,CCzxNA,ICfYutC,EDeZ,EAZA,WAGE,OACEjC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAvrC,SAAA,EACEyrC,EAAAA,EAAAA,KAACI,EAAM,KACPJ,EAAAA,EAAAA,KAACqB,EAAW,KACZrB,EAAAA,EAAAA,KAACK,EAAM,MAGb,EENA,EAZwB,SAAC0B,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB3rB,MAAK,SAAA4rB,GAAkD,IAA/CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECZe,SAAS,EAAgB7uB,EAAUqvB,GAChD,KAAMrvB,aAAoBqvB,GACxB,MAAM,IAAInB,UAAU,oCAExB,CCJe,SAASoB,EAAQlF,GAG9B,OAAOkF,EAAU,mBAAqB3zC,QAAU,iBAAmBA,OAAOe,SAAW,SAAU0tC,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAO,mBAAqBzuC,QAAUyuC,EAAIprC,cAAgBrD,QAAUyuC,IAAQzuC,OAAO1C,UAAY,gBAAkBmxC,CAC1H,EAAGkF,EAAQlF,EACb,CCNe,SAASmF,EAAeC,GACrC,IAAIt5B,ECFS,SAAsBzP,EAAOgpC,GAC1C,GAAuB,WAAnBH,EAAQ7oC,IAAiC,OAAVA,EAAgB,OAAOA,EAC1D,IAAIipC,EAAOjpC,EAAM9K,OAAOg0C,aACxB,QAAahG,IAAT+F,EAAoB,CACtB,IAAIE,EAAMF,EAAK10C,KAAKyL,EAAOgpC,GAAQ,WACnC,GAAqB,WAAjBH,EAAQM,GAAmB,OAAOA,EACtC,MAAM,IAAI1B,UAAU,+CACtB,CACA,OAAiB,WAATuB,EAAoBt5B,OAAS05B,QAAQppC,EAC/C,CDPY,CAAY+oC,EAAK,UAC3B,MAAwB,WAAjBF,EAAQp5B,GAAoBA,EAAMC,OAAOD,EAClD,CEJA,SAAS45B,EAAkBxoC,EAAQklB,GACjC,IAAK,IAAIoe,EAAI,EAAGA,EAAIpe,EAAMr0B,OAAQyyC,IAAK,CACrC,IAAImF,EAAavjB,EAAMoe,GACvBmF,EAAW5wC,WAAa4wC,EAAW5wC,aAAc,EACjD4wC,EAAW7wC,cAAe,EACtB,UAAW6wC,IAAYA,EAAWC,UAAW,GACjDh3C,OAAOuE,eAAe+J,EAAQ,EAAcyoC,EAAW75B,KAAM65B,EAC/D,CACF,CACe,SAAS,EAAaV,EAAaY,EAAYC,GAM5D,OALID,GAAYH,EAAkBT,EAAYp2C,UAAWg3C,GACrDC,GAAaJ,EAAkBT,EAAaa,GAChDl3C,OAAOuE,eAAe8xC,EAAa,YAAa,CAC9CW,UAAU,IAELX,CACT,CCjBe,SAASc,EAAgBrG,EAAGhyC,GAKzC,OAJAq4C,EAAkBn3C,OAAOo3C,eAAiBp3C,OAAOo3C,eAAe1vB,OAAS,SAAyBopB,EAAGhyC,GAEnG,OADAgyC,EAAEuG,UAAYv4C,EACPgyC,CACT,EACOqG,EAAgBrG,EAAGhyC,EAC5B,CCLe,SAASw4C,EAAUC,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAItC,UAAU,sDAEtBqC,EAASt3C,UAAYD,OAAO+4B,OAAOye,GAAcA,EAAWv3C,UAAW,CACrE+F,YAAa,CACXU,MAAO6wC,EACPP,UAAU,EACV9wC,cAAc,KAGlBlG,OAAOuE,eAAegzC,EAAU,YAAa,CAC3CP,UAAU,IAERQ,GAAY,EAAeD,EAAUC,EAC3C,CChBe,SAASC,EAAgB3G,GAItC,OAHA2G,EAAkBz3C,OAAOo3C,eAAiBp3C,OAAO03C,eAAehwB,OAAS,SAAyBopB,GAChG,OAAOA,EAAEuG,WAAar3C,OAAO03C,eAAe5G,EAC9C,EACO2G,EAAgB3G,EACzB,CCLe,SAAS6G,IACtB,GAAuB,qBAAZlzC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUkzC,KAAM,OAAO,EACnC,GAAqB,oBAAVC,MAAsB,OAAO,EACxC,IAEE,OADAC,QAAQ73C,UAAU+I,QAAQhH,KAAKyC,QAAQC,UAAUozC,QAAS,IAAI,WAAa,MACpE,CACT,CAAE,MAAOt3C,GACP,OAAO,CACT,CACF,CCRe,SAASu3C,EAA2BtE,EAAMzxC,GACvD,GAAIA,IAA2B,WAAlBs0C,EAAQt0C,IAAsC,oBAATA,GAChD,OAAOA,EACF,QAAa,IAATA,EACT,MAAM,IAAIkzC,UAAU,4DAEtB,OCRa,SAAgCzB,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIuE,eAAe,6DAE3B,OAAOvE,CACT,CDGS,CAAsBA,EAC/B,CENe,SAASwE,EAAaC,GACnC,IAAIC,EAA4B,IAChC,OAAO,WACL,IACEC,EADEC,EAAQ,EAAeH,GAE3B,GAAIC,EAA2B,CAC7B,IAAIG,EAAY,EAAe33C,MAAMqF,YACrCoyC,EAAS3zC,QAAQC,UAAU2zC,EAAOn5C,UAAWo5C,EAC/C,MACEF,EAASC,EAAMvoC,MAAMnP,KAAMzB,WAE7B,OAAO,EAA0ByB,KAAMy3C,EACzC,CACF,CCde,SAASG,EAAWC,EAAQC,EAAMC,GAa/C,OAXEH,EADE,IACW9zC,QAAQC,UAAUgjB,OAElB,SAAoB8wB,EAAQC,EAAMC,GAC7C,IAAI35C,EAAI,CAAC,MACTA,EAAEmQ,KAAKY,MAAM/Q,EAAG05C,GAChB,IACIzxB,EAAW,IADG8uB,SAASpuB,KAAK5X,MAAM0oC,EAAQz5C,IAG9C,OADI25C,GAAO,EAAe1xB,EAAU0xB,EAAMz4C,WACnC+mB,CACT,EAEKuxB,EAAWzoC,MAAM,KAAM5Q,UAChC,CCZe,SAASy5C,EAAiBD,GACvC,IAAIE,EAAwB,oBAAR3jC,IAAqB,IAAIA,SAAQ07B,EAuBrD,OAtBAgI,EAAmB,SAA0BD,GAC3C,GAAc,OAAVA,ICPkCnG,EDOEmG,GCNsB,IAAzD5C,SAAS7sC,SAASjH,KAAKuwC,GAAI5lC,QAAQ,kBDMQ,OAAO+rC,ECP5C,IAA2BnG,EDQtC,GAAqB,oBAAVmG,EACT,MAAM,IAAIxD,UAAU,sDAEtB,GAAsB,qBAAX0D,EAAwB,CACjC,GAAIA,EAAOxxB,IAAIsxB,GAAQ,OAAOE,EAAO3yC,IAAIyyC,GACzCE,EAAOp0C,IAAIk0C,EAAOG,EACpB,CACA,SAASA,IACP,OAAO,EAAUH,EAAOx5C,UAAW,EAAeyB,MAAMqF,YAC1D,CASA,OARA6yC,EAAQ54C,UAAYD,OAAO+4B,OAAO2f,EAAMz4C,UAAW,CACjD+F,YAAa,CACXU,MAAOmyC,EACP1yC,YAAY,EACZ6wC,UAAU,EACV9wC,cAAc,KAGX,EAAe2yC,EAASH,EACjC,EACOC,EAAiBD,EAC1B,sOftBA,SAAY9C,GAQVA,EAAAA,IAAAA,MAOAA,EAAAA,KAAAA,OAMAA,EAAAA,QAAAA,SArBF,EAAYA,IAAAA,EAsBX,KAkKD,IiBrLYkD,EjBqLNC,EAAoB,WA8RV,SAAAC,EAAUtyC,EAAY80B,GACpC,IAAc,IAAV90B,GAA6B,OAAVA,GAAmC,qBAAVA,EAC9C,MAAM,IAAI1C,MAAMw3B,EAEnB,CA0BD,SAASyd,EAAgB37B,EAAoBgX,GAC3C,MAAO,CACL4kB,IAAK57B,EAAS4V,MACdhW,IAAKI,EAASJ,IACdi8B,IAAK7kB,EAER,CAKK,SAAU8kB,EACdloC,EACAmoC,EACAnmB,EACAhW,GAcA,YAdY,IADZgW,IAAAA,EAAa,MAGD,GACVomB,SAA6B,kBAAZpoC,EAAuBA,EAAUA,EAAQooC,SAC1D/4B,OAAQ,GACRg5B,KAAM,IACY,kBAAPF,EAAkBG,EAAUH,GAAMA,EAJnC,CAKVnmB,MAAAA,EAKAhW,IAAMm8B,GAAOA,EAAgBn8B,KAAQA,GAjChCpK,KAAK0U,SAASve,SAAS,IAAIwwC,OAAO,EAAG,IAoC7C,CAKe,WAIA1D,GAAA,QAHduD,SAAAA,OAAQ,IAAG,MADc,EAAAI,EAIX3D,EAFdx1B,OAAAA,OAAM,IAAG,KAFgB,EAAAo5B,EAIX5D,EADdwD,KAAAA,OAAI,IAAG,OAMP,OAJIh5B,GAAqB,MAAXA,IACZ+4B,GAAiC,MAArB/4B,EAAOzT,OAAO,GAAayT,EAAS,IAAMA,GACpDg5B,GAAiB,MAATA,IACVD,GAA+B,MAAnBC,EAAKzsC,OAAO,GAAaysC,EAAO,IAAMA,GAC7CD,CACR,CAKK,SAAUE,EAAUI,GACxB,IAAIC,EAA4B,CAAC,EAEjC,GAAID,EAAM,CACR,IAAIE,EAAYF,EAAKjtC,QAAQ,KACzBmtC,GAAa,IACfD,EAAWN,KAAOK,EAAKH,OAAOK,GAC9BF,EAAOA,EAAKH,OAAO,EAAGK,IAGxB,IAAIC,EAAcH,EAAKjtC,QAAQ,KAC3BotC,GAAe,IACjBF,EAAWt5B,OAASq5B,EAAKH,OAAOM,GAChCH,EAAOA,EAAKH,OAAO,EAAGM,IAGpBH,IACFC,EAAWP,SAAWM,EAEzB,CAED,OAAOC,CACR,CASD,SAASG,EACPC,EACAC,EACAC,EACApyC,QAA+B,IAA/BA,IAAAA,EAA6B,CAAC,GAE9B,MAA2DA,EAA3DqyC,EAAAA,EAAMx6C,OAAAA,OAAM,IAAG,EAAAC,SAASkkB,YAApB,EAAAs2B,EAAAA,EAAkCC,SAAAA,OAAQ,IAAG,KAC7CC,EAAgB36C,EAAO46C,QACvB9iB,EAASke,EAAO6E,IAChBxzB,EAA4B,KAE5BqN,EAAQomB,IASZ,SAASA,IAEP,OADYH,EAAcrnB,OAAS,CAAEimB,IAAK,OAC7BA,GACd,CAED,SAASwB,IACPjjB,EAASke,EAAO6E,IAChB,IAAIG,EAAYF,IACZG,EAAqB,MAAbD,EAAoB,KAAOA,EAAYtmB,EACnDA,EAAQsmB,EACJ3zB,GACFA,EAAS,CAAEyQ,OAAAA,EAAQpa,SAAUk9B,EAAQl9B,SAAUu9B,MAAAA,GAElD,CAwCD,SAASC,EAAUzB,GAIjB,IAAIlsC,EACyB,SAA3BvN,EAAO0d,SAASy9B,OACZn7C,EAAO0d,SAASy9B,OAChBn7C,EAAO0d,SAAS6F,KAElBA,EAAqB,kBAAPk2B,EAAkBA,EAAK2B,EAAW3B,GAKpD,OAJAL,EACE7rC,EACsEgW,sEAAAA,GAEjE,IAAI83B,IAAI93B,EAAMhW,EACtB,CAzEY,MAATmnB,IACFA,EAAQ,EACRimB,EAAcW,aAAkBX,EAAAA,CAAAA,EAAAA,EAAcrnB,MAA9C,CAAqDimB,IAAK7kB,IAAS,KAyErE,IAAIkmB,EAAmB,CACrB,UAAI9iB,GACF,OAAOA,GAET,YAAIpa,GACF,OAAO28B,EAAYr6C,EAAQ26C,IAE7BY,OAAM,SAAC5I,GACL,GAAItrB,EACF,MAAM,IAAIjjB,MAAM,8CAKlB,OAHApE,EAAO+P,iBAAiBopC,EAAmB4B,GAC3C1zB,EAAWsrB,EAEJ,WACL3yC,EAAOgQ,oBAAoBmpC,EAAmB4B,GAC9C1zB,EAAW,OAGfizB,WAAU,SAACb,GACT,OAAOa,EAAWt6C,EAAQy5C,IAE5ByB,UAAAA,EACAM,eAAc,SAAC/B,GAEb,IAAI14B,EAAMm6B,EAAUzB,GACpB,MAAO,CACLC,SAAU34B,EAAI24B,SACd/4B,OAAQI,EAAIJ,OACZg5B,KAAM54B,EAAI44B,OAGdrqC,KAvFF,SAAcmqC,EAAQnmB,GACpBwE,EAASke,EAAOyF,KAChB,IAAI/9B,EAAW87B,EAAeoB,EAAQl9B,SAAU+7B,EAAInmB,GAChDinB,GAAkBA,EAAiB78B,EAAU+7B,GAGjD,IAAIiC,EAAerC,EAAgB37B,EADnCgX,EAAQomB,IAAa,GAEjB/5B,EAAM65B,EAAQN,WAAW58B,GAG7B,IACEi9B,EAAcgB,UAAUD,EAAc,GAAI36B,GAC1C,MAAOkb,GAGPj8B,EAAO0d,SAASxZ,OAAO6c,EACxB,CAEG25B,GAAYrzB,GACdA,EAAS,CAAEyQ,OAAAA,EAAQpa,SAAUk9B,EAAQl9B,SAAUu9B,MAAO,GAEzD,EAmECv4C,QAjEF,SAAiB+2C,EAAQnmB,GACvBwE,EAASke,EAAO4F,QAChB,IAAIl+B,EAAW87B,EAAeoB,EAAQl9B,SAAU+7B,EAAInmB,GAChDinB,GAAkBA,EAAiB78B,EAAU+7B,GAGjD,IAAIiC,EAAerC,EAAgB37B,EADnCgX,EAAQomB,KAEJ/5B,EAAM65B,EAAQN,WAAW58B,GAC7Bi9B,EAAcW,aAAaI,EAAc,GAAI36B,GAEzC25B,GAAYrzB,GACdA,EAAS,CAAEyQ,OAAAA,EAAQpa,SAAUk9B,EAAQl9B,SAAUu9B,MAAO,GAEzD,EAqDCY,GAAE,SAAC5zB,GACD,OAAO0yB,EAAckB,GAAG5zB,EACzB,GAGH,OAAO2yB,CACR,EiBpsBD,SAAY1B,GACVA,EAAAA,KAAAA,OACAA,EAAAA,SAAAA,WACAA,EAAAA,SAAAA,WACAA,EAAAA,MAAAA,OAJF,EAAYA,IAAAA,EAKX,KA0LiC,IAAIx5C,IAAuB,CAC3D,OACA,gBACA,OACA,KACA,QACA,aAkvBc,WACdg6C,EACAoC,GAEA,GAAiB,MAAbA,EAAkB,OAAOpC,EAE7B,IAAKA,EAAS/3C,cAAco6C,WAAWD,EAASn6C,eAC9C,OAAO,KAKT,IAAIq6C,EAAaF,EAASG,SAAS,KAC/BH,EAASv8C,OAAS,EAClBu8C,EAASv8C,OACT28C,EAAWxC,EAASxsC,OAAO8uC,GAC/B,OAAIE,GAAyB,MAAbA,EAEP,KAGFxC,EAAS13C,MAAMg6C,IAAe,GACtC,KAqPYG,EAAP,YAAAzE,EAAAA,EAAAA,GAAA,+BAAA0E,EAAAA,KAAAA,GAAA,uCAAoCh4C,QCnmB1C,IAAMi4C,EAAgD,CACpD,OACA,MACA,QACA,UAMIC,GAJuB,IAAI58C,IAC/B28C,GAG0B,CAC1B,OAD2C,OAExCA,IAEuB,IAAI38C,IAAgB48C,GAEpB,IAAI58C,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,MACf,IAAIA,IAAI,CAAC,IAAK,MA8BpC,qBAAXM,QACoB,qBAApBA,OAAOC,UACPD,OAAOC,SAASC,cAs0Da6C,OAAO,YC14EtC,IAAMw5C,EAAeC,EAAAA,cAA2C,MAoChE,IAAMC,EAAoBD,EAAAA,cAC/B,MAYK,IAAME,EAAkBF,EAAAA,cAC7B,UAaWG,EAAeH,EAAAA,cAAwC,CAClEI,OAAQ,KACRC,QAAS,GACTC,aAAa,IAOR,IAAMC,EAAoBP,EAAAA,cAAyB,MC3EnD,SAASQ,IACd,OAA4C,MAArCR,EAAAA,WAAiBE,EACzB,CAmcD,IA+MKO,EAMAC,EArMoCV,EAAAA,oBA+LpCS,GAAAA,EAAAA,WAAAA,aAAAA,EAAAA,eAAAA,iBAAAA,EAAAA,kBAAAA,aAAAA,EAAAA,IAAAA,EAAAA,CAAAA,aAMAC,GAAAA,EAAAA,WAAAA,aAAAA,EAAAA,cAAAA,gBAAAA,EAAAA,cAAAA,gBAAAA,EAAAA,cAAAA,gBAAAA,EAAAA,cAAAA,gBAAAA,EAAAA,mBAAAA,qBAAAA,EAAAA,WAAAA,aAAAA,EAAAA,eAAAA,iBAAAA,EAAAA,kBAAAA,cAAAA,EAAAA,WAAAA,YAAAA,EAAAA,IAAAA,EAAAA,CAAAA,IAoPL,ICpiBKC,EAxHE,SAASC,GAO2BC,GAAA,QANzCvB,SAAUwB,OAAY,IAAG,MADJ,EAAAC,EAOoBF,EALzC50C,SAAAA,OAAQ,IAAG,OAFU,EAGX+0C,EAI+BH,EAJzC3/B,SAAQ+/B,EAIiCJ,EAHzCK,eAAAA,OAAc,IAAG,EAAAC,EAAe9C,IAJX,EAKrBpL,EAEyC4N,EAFzC5N,UALqBmO,EAOoBP,EADzCQ,OAAQC,OAAU,IAAG,KAGlBd,KADH5D,GAAA,GAQA,IAAI0C,EAAWwB,EAAa56C,QAAQ,OAAQ,KACxCq7C,EAAoBvB,EAAAA,SACtB,iBAAO,CAAEV,SAAAA,EAAUrM,UAAAA,EAAWoO,OAAQC,EAAtC,GACA,CAAChC,EAAUrM,EAAWqO,IAGI,kBAAjBN,IACTA,EAAe5D,EAAU4D,IAG3B,MAMIA,EANJQ,EAAAA,EACEtE,SAAAA,OAAQ,IAAG,MADT,EAAAuE,EAAAA,EAEFt9B,OAAAA,OAAM,IAAG,KAFP,EAAAu9B,EAAAA,EAGFvE,KAAAA,OAAI,IAAG,KAHL,EAAAwE,EAAAA,EAIF7qB,MAAAA,OAAK,IAAG,OAJN,EAAA8qB,EAAAA,EAKF9gC,IAAAA,OAAG,IAAG,cAGJ+gC,EAAkB7B,EAAAA,SAAc,WAClC,IAAI8B,EAAmBC,EAAc7E,EAAUoC,GAE/C,OAAwB,MAApBwC,EACK,KAGF,CACL5gC,SAAU,CACRg8B,SAAU4E,EACV39B,OAAAA,EACAg5B,KAAAA,EACArmB,MAAAA,EACAhW,IAAAA,GAEFogC,eAAAA,EAEH,GAAE,CAAC5B,EAAUpC,EAAU/4B,EAAQg5B,EAAMrmB,EAAOhW,EAAKogC,IASlD,OAAuB,MAAnBW,EACK,KAIP7B,EAAAA,cAACC,EAAkBnO,SAAnB,CAA4BxnC,MAAOi3C,GACjC,gBAACrB,EAAgBpO,SAAjB,CAA0B7lC,SAAUA,EAAU3B,MAAOu3C,IAG1D,WAmDIlB,GAAAA,EAAAA,EAAAA,QAAAA,GAAAA,UAAAA,EAAAA,EAAAA,QAAAA,GAAAA,UAAAA,EAAAA,EAAAA,MAAAA,GAAAA,OAAAA,EAAAA,IAAAA,EAAAA,CAAAA,IAML,IAAMqB,GAAsB,IAAIr0B,SAAQ,WAAO,IAEdqyB,EAAAA,UCvJ3B,SAAUiC,GAIKtI,GAAA,ItBkDnBhuC,EsBrDA2zC,EAGmB3F,EAHnB2F,SACArzC,EAEmB0tC,EAFnB1tC,SACAzI,EACmBm2C,EADnBn2C,OAEI0+C,EAAalC,EAAAA,SACS,MAAtBkC,EAAWptC,UACbotC,EAAWptC,ctB+CsB,KAAnCnJ,EsB/C4C,CAAEnI,OAAAA,EAAQ06C,UAAU,MtB+ChEvyC,EAAiC,CAAC,GAoB3BiyC,GAlBP,SACEp6C,EACA26C,GAEA,MAAiC36C,EAAO0d,SACxC,OAAO87B,EACL,GACA,CAAEE,SAHA,EAAEA,SAGQ/4B,OAHV,EAAYA,OAGMg5B,KAHEA,EAAAA,MAKrBgB,EAAcrnB,OAASqnB,EAAcrnB,MAAMgmB,KAAQ,KACnDqB,EAAcrnB,OAASqnB,EAAcrnB,MAAMhW,KAAQ,UAEvD,IAED,SAA2Btd,EAAgBy5C,GACzC,MAAqB,kBAAPA,EAAkBA,EAAK2B,EAAW3B,EACjD,GAKC,KACAtxC,KsBpEF,IAAIyyC,EAAU8D,EAAWptC,QACzBqtC,EAAAA,EAAwBnC,EAAAA,SAAe,CACrC1kB,OAAQ8iB,EAAQ9iB,OAChBpa,SAAUk9B,EAAQl9B,WAFpBihC,GAAKrrB,EAAD,KAAQ6Z,EAAR,KAOJ,OAFAqP,EAAAA,iBAAsB,kBAAM5B,EAAQW,OAAOpO,EAA3C,GAAsD,CAACyN,IAGrD4B,EAAAA,cAACY,GAAM,CACLtB,SAAUA,EACVrzC,SAAUA,EACViV,SAAU4V,EAAM5V,SAChBggC,eAAgBpqB,EAAMwE,OACtB2X,UAAWmL,GAGhB,CAqFmB,qBAAX56C,QACoB,qBAApBA,OAAOC,UACPD,OAAOC,SAASC,cA8RzB,IAkFK+8C,GAMAC,IANL,SAAKD,GACHA,EAAAA,qBAAAA,uBACAA,EAAAA,cAAAA,gBACAA,EAAAA,WAAAA,YAHF,GAAKA,KAAAA,GAIJ,KAED,SAAKC,GACHA,EAAAA,YAAAA,cACAA,EAAAA,qBAAAA,sBAFF,EAAKA,KAAAA,GAGJ,KCjxBY0B,EAAAA,WACX3+C,SAAS4+C,eAAe,SAErBt5C,QACH2uC,EAAAA,EAAAA,KAACsI,EAAAA,WAAgB,CAAA/zC,UACfyrC,EAAAA,EAAAA,KAACuK,GAAa,CAAAh2C,UACZyrC,EAAAA,EAAAA,KAAC4K,EAAG,SAQVC","sources":["../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","assets/components/HeaderInformation/index.tsx","assets/components/Header/index.tsx","assets/components/Footer/index.tsx","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/components/MainContent/images/ryazan-region.svg","assets/components/MainContent/index.tsx","assets/components/App/index.tsx","../node_modules/@remix-run/router/history.ts","reportWebVitals.ts","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/index.tsx","index.tsx"],"sourcesContent":["/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"fcf432be\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"clear-react-project:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkclear_react_project\"] = self[\"webpackChunkclear_react_project\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import React from \"react\";\r\nimport './css/style.css';\r\nimport logo from '../../images/logo.048bcec7.png';\r\nimport formHref from '../../images/logo-stat.c8a3efcf.png'\r\n\r\n/**\r\n * Информация шапки\r\n * @returns компонент \"Информация шапки\"\r\n */\r\nexport function HeaderInformation() {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"header-information\">\r\n                <div className=\"header-information_logo\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <h1 className=\"white\">ЛЮДИ</h1>\r\n                    <h1 className=\"red\">ПОБЕДЫ</h1>\r\n                </div>\r\n                <div className=\"header-information_form\">\r\n                    <a href=\"https://forms.yandex.ru/u/662b99e384227cc953107e72/\">\r\n                        <img src={formHref} alt=\"форма яндекса\" />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div className=\"header-content-books\">\r\n                <div className=\"header-content-books_title\">\r\n                    <h2>Книги победы</h2>\r\n                </div>\r\n                <div className=\"header-content-books_hrefs\">\r\n                    <a href=\"https://pobeda.ryazan.gov.ru/files/vov_v75.pdf\">75 лет книга победы</a>\r\n                    <a href=\"https://pobeda.ryazan.gov.ru/files/vov_svod_v70.pdf\">70 лет книга победы</a>\r\n                    <a href=\"https://pobeda.ryazan.gov.ru/files/RO_vov.pdf\">Годы ВОВ в Рязанской области</a>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport './css/style.css';\r\nimport { HeaderInformation } from \"../HeaderInformation\";\r\n// import { Menu } from \"../Menu\";\r\n\r\n/**\r\n * Шапка\r\n * @returns компонент \"Шапка\"\r\n */\r\nexport function Header() {\r\n\r\n    return (\r\n        <header>\r\n            <HeaderInformation />\r\n            {/* <Menu /> */}\r\n        </header>\r\n    );\r\n}","import React from \"react\";\r\nimport logo from '../../images/logo.svg';\r\nimport \"./css/style.css\";\r\n\r\n/**\r\n * Подвал\r\n * @returns компонент \"Подвал\"\r\n */\r\nexport function Footer() {\r\n\r\n    return (\r\n        <footer>\r\n            <div className='running-string'>\r\n                {/* <marquee data-v-01038c1a=\"\" loop=\"loop\" scrollamount=\"10\"> */}\r\n                {/* <span data-v-01038c1a=\"\" className=\"message__box\"><p>Производство гражданской продукции существенно сократилось в 1944 г. и составило 61% по сравнению с довоенным уровнем, производство военной продукции за этот период увеличилось в 3,1 раза.</p>\r\n                </span><span data-v-01038c1a=\"\" className=\"message__box\"><p>Всего за годы войны страна выпустила 102,8 тыс. шт. танков и САУ, 12139,3 тыс. шт. винтовок и карабинов, 112,1 тыс. шт. боевых самолетов. Резко (в 22,6 раза) выросло производство пистолетов-пулеметов в 1943 г. по сравнению со второй половиной 1941 г., производство пулеметов всех видов – в 4,3 раза, производство орудий всех видов и калибров – в 4,3 раза, производство танков в 1944 г. увеличилось в 6 раз.</p>\r\n                </span><span data-v-01038c1a=\"\" className=\"message__box\"><p>Снижение стоимости некоторых видов вооружения и военной техники.</p>\r\n                </span><span data-v-01038c1a=\"\" className=\"message__box\"><p>В районах, подвергавшихся оккупации, выпускалось железной руды (71%), чугуна (71%), угля (63%), стали (58%) от общего производства.</p>\r\n                </span><span data-v-01038c1a=\"\" className=\"message__box\"><p>В целом в 1945 г. по сравнению с довоенным уровнем был рост в отдельных отраслях экономики: в цветной металлургии (111%), в машиностроении и металлообработке (129%) и, наоборот, отмечался спад производства в промышленности строительных материалов (46%), пищевой промышленности (50 %), легкой промышленности (62%).</p>\r\n                </span><span data-v-01038c1a=\"\" className=\"message__box\"><p>Производство важнейших видов промышленной продукции в СССР и РСФСР, в том числе непродовольственных (электроэнергии, чугуна, стали, проката черных металлов и т.д.) и продовольственных (мяса, масла, муки, крупы и т.д.).</p>\r\n                <p>Восстановление промышленного производства до довоенного уровня.</p>\r\n                <p>В районах, подвергавшихся оккупации, выращивалось 86% сахарной свеклы, 72% семян подсолнечника, 70% картофеля, около 60% производства основных продуктов животноводства (скот и птица на убой, молоко, яйца).</p>\r\n                <p>Текст о сокращении материально-технической базы сельского хозяйства.</p>\r\n               <p>За годы войны посевные площади сократились на 36,8 млн га, или на 24,5%, в том числе зерновых и зернобобовых культур – на 25,4 млн га (на 33%), технических культур – на 4,1 млн га (на 35%).</p>\r\n                <p>Посевные площади основных сельскохозяйственных культур (график в динамике лет; в процентах к 1940 г.).</p>\r\n                <p>Производство основных продуктов растениеводства. Снижение за годы войны в СССР производства зерна в 2 раза, семян подсолнечника и сахарной свеклы – в 3,3 раза, картофеля – в 1,3 раза.</p>\r\n                <p>Производство основных продуктов растениеводства (график в динамике). В 1941 г. по сравнению с 1940 г. резкий спад производства сахарной свеклы на 89%, семян подсолнечника – на 66%, картофеля – на 65%.</p>\r\n                <p>Производство основных продуктов животноводства.</p>\r\n                <p>Восстановление сельскохозяйственного производства до довоенного уровня.</p>\r\n                <p>Среднегодовая численность рабочих и служащих в экономике СССР.</p>\r\n\r\n                </span><span data-v-01038c1a=\"\" className=\"message__box\"><p>Среднегодовая численность женщин-рабочих и служащих по отраслям экономики СССР.</p>\r\n                </span><span data-v-01038c1a=\"\" className=\"message__box\"><p>Структура доходов Государственного бюджета СССР (диаграмма).</p>\r\n                </span><span data-v-01038c1a=\"\" className=\"message__box\"><p>Удельный вес расходов на оборону в Государственном бюджете СССР (график).</p>\r\n                </span><span data-v-01038c1a=\"\" className=\"message__box\"><p>Дефицит/профицит Государственного бюджета СССР.</p>\r\n                </span><span data-v-01038c1a=\"\" className=\"message__box\"><p>Импорт СССР вооружения по годам, в том числе поставки из США по ленд-лизу по Соглашению от 11 июня 1942 г. (пистолеты-пулеметы, танки и САУ, орудия всех видов и калибров).</p>\r\n                </span><span data-v-01038c1a=\"\" className=\"message__box\"><p>Изменение удельного веса восточных районов СССР в общесоюзном производстве важнейших видов промышленной продукции.</p>\r\n                </span><span data-v-01038c1a=\"\" className=\"message__box\"><p>Потери советских Вооруженных сил при освобождении республик СССР и потери советских Вооруженных сил при освобождении стран Европы и Азии.</p>\r\n                </span><span data-v-01038c1a=\"\" className=\"message__box\"><p>Воинские захоронения в России и других государствах (по данным Управления Министерства обороны Российской Федерации по увековечению памяти погибших при защите Отечества). Наибольшее число захороненных на территории Польши, Белоруссии, Германии, Украины.</p>\r\n                </span> */}\r\n                <div className=\"items-wrap\">\r\n                    <div className=\"items marquee\">\r\n                        <div className=\"item\"><p>Среднегодовая численность рабочих и служащих в экономике СССР.</p></div>\r\n                        <div className=\"item\"><p>Среднегодовая численность женщин-рабочих и служащих по отраслям экономики СССР.</p></div>\r\n                        <div className=\"item\"><p>Структура доходов Государственного бюджета СССР (диаграмма).</p></div>\r\n                        <div className=\"item\"><p>Удельный вес расходов на оборону в Государственном бюджете СССР (график).</p></div>\r\n                        <div className=\"item\"><p>Дефицит/профицит Государственного бюджета СССР.</p></div>\r\n                        <div className=\"item\"><p>Импорт СССР вооружения по годам, в том числе поставки из США по ленд-лизу по Соглашению от 11 июня 1942 г. (пистолеты-пулеметы, танки и САУ, орудия всех видов и калибров).</p></div>\r\n                        <div className=\"item\"><p>Изменение удельного веса восточных районов СССР в общесоюзном производстве важнейших видов промышленной продукции.</p></div>\r\n                        <div className=\"item\"><p>Потери советских Вооруженных сил при освобождении республик СССР и потери советских Вооруженных сил при освобождении стран Европы и Азии.</p></div>\r\n                        <div className=\"item\"><p>Воинские захоронения в России и других государствах (по данным Управления Министерства обороны Российской Федерации по увековечению памяти погибших при защите Отечества). Наибольшее число захороненных на территории Польши, Белоруссии, Германии, Украины.</p></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","var _image;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgRyazanRegion(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"800px\",\n    height: \"769px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _image || (_image = /*#__PURE__*/React.createElement(\"image\", {\n    x: \"0px\",\n    y: \"0px\",\n    width: \"800px\",\n    height: \"769px\",\n    xlinkHref: \"data:img/png;base64,\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRyazanRegion);\nexport default __webpack_public_path__ + \"static/media/ryazan-region.285dc2a4949c020321a143eaf2737d11.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\nimport \"./css/style.css\";\r\nimport logoUser from \"../../images/user.jpg\"\r\nimport lupa from \"../../images/lupa.png\"\r\nimport book from \"../../images/book.png\"\r\nimport ribnoe from \"./images/ribnoe-region.svg\"\r\nimport klepikovskiy from \"./images/klepilovskiy-region.svg\"\r\nimport ryazanRegion from \"./images/ryazan-region.svg\"\r\nimport ryazanRegionMap from \"./images/ryazan-region-map.svg\"\r\n// import { Route, Routes } from 'react-router-dom';\r\n// import russia from \"./images/russia.svg\";\r\n\r\nexport function MainContent() {\r\n    const arrayRegions = [\r\n        \"Александро - Невский район\",\r\n        \"Ермишинский район\",\r\n        \"Захаровский район\",\r\n        \"Кадомский район\",\r\n        \"Касимовский район\",\r\n        \"Клепиковский район\",\r\n        \"Кораблинский район\",\r\n        \"Милославский район\",\r\n        \"Михайловский район\",\r\n        \"Пителинский район\",\r\n        \"Пронский район\",\r\n        \"Путятинский район\",\r\n        \"Рыбновский район\",\r\n        \"Ряжский район\",\r\n        \"Рязанский район\",\r\n        \"Сапожковский район\",\r\n        \"Сараевский район\",\r\n        \"Сасовский район\",\r\n        \"Скопинский район\", \"Спасский район\",\r\n        \"Старожиловский район\",\r\n        \"Ухоловский район\",\r\n        \"Чучковский район\",\r\n        \"Шацкий район\",\r\n        \"Шиловский район\"\r\n    ];\r\n\r\n    const [stateViewBooks, setStateViewBooks] = useState(false);\r\n\r\n    /***\r\n     * \r\n     */\r\n    const handlerOnClickSideMenuButton = () => {\r\n        setStateViewBooks(!stateViewBooks);\r\n        console.log(ryazanRegion)\r\n    }\r\n\r\n    // const ryazanRegionSVG = document.querySelector(\".main-content_map\");\r\n    // ryazanRegion.innerHTML \r\n    // console.log(ryazanRegion)\r\n    // console.log(ryazanRegion.innerHTML);\r\n    \r\n    const  ryazanRegionSVG  = `\r\n    \r\n    <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n    <!-- Created with sK1/UniConvertor (http://sk1project.org/) -->\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\"\r\n        style=\"shape-rendering:geometricPrecision; text-rendering:geometricPrecision; image-rendering:optimizeQuality; fill-rule:evenodd; clip-rule:evenodd\"\r\n        width=\"640pt\" height=\"615.2pt\" viewBox=\"0 0 640 615.2\"\r\n        fill-rule=\"evenodd\">\r\n        <defs>\r\n            <style type=\"text/css\">\r\n.ribnoe{fill: #3f44ff}\r\n.ribnoe:hover{\r\n    cursor:pointer;\r\n    fill:#ff0000;\r\n}\r\n</style>\r\n        </defs>\r\n        <g>\r\n            <path style=\"stroke:none;  fill: none;\"\r\n                d=\"M 0 0L 0 615.2L 640 615.2L 640 0L 0 0z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 246.934 61.0667C 246.578 61.4224 247.422 61.3777 247.466 61.3334C 247.822 60.9778 246.978 61.0221 246.934 61.0667z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 254.934 61.0667C 254.578 61.4224 255.422 61.3777 255.466 61.3334C 255.822 60.9778 254.978 61.0221 254.934 61.0667z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 245.6 61.6C 246.578 62.5561 246.736 62.6532 248 63.2C 247.216 61.7733 247.274 61.9245 245.6 61.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 243.2 63.2C 242.006 66.4189 241.466 68.6452 244 71.2C 244.733 64.675 249.484 62.6148 255.2 64.8C 253.466 59.5934 247.345 63.3962 243.2 63.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 254.4 61.6L 255.2 64L 256 64L 256 61.6L 254.4 61.6M 242.666 62.9333C 242.622 62.9777 242.578 63.8223 242.934 63.4667C 242.978 63.4221 243.022 62.5779 242.666 62.9333z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 243.2 62.4L 243.2 63.2C 244.55 63.3746 245.053 63.3792 246.4 63.2C 245.195 62.6536 244.548 62.5393 243.2 62.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 294.4 62.4L 294.4 63.2C 296.753 63.8968 298.27 64.663 300 66.4L 300.8 66.4C 299.756 63.2231 297.535 62.8348 294.4 62.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 248 63.2L 248 64L 252 64C 250.585 63.3769 249.571 63.2701 248 63.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 252.534 63.4667C 252.178 63.8224 253.022 63.7778 253.066 63.7334C 253.422 63.3779 252.578 63.4222 252.534 63.4667z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 288 68L 288.8 68C 291.813 62.8424 297.689 64.546 297.6 70.4C 292.707 71.2496 293.601 75.9518 293.6 80C 294.672 77.4515 300.785 68.1646 300.159 66.5482C 298.198 61.4791 288.441 62.3472 288 68z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 294.134 63.4667C 293.778 63.8224 294.622 63.7778 294.666 63.7334C 295.022 63.3779 294.178 63.4222 294.134 63.4667z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 295.734 63.4667C 295.378 63.8224 296.222 63.7778 296.266 63.7334C 296.622 63.3779 295.778 63.4221 295.734 63.4667z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 244.8 65.6L 244.8 66.4C 246.641 66.0823 247.923 65.6344 249.6 64.8C 247.781 64.473 246.575 64.9694 244.8 65.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 249.6 64L 249.6 64.8L 252 64.8C 251.002 64.2522 250.762 64.201 249.6 64z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 244 67.2C 246.118 75.3108 238.219 78.2052 240 86.4C 238.472 86.8632 237.333 87.188 239.2 88L 239.2 88.8C 237.685 89.172 236.578 89.6528 235.2 90.4L 236 88.8L 235.2 88.8C 227.358 91.3512 216.332 93.4184 213.6 102.4L 211.2 102.4C 207.302 96.536 194.714 102.192 188.8 100.8C 183.619 107.46 176.474 113.07 172.8 120.8C 177.406 120.69 182.045 116.427 186.314 117.138C 201.626 119.69 189.82 143.341 187.2 151.2C 193.472 151.218 202.118 153.367 205.61 159.275C 207.048 161.709 206.043 165.434 207.815 167.52C 211.132 171.426 218.893 173.172 222.869 176.482C 227.89 180.663 230.015 187.588 236.8 190.295C 240.141 191.628 243.704 188.598 247.197 188.95C 249.748 189.207 251.841 191.938 254.369 191.628C 257.19 191.282 258.79 187.514 261.604 186.59C 266.416 185.011 271.203 187.916 275.928 187.518C 282.405 186.973 285.413 183.651 292.8 185.171C 302.473 187.162 303.947 195.667 302.4 204L 307.204 204.729C 319.714 205.59 311.167 195.626 317.851 190.082C 322.018 186.626 333.11 187.869 338.4 187.2C 338.038 183.841 336.434 180.938 336 177.6C 339.112 177.265 346.914 175.902 348.781 173.253C 350.711 170.514 349.483 166.792 352.906 164.822C 355.686 163.222 360.105 164 363.2 164C 362.902 160.698 362.081 157.095 359.05 155.19C 356.248 153.431 348.602 153.724 350.4 148.8C 350.184 146.331 350.283 143.854 352.336 142.08C 354.558 140.159 358.193 139.943 360.728 138.326C 365.95 134.994 370.842 129.768 376.8 128C 376.8 118.049 373.482 108.089 369.03 99.2144C 366.257 93.6888 361.151 93.6304 361.6 86.4C 358.794 86.576 353.119 84.1896 350.882 85.6944C 349.082 86.9064 349.682 90.1744 348.914 91.9848C 346.838 96.8728 338.969 100.837 336 95.2C 333.294 95.916 330.809 96.656 328 96.8C 326.047 102.405 320.726 103.913 316.8 99.2C 311.694 101.458 307.955 102.968 302.4 104C 302.652 100.808 303.691 97.4608 302.288 94.404C 297.858 84.7536 285.693 77.2393 298.4 68L 298.4 66.4C 295.474 65.5353 292.641 65.6003 289.6 65.6C 287.33 79.8932 259.547 86.8888 263.2 67.2C 258.946 68.2233 255.88 68.1498 253.6 64L 244 67.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 255.2 64C 255.636 65.3082 255.492 65.164 256.8 65.6L 256.8 64L 255.2 64z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 264 65.6L 268.8 64.8C 266.777 63.9684 265.459 63.9255 264 65.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 253.6 64.8L 253.6 65.6L 256 66.4C 255.216 64.9733 255.274 65.1246 253.6 64.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 261.6 64.8L 261.6 65.6L 264 65.6C 263.002 65.0522 262.762 65.001 261.6 64.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 264.8 64.8L 265.6 65.6L 264.8 64.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 256 65.6L 256 66.4C 265.122 66.4825 260.372 71.4908 265.6 75.2C 264.474 70.7495 267.039 68.6567 268.8 64.8C 264.494 65.1398 260.337 65.6 256 65.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 290.4 64.8L 290.4 65.6L 297.6 65.6C 295.288 64.6296 292.901 64.8015 290.4 64.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 300.8 64.8L 300.8 67.2L 301.6 67.2C 301.399 66.0388 301.348 65.7987 300.8 64.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 241.6 65.6L 240.8 68.8L 241.6 68.8C 241.847 67.3933 241.925 66.9276 241.6 65.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 247.734 65.8666C 247.378 66.2224 248.222 66.1778 248.266 66.1334C 248.622 65.7778 247.778 65.8221 247.734 65.8666M 254.134 65.8666C 253.778 66.2224 254.622 66.1778 254.666 66.1334C 255.022 65.7778 254.178 65.8221 254.134 65.8666z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 288.8 65.6L 288.8 68.8L 289.6 68.8C 289.461 67.4518 289.346 66.805 288.8 65.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 240 66.4C 240.141 67.9025 240.35 68.9597 240.8 70.4L 241.6 70.4L 241.6 66.4L 240 66.4M 245.334 66.6666C 244.978 67.0223 245.822 66.9778 245.866 66.9333C 246.222 66.5779 245.378 66.6221 245.334 66.6666z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 255.2 66.4L 256 67.2L 255.2 66.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 256 66.4L 256 67.2L 262.4 67.2C 260.31 66.3218 258.268 66.4058 256 66.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 268 66.4C 267.051 67.3491 266.778 67.6671 266.4 68.8C 267.995 68.1222 268.559 67.9943 268 66.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 287.466 66.9333C 287.422 66.9776 287.378 67.8223 287.734 67.4667C 287.778 67.4221 287.822 66.5779 287.466 66.9333z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 256 67.2L 256 68L 260 68.8C 258.569 67.6627 257.835 67.4421 256 67.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 259.2 67.2L 259.2 68L 261.6 68C 260.602 67.4521 260.362 67.401 259.2 67.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 263.2 67.2L 262.4 73.6L 263.2 73.6C 263.482 71.3287 263.975 69.3583 263.2 67.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 287.2 68C 285.084 70.8578 282.889 73.467 281.6 76.8C 284.988 75.0516 287.109 71.3293 288.8 68L 287.2 68z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 244 68.8C 243.61 71.1356 244.034 70.8087 242.4 70.4L 242.4 75.2C 244.423 73.2196 245.088 71.4966 244 68.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 262.666 69.3334C 262.622 69.3776 262.578 70.2224 262.934 69.8666C 262.978 69.8221 263.022 68.9778 262.666 69.3334M 288 68.8L 285.6 73.6C 287.414 72.1016 288.498 71.1688 288 68.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 295.2 70.4C 296.874 70.0754 296.816 70.2266 297.6 68.8C 296.336 69.347 296.178 69.4438 295.2 70.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 241.866 70.1334C 241.822 70.1776 241.778 71.0223 242.134 70.6666C 242.178 70.6221 242.222 69.778 241.866 70.1334z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 244.8 70.4L 244 75.2L 244.8 75.2C 245.35 73.2645 245.537 72.2581 244.8 70.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 296.8 72C 298.064 71.4532 298.222 71.3561 299.2 70.4C 297.936 70.947 297.778 71.0438 296.8 72z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 292.8 71.2L 293.6 72L 292.8 71.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 293.6 71.2L 294.4 72L 293.6 71.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 239.2 76L 240 76L 242.4 72C 240.362 73.0981 239.85 73.7747 239.2 76z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 292.8 72L 292.8 80L 293.6 80C 293.6 77.2685 293.862 74.5306 292.8 72z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 241.6 72.8L 240.8 74.4L 242.4 74.4C 242.4 72.9174 242.64 73.3198 241.6 72.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 285.066 73.3334C 285.022 73.3776 284.978 74.2224 285.334 73.8666C 285.378 73.8221 285.422 72.9778 285.066 73.3334z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 294.666 73.3334C 294.622 73.3777 294.578 74.2222 294.934 73.8666C 294.978 73.8221 295.022 72.9778 294.666 73.3334z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 262.4 73.6C 262.725 75.274 262.574 75.2158 264 76C 263.447 74.8892 263.213 74.5116 262.4 73.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 263.466 74.1334C 263.422 74.1776 263.378 75.0223 263.734 74.6666C 263.778 74.6221 263.822 73.778 263.466 74.1334z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 282.4 73.6L 283.2 74.4L 282.4 73.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 292 73.6L 292 79.2L 292.8 79.2C 292.785 77.1652 292.788 75.4654 292 73.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 237.6 84.8L 239.2 84.8C 239.378 80.7384 240.773 78.0098 242.4 74.4C 238.138 76.5429 237.692 80.352 237.6 84.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 243.2 74.4L 242.4 76L 244 76C 244 74.5173 244.24 74.9199 243.2 74.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 281.6 74.4L 282.4 75.2L 281.6 74.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 264.266 75.7334C 264.222 75.7777 264.178 76.6223 264.534 76.2667C 264.578 76.2221 264.622 75.3779 264.266 75.7334z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 264.8 75.2L 264.8 77.6L 265.6 77.6C 265.399 76.4388 265.348 76.1987 264.8 75.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 265.6 75.2C 265.942 77.3157 266.257 77.9685 268 79.2C 267.345 77.5152 266.81 76.5222 265.6 75.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 272.534 75.4667C 272.178 75.8224 273.022 75.7776 273.066 75.7334C 273.422 75.3779 272.578 75.4221 272.534 75.4667z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 273.6 75.2L 273.6 76L 281.6 77.6C 279.734 74.7219 276.79 75.2025 273.6 75.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 280.8 75.2L 281.6 76L 280.8 75.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 283.466 75.7334C 283.422 75.7777 283.378 76.6222 283.734 76.2667C 283.778 76.2221 283.822 75.378 283.466 75.7334M 241.6 76L 242.4 76.8L 241.6 76z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 268.8 78.4L 268.8 79.2C 272.116 78.1802 274.872 76.9044 278.4 76.8C 274.9 75.3352 271.905 76.5134 268.8 78.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 240 76.8L 240 78.4C 241.308 77.964 241.164 78.1081 241.6 76.8L 240 76.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 270.4 80L 275.2 77.6C 272.824 77.0414 271.663 77.991 270.4 80z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 276 76.8L 276 77.6L 280.8 78.4L 280.8 77.6L 276 76.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 282.134 77.0667C 281.778 77.4223 282.622 77.3777 282.666 77.3334C 283.022 76.9778 282.178 77.0222 282.134 77.0667z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 267.2 77.6L 268 78.4L 267.2 77.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 265.6 78.4C 266.036 79.7083 265.892 79.564 267.2 80C 266.764 78.692 266.908 78.836 265.6 78.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 266.4 78.4L 267.2 79.2L 266.4 78.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 268 78.4L 268.8 79.2L 268 78.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 267.2 79.2L 267.2 80L 270.4 80C 269.195 79.4536 268.548 79.3393 267.2 79.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 271.2 79.2L 272 80L 271.2 79.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 294.4 79.2L 295.2 80L 294.4 79.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 239.466 80.5336C 239.422 80.5776 239.378 81.4224 239.734 81.0664C 239.778 81.0224 239.822 80.1776 239.466 80.5336z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 266.4 80L 266.4 80.8L 270.4 80.8C 268.985 80.1768 267.971 80.0704 266.4 80z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 293.066 80.5336C 293.022 80.5776 292.978 81.4224 293.334 81.0664C 293.378 81.0224 293.422 80.1776 293.066 80.5336z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 293.6 80L 294.4 83.2L 295.2 83.2C 294.749 81.7984 294.465 81.1664 293.6 80z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 294.4 80C 294.838 81.5 295.288 82.604 296 84L 296.8 84C 296.279 82.052 295.872 81.3736 294.4 80z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 295.2 80L 295.2 80.8C 296.488 81.8624 297.361 82.7064 298.4 84C 298.938 81.4568 297.508 80.6944 295.2 80z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 236.8 81.6L 235.2 86.4C 236.859 84.7864 237.53 83.8512 236.8 81.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 296.8 81.6C 297.028 89.2696 303.299 93.3176 303.2 101.6L 311.2 101.6L 311.2 100.8L 304.8 100.8C 306.086 93.5408 301.696 86.7688 296.8 81.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 236 82.4L 236 84.8L 236.8 84.8C 236.599 83.6384 236.548 83.3984 236 82.4M 348 83.2L 348.8 84L 348 83.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 347.2 92.8L 348 92.8C 348.818 89.1424 349.781 85.2056 353.6 84C 347.668 81.5984 347.532 88.5984 347.2 92.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 353.6 83.2L 353.6 84L 356.8 84C 355.595 83.4536 354.948 83.3392 353.6 83.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 232.8 84L 232 88L 234.4 87.2C 233.923 85.952 233.529 85.1016 232.8 84z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 296.266 84.5336C 296.222 84.5776 296.178 85.4224 296.534 85.0664C 296.578 85.0224 296.622 84.1776 296.266 84.5336z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 347.2 84L 347.2 89.6L 348 89.6C 347.985 87.5648 347.988 85.8656 347.2 84z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 350.4 84L 350.4 84.8L 353.6 84.8C 352.395 84.2536 351.748 84.1392 350.4 84z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 353.6 84L 353.6 84.8L 356.8 84.8C 355.595 84.2536 354.948 84.1392 353.6 84z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 356.8 84L 356.8 85.6C 363.2 86.3216 360.869 92.6768 366.4 93.6C 367.461 98.1248 370.46 101.661 372.8 105.6L 373.6 105.6C 373.842 103.765 374.063 103.03 375.2 101.6L 375.2 100.8C 370.953 97.7824 368.53 92.8768 364 90.4C 364.789 89.2176 364.8 89.4376 364.8 88C 362.123 85.0472 360.952 84.0496 356.8 84z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 233.6 84.8L 233.6 86.4L 235.2 86.4L 235.2 84.8L 233.6 84.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 230.4 88.8L 230.4 89.6C 233.784 89.1488 236.778 87.9128 238.4 84.8L 230.4 88.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 238.4 84.8L 238.4 86.4C 239.708 85.964 239.564 86.108 240 84.8L 238.4 84.8M 352.8 84.8L 352.8 85.6L 357.6 86.4C 355.954 85.1344 354.89 84.9392 352.8 84.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 363.2 84.8L 363.2 88L 364 88C 363.861 86.652 363.746 86.0048 363.2 84.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 239.2 85.6L 240 86.4L 239.2 85.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 296 85.6C 296.398 88.0528 296.829 88.8256 299.2 89.6C 298.27 87.8264 297.531 86.8848 296 85.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 358.134 85.8664C 357.778 86.2224 358.622 86.1776 358.666 86.1336C 359.022 85.7776 358.178 85.8224 358.134 85.8664z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 359.734 85.8664C 359.378 86.2224 360.222 86.1776 360.266 86.1336C 360.622 85.7776 359.778 85.8224 359.734 85.8664M 236.8 86.4L 236.8 88C 238.108 87.564 237.964 87.708 238.4 86.4L 236.8 86.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 356.8 86.4L 356.8 87.2L 359.2 87.2C 358.202 86.652 357.962 86.6008 356.8 86.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 361.6 86.4L 361.6 92L 362.4 92C 362.385 89.9648 362.388 88.2656 361.6 86.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 230.4 88L 230.4 88.8L 232.8 88.8C 231.802 88.252 231.562 88.2008 230.4 88z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 233.6 89.6L 236 88.8C 234.578 88.036 234.383 88.1872 233.6 89.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 235.2 90.4L 239.2 88.8C 237.132 88.0856 236.439 88.66 235.2 90.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 225.6 89.6L 225.6 90.4C 227.716 90.3384 229.013 90.4024 230.4 88.8L 225.6 89.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 360.8 88.8L 360.8 91.2L 361.6 91.2C 361.399 90.0384 361.348 89.7984 360.8 88.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 230.934 89.8664C 230.578 90.2224 231.422 90.1776 231.466 90.1336C 231.822 89.7776 230.978 89.8224 230.934 89.8664z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 299.734 89.8664C 299.378 90.2224 300.222 90.1776 300.266 90.1336C 300.622 89.7776 299.778 89.8224 299.734 89.8664M 348 89.6L 348 92.8L 348.8 92.8C 348.661 91.452 348.546 90.8048 348 89.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 349.066 90.1336C 349.022 90.1776 348.978 91.0224 349.334 90.6664C 349.378 90.6224 349.422 89.7776 349.066 90.1336z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 211.2 100L 211.2 100.8L 214.4 100.8C 215.966 95.664 222.181 92.3384 227.2 91.2C 219.92 88.3664 216.143 96.9512 211.2 100z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 227.2 90.4L 227.2 91.2L 229.6 91.2C 228.602 90.652 228.362 90.6008 227.2 90.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 300 90.4C 300.547 91.664 300.644 91.8216 301.6 92.8C 301.053 91.536 300.956 91.3784 300 90.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 215.2 93.6L 215.2 94.4C 217.363 93.9064 218.904 93.1648 220.8 92C 218.582 91.5448 217.142 92.4888 215.2 93.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 224 91.2L 224 92L 226.4 92C 225.402 91.452 225.162 91.4008 224 91.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 301.6 91.2L 301.6 93.6L 302.4 93.6C 302.199 92.4384 302.148 92.1984 301.6 91.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 303.2 91.2L 304 92L 303.2 91.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 349.066 91.7336C 349.022 91.7776 348.978 92.6224 349.334 92.2664C 349.378 92.2224 349.422 91.3776 349.066 91.7336M 304 92L 304.8 94.4L 305.6 94.4L 305.6 92L 304 92z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 220.8 92.8L 220.8 94.4C 222.108 93.964 221.964 94.108 222.4 92.8L 220.8 92.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 334.934 93.0664C 334.578 93.4224 335.422 93.3776 335.466 93.3336C 335.822 92.9776 334.978 93.0224 334.934 93.0664z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 336 92.8L 336 93.6L 338.4 94.4C 337.616 92.9736 337.674 93.1248 336 92.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 345.6 95.2C 346.766 94.3168 347.118 93.9656 348 92.8C 346.301 93.5192 346.319 93.5008 345.6 95.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 348 92.8L 348.8 93.6L 348 92.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 362.4 92.8L 363.2 93.6L 362.4 92.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 325.6 99.2C 333.094 95.3016 333.634 96.5344 341.6 98.4L 342.4 95.2C 340.885 95.572 339.778 96.0528 338.4 96.8C 336.226 90.248 327.027 93.864 325.6 99.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 347.2 93.6C 346.251 94.5488 345.978 94.8672 345.6 96C 347.195 95.3224 347.759 95.1944 347.2 93.6M 362.4 93.6L 363.2 94.4L 362.4 93.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 363.2 93.6L 363.2 94.4L 366.4 94.4C 365.195 93.8536 364.548 93.7392 363.2 93.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 400.8 93.6L 400.8 94.4L 404.8 94.4C 403.385 93.7768 402.371 93.6704 400.8 93.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 404.8 93.6L 408 98.4C 408.895 95.588 407.416 94.3928 404.8 93.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 214.4 94.4L 212.8 97.6L 216.8 95.2C 215.802 94.652 215.562 94.6008 214.4 94.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 218.934 94.6664C 218.578 95.0224 219.422 94.9776 219.466 94.9336C 219.822 94.5776 218.978 94.6224 218.934 94.6664M 302.4 94.4L 303.2 95.2L 302.4 94.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 338.4 94.4C 338.725 96.0744 338.574 96.016 340 96.8C 339.447 95.6896 339.212 95.3112 338.4 94.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 342.4 94.4L 343.2 95.2L 342.4 94.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 342.4 95.2L 342.4 96C 344.098 95.7544 344.549 95.6944 345.6 94.4L 342.4 95.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 364 94.4L 364 95.2L 366.4 95.2C 365.402 94.652 365.162 94.6008 364 94.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 384 96.8C 385.634 96.084 387.062 95.5712 388.8 95.2C 386.496 94.3216 385.32 94.7568 384 96.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 392 94.4L 392 95.2L 394.4 95.2C 393.401 94.652 393.162 94.6008 392 94.4z\" />\r\n            <path style=\"stroke:none; fill:#010101\"\r\n                d=\"M 363.2 164C 360.052 164.009 353.443 163.45 351.19 166.082C 349.283 168.312 350.218 171.795 347.749 173.806C 344.932 176.1 339.415 176.742 336 178.4C 337.07 181.412 338.226 183.966 338.4 187.2C 333.068 187.621 322.33 186.678 317.851 189.622C 313.534 192.46 316.73 199.239 314.257 202.946C 311.982 206.355 305.689 204.416 302.4 204C 305.322 191.727 293.321 177.243 280.18 185.166C 275.762 187.829 278.154 192.765 277.374 196.8C 276.635 200.619 273.03 207.994 270.427 210.942C 266.614 215.262 258.856 208.596 253.635 211.454C 244.291 216.57 256.694 220.615 256.221 226.4C 255.762 232.013 251.358 234.651 252.8 240.8C 246.023 244.448 244.934 258.615 238.977 264.377C 236.672 266.606 230.36 267.672 229.973 271.286C 229.344 277.16 241.996 280.142 239.202 286.253C 237.419 290.152 231.598 291.36 228 292.607C 219.335 295.611 205.914 297.027 199.722 304.3C 192.269 313.053 202.855 320.235 200.8 328.8C 195.755 327.302 193.849 323.141 189.528 320.822C 181.687 316.614 170.671 316.283 163.306 310.056C 160.679 307.835 160.494 304.518 158.461 301.996C 155.762 298.649 149.362 295.95 145.6 293.878C 142.39 292.11 138.338 291.712 135.37 289.596C 133.379 288.176 132.523 285.474 130.23 284.482C 124.288 281.914 119.895 284.639 115.958 277.588C 113.43 273.062 117.749 265.129 118.4 260C 112.609 264.074 111.338 276.847 115.904 282.137C 119.867 286.726 125.173 283.791 129.433 286.882C 137.438 292.69 147.001 296.299 155.085 302.474C 157.991 304.695 158.078 308.382 160.399 311.018C 163.176 314.169 168.894 314.956 172.8 316L 172.8 316.8C 160.754 319.942 167.447 328.922 166.779 336.769C 166.198 343.596 161.971 346.618 164.371 354.4C 167.291 363.872 174.333 373.621 183.2 378.292C 186.878 380.23 199.16 382.483 200.523 386.715C 201.618 390.113 193.062 395.893 191.626 399.2C 190.151 402.598 191.083 407.256 188.389 410.053C 185.288 413.273 180.541 411.11 176.8 412.482C 173.235 413.791 171.045 418.283 167.2 418.842C 164.658 419.21 162.38 416.922 160 416.335C 156.767 415.538 152.909 415.924 149.6 416.012C 144.005 416.16 139.899 419.923 134.4 420.422C 127.743 421.026 113.994 407.098 110.4 419.2C 120.116 414.866 121.141 420.673 130.4 422.22C 141.102 424.009 151.246 412.516 161.597 419.722C 168.343 424.418 171.38 435.366 171.188 443.2C 171.112 446.304 168.883 451.27 170.574 454.065C 174.726 460.921 192.799 457.075 199.2 456.8C 199.198 460.869 196.915 468.225 199.222 471.749C 200.891 474.298 205.039 475.079 207.2 477.6C 196.537 481.194 193.076 487.362 186.05 494.906C 182.449 498.774 183.857 503.523 177.6 504.8C 177.346 494.331 168.486 498.522 161.6 500C 160.79 495.822 160.363 489.896 156.969 486.882C 153.106 483.455 147.342 485.886 146.4 490.4C 137.541 483.78 124.49 485.97 115.2 491.2C 113.814 484.901 122.609 478.878 117.806 473.054C 115.382 470.115 109.062 471.11 105.6 470.617C 99.24 469.71 86.5232 467.545 80.9704 471.682C 75.4432 475.802 72.4946 483.452 66.3685 487.913C 62.6579 490.615 53.821 489.471 51.3432 492.494C 50.0625 494.056 50.5111 496.551 49.8105 498.369C 46.6236 506.634 46.648 508.364 56.8 508.8C 56.3102 510.457 56.0523 511.863 56.0111 513.604C 55.633 529.582 70.8618 514.543 76.6914 524.804C 82.448 534.935 83.6272 546.991 88.704 556.936C 90.0416 559.556 89.4216 564.486 91.7928 566.377C 94.5464 568.574 104.195 563.474 107.997 563.226C 115.775 562.718 121.738 567.166 130.385 564.077C 134.052 562.767 134.891 558.47 138.247 557.255C 141.604 556.038 144.981 560.258 147.996 556.546C 153.555 549.698 145.114 540.118 150.747 533.903C 156.55 527.501 172.098 526.977 174.4 519.2C 177.48 520.145 178.754 523.102 181.674 524.174C 183.967 525.017 186.455 524.036 188.8 524.827C 193.774 526.506 203.058 535.912 203.917 541.139C 204.588 545.224 201.722 549.71 200.8 553.6C 203.406 553.714 206.484 553.806 208.546 555.651C 210.696 557.575 210.381 560.761 212.007 563.02C 214.915 567.06 229.397 572.816 232.8 568C 227.59 568.289 218.415 566.071 214.614 562.177C 209.618 557.058 212.56 552.409 203.2 552C 205.694 546.657 205.168 540.329 207.872 535.234C 209.727 531.739 213.602 530.257 216 527.2L 216.8 527.2C 219.106 529.863 221.598 532.115 224.8 533.6C 229.048 520.567 233.787 525.869 243.864 521.686C 253.138 517.837 260.486 511.383 270.4 508C 271.994 511.042 275.107 515.474 278.474 516.67C 282.756 518.19 287.384 517.206 290.749 521.112C 293.227 523.99 292.798 528.466 292.8 532C 299.645 531.995 305.237 528.819 312 528.8L 312 527.2C 305.582 527.2 300.558 530.08 294.4 530.4C 294.4 527.017 294.986 522.518 292.85 519.623C 288.107 513.196 279.706 516.919 275.182 509.599C 268.305 498.47 273.342 486.304 267.982 475.2C 266.097 471.298 263.141 465.155 260.29 461.9C 256.49 457.562 252.571 455.894 252 449.6L 250.4 449.6C 250.494 460.785 262.642 467.312 266.606 477.612C 270.232 487.029 267.139 496.912 271.2 506.4C 259.081 507.365 252.474 514.631 242.328 519.75C 234.085 523.908 225.91 517.662 224 530.4C 217.157 524.993 207.658 525.828 205.6 536C 200.799 532.816 198.274 527.513 193.566 524.504C 189.825 522.114 186.104 523.178 182.483 521.51C 179.116 519.96 178.479 517.735 174.4 517.6C 174.478 514.267 174.87 509.304 177.934 507.219C 179.886 505.892 182.445 506.466 184.053 504.453C 192.311 494.116 195.082 483.914 208.8 479.2C 208.183 472.422 203.704 474.516 200.834 470.056C 199.025 467.246 200.8 460.178 200.8 456.8L 204.8 456.8L 204.8 455.2C 196.883 455.2 188.65 456.875 180.8 455.649C 178.33 455.263 174.271 454.962 172.854 452.558C 170.959 449.344 172.901 441.406 172.788 437.6C 172.626 432.166 169.858 426.274 167.2 421.6C 171.75 420.091 174.24 415.906 178.472 414.194C 182.163 412.698 187.666 415.128 190.514 411.653C 192.901 408.739 191.665 404.122 193.415 400.8C 200.074 388.162 209.503 383.314 223.2 383.2L 222.4 386.4C 231.466 389.261 233.984 384.839 241.603 382.231C 246.51 380.552 251.782 380.543 256.8 379.465C 259.908 378.797 265.446 375.252 268.485 376.897C 270.835 378.17 271.275 381.792 272.318 384C 274.298 388.19 278.278 392.66 276.795 397.6C 275.266 402.694 256.546 414.514 267.212 417.357L 272 418.4C 270.782 421.136 270.065 424.679 267.777 426.742C 265.79 428.534 262.734 428.474 261.094 430.654C 259.022 433.407 259.701 437.121 257.806 439.917C 255.488 443.339 252.466 444.575 251.2 448.8C 259.279 445.974 258.781 438.745 262.694 432.918C 264.362 430.434 267.324 430.471 269.418 428.546C 277.341 421.262 272.138 416.727 264.8 414.4C 267.791 410.383 272.57 408.746 275.685 404.796C 283.146 395.334 275.931 384.874 271.2 376C 275.67 377.94 280.322 382.626 284.831 383.742C 292.134 385.55 306.116 381.39 313.6 380C 314.7 389.762 320.699 382.28 325.6 383.012C 328.697 383.475 330.526 387.604 333.603 388.682C 339.901 390.886 351.776 385.29 356.242 391.318C 359.652 395.921 351.482 409.622 350.4 415.2C 355.101 415.183 358.162 414.681 359.2 409.6L 360 409.6C 360.701 411.854 363.771 423.194 364.8 418.4L 365.6 418.4C 368.008 420.491 374.089 411.166 375.2 408.8C 370.862 410.035 368.024 413.487 366.4 417.6C 364.174 413.441 362.791 408.078 357.6 407.2C 357.086 410.529 355.826 412.142 352.8 413.6C 354.109 406.714 363.062 396.349 358.393 389.718C 353.948 383.408 341.476 389.327 335.232 386.986C 331.611 385.628 330.238 381.22 326.389 380.382C 322.801 379.601 316.814 386.465 315.631 379.984C 314.467 373.605 325.402 367.106 329.736 363.93C 337.798 358.019 350.594 359.946 359.997 356.32C 366.313 353.886 371.894 345.925 376 340.8L 376.8 340.8C 379.661 344.074 383.223 347.027 387.2 348.8C 390.566 345.226 391.632 339.543 394.868 336.482C 397.496 333.998 402.475 336.505 404.202 332.618C 406.097 328.353 401.186 325.559 401.029 321.6C 400.834 316.683 405.122 313.135 406.4 308.8C 415.075 307.83 413.591 294.621 417.223 288.012C 420.392 282.247 426.926 282.063 432.8 281.6L 432.8 280C 422.03 280.089 415.425 282.503 412.392 293.6C 411.517 296.802 411.966 301.057 410.378 303.953C 408.991 306.482 406.313 306.761 404.272 308.467C 401.493 310.791 399.314 316.476 398.744 320C 398.074 324.139 402.84 327.51 401.967 331.082C 401.062 334.785 395.53 332.799 393.155 334.419C 390.74 336.067 388.69 343.607 387.2 346.4L 386.4 346.4C 373.747 333.086 370.239 346.77 359.188 353.918C 355.142 356.534 349.562 354.902 346.4 359.2L 345.6 359.2L 344.8 359.2C 341.354 355.257 331.801 359.546 328.136 361.89C 321.523 366.121 317.282 373.593 311.116 377.806C 307.214 380.472 292.07 382.257 287.212 381.794C 279.918 381.1 276.507 372.898 268 374.4C 268.835 371.555 270.957 368.672 270.99 365.672C 271.05 360.308 268.465 353.533 270.772 348.084C 273.063 342.672 282.033 337.665 286.053 333.288C 289.157 329.91 287.324 324.814 289.211 320.883C 290.889 317.39 294.506 315.821 296 312C 301.118 314.389 305.614 316.447 311.2 317.6C 309.638 315.12 307.45 314.853 304.8 313.792C 302.45 312.851 300.173 311.126 297.632 310.762C 286.835 309.216 288.426 326.497 284.546 331.097C 280.287 336.146 271.818 340.647 268.826 346.434C 266.982 350 269.853 354.012 267.406 357.51C 264.313 361.93 257.439 359.83 253.6 364C 248.122 358.538 245.626 345.41 245.6 337.6C 241.314 336.327 241.767 332.915 238.856 330.203C 236.081 327.618 231.892 327.306 229.782 323.914C 227.316 319.946 228.542 315.245 224 312.8C 226.602 305.512 222.436 303.33 218.4 297.6C 224.287 297.462 242.83 292.58 242.174 284.798C 241.708 279.281 234.783 274.776 231.2 271.2C 239.743 267.881 246.581 261.206 248.8 252C 249.749 252.829 250.083 253.071 251.2 253.6C 249.906 243.306 266.32 223.198 252 217.6C 257.046 207.041 265.791 219.164 272.027 213.118C 274.847 210.382 278.37 202.222 279.02 198.4C 279.578 195.122 278.614 191.193 280.75 188.316C 285.462 181.971 297.758 188.271 300.434 193.601C 302.35 197.414 300.973 201.575 300.8 205.6C 312.421 207.069 327.666 210.883 339.2 209.452C 347.236 208.454 355.11 203.295 363.2 203.2L 363.2 204.8C 355.89 209.114 371.438 218.805 375.818 218.058C 377.938 217.698 378.318 215.395 378.33 213.596C 378.35 210.653 376.397 207.768 376.842 204.872C 377.465 200.823 380.231 197.202 380.8 192.8L 381.6 192.8C 384.938 199.374 393.112 201.61 396.753 208.728C 399.452 214.005 395.102 220.736 396.43 226.397C 397.937 232.826 413.907 236.315 420 236.8C 420.738 241.054 424.376 240.328 426.718 243.382C 429.845 247.462 426.078 253.302 432.8 254.4C 431.731 260.157 429.892 275.45 435.2 279.2C 434.74 273.374 432.731 266.599 433.782 260.801C 434.451 257.117 437.761 255.849 439.193 252.697C 440.709 249.358 440.537 244.445 441.312 240.8C 442.369 235.83 444.628 225.543 450.296 223.677C 453.83 222.514 458.134 229.278 462.4 229.6C 457.908 218.411 472.759 211.209 482.4 213.396C 486.511 214.329 491.662 214.002 492 219.2C 493.861 219.904 495.651 220.394 497.6 220.8C 496.31 224.338 496.002 227.454 496 231.2C 500.786 233.561 500.776 237.848 502.492 242.4C 506.258 252.393 508.143 263.937 512.8 273.6C 509.511 273.6 504.505 272.758 502.082 275.547C 498.072 280.165 503.538 284.97 495.999 287.945C 486.314 291.765 481.1 286.303 472 286.81C 465.53 287.171 464.466 293.622 459.185 295.418C 454.533 296.999 450.282 293.054 445.6 292.8C 445.936 294.852 446.78 297.335 448.8 295.2L 449.6 295.2C 458.888 304.919 463.725 291.237 471.2 289.178C 474.714 288.21 477.614 290.693 480.8 291.622C 485.976 293.132 498.246 291.713 502.134 287.622C 505.026 284.578 501.147 279.936 504.089 276.889C 507.086 273.785 513.435 277.302 514.4 272.8L 515.2 272.8C 516.861 278.25 520.747 275.366 523.2 272L 524 272C 525.41 274.779 525.254 279.321 527.78 281.254C 534.235 286.195 543.894 283.635 550.253 289.77C 558.035 297.279 556.8 308.541 556.8 318.4C 561.311 318.594 565.588 318.906 566.4 324C 573.301 324.001 576.922 326.799 583.2 328.8C 577.794 336.225 571.415 334.087 569.6 344.8C 563.98 344.801 559.866 348.322 555.129 348.602C 549.075 348.961 543.643 343.824 536.8 344.8C 537.732 350.84 545.057 354.522 541.918 361.418C 539.346 367.068 531.217 364.45 529.6 372.8L 524 372.8C 522.706 377.271 517.269 380.458 512.801 377.937C 509.656 376.163 507.706 372.93 504.729 370.99C 502.078 369.266 498.804 370.046 496.106 368.546C 492.813 366.714 491.221 362.411 487.997 360.146C 482.245 356.103 477.206 356.812 471.2 354.393C 467.99 353.099 465.781 350.539 462.4 349.6C 466.366 358.027 473.885 355.164 480.8 358.722C 486.341 361.572 489.037 367.194 493.839 370.146C 496.74 371.929 500.285 371.03 503.2 373.147C 506.214 375.337 508.406 378.994 512 380.318C 517.119 382.202 524.692 380.107 525.6 374.4L 531.2 374.4C 531.772 372.609 536.461 363.728 538.346 369.09C 539.154 371.387 537.658 375.119 537.6 377.6C 545.501 379.198 547.915 388.038 553.103 393.188C 556.412 396.474 560.858 400.892 564.803 403.317C 569.61 406.27 575.184 406.397 577.021 412.8C 579.428 421.19 572.483 420.13 569.094 425.644C 566.053 430.59 565.925 436.582 562.3 441.485C 557.247 448.319 538.282 453.726 530.4 452.8C 528.999 461.582 518.001 454.21 512.136 455.419C 502.754 457.353 494.354 454.38 484.8 455.285C 481.218 455.624 478.634 458.192 475.2 458.794C 466.958 460.238 461.336 458.101 456.8 467.2L 456 467.2C 455.921 460.526 449.237 455.281 442.619 459.343C 439.498 461.259 436.472 468.83 431.547 464.974C 428.639 462.698 428.807 455.431 427.879 452C 425.742 444.097 422.426 439.936 417.6 433.6C 424.325 429.458 409.166 417.186 404 416C 399.65 423.926 384.507 422.231 376.8 420.8C 378.354 426.11 396.87 423.311 401.585 422.004C 403.41 421.498 405.258 419.492 407.23 419.874C 409.094 420.236 417.006 429.304 418.4 431.2C 416.225 432.458 415.702 433.54 415.2 436C 426.807 444.2 423.681 455.352 428.8 466.4C 425.581 467.024 418.942 467.036 416.943 469.947C 414.159 474.002 416.8 483.262 416.8 488C 416.8 502.911 413.761 517.112 414.4 532L 416 532C 415.962 518.026 418.4 504.438 418.4 490.4C 418.4 485.927 416.256 475.936 418.434 472.182C 421.262 467.31 431.313 468.59 435.999 467.737C 440.776 466.866 441.081 462.699 444.886 460.894C 450.408 458.275 454.251 464.224 454.4 468.8C 459.594 468.4 459.858 464.029 464.083 462.19C 468.305 460.354 473.257 461.525 477.6 460.466C 480.438 459.774 482.707 457.669 485.6 457.146C 494.793 455.486 504.253 459.12 513.736 457.27C 518.831 456.276 530.518 463.737 532 455.2C 540.173 455.131 558.243 450.291 563.72 443.852C 567.782 439.077 567.842 433.201 570.786 428.015C 574.96 420.665 582.556 420.658 578.374 409.612C 576.374 404.328 571.31 404.405 567.2 401.81C 561.713 398.344 557.056 392.906 552 388.8L 552 388L 556.8 384.8C 561.696 392.352 573.834 383.756 578.4 380C 578.402 382.741 577.941 386.266 579.794 388.549C 582.89 392.362 594.659 392.489 597.077 387.882C 599.81 382.674 595.067 379.201 593.994 374.474C 593.43 371.998 595.513 370.393 597.632 369.608C 604.486 367.071 610.127 375.155 616 376.8C 613.465 371.378 594.926 359.327 591.658 369.686C 589.964 375.06 597.17 380.902 595.522 384.885C 594.249 387.966 585.172 386.858 582.4 388.8C 581.191 386.602 580.581 380.502 578.718 379.269C 576.861 378.04 574.331 379.967 572.812 380.926C 567.461 384.306 564.822 385.6 558.4 385.6C 558.966 381.958 561.357 380.529 563.2 377.6C 557.412 378.229 554.298 382.48 550.4 386.4C 548.295 381.67 544.431 376.38 540 373.6C 545.15 362.426 552.959 373.653 560.716 369.454C 567.089 366.004 569.676 351.185 572 344.8L 574.4 344.8C 579.892 356.57 601.954 367.736 614.4 369.6C 611.846 365.734 605.698 364.441 601.612 362.504C 596.027 359.858 589.498 355.833 584.871 351.737C 580.502 347.869 578.325 343.546 572 343.2C 574.606 335.785 579.414 337.827 583.55 332.682C 586.966 328.429 585.886 321.61 590.663 318.094C 594.654 315.156 600.823 319.794 603.978 314.294C 607.883 307.482 601.131 294.627 593.6 296C 593.685 285.748 595.337 281.95 605.6 283.2C 605.51 279.012 602.894 273.683 604.483 269.674C 605.906 266.087 611.527 265.56 611.834 261.516C 612.221 256.43 606.013 251.874 605.267 246.4C 604.81 243.045 607.119 238.256 605.546 235.318C 603.137 230.821 598.002 234.87 594.4 233.898C 581.868 230.518 569.084 222.852 572.8 207.2C 578.58 210.136 581.05 218.367 588 217.6C 586.65 213.358 582.374 209.132 578.4 207.2C 579.886 205.081 579.972 203.371 580 200.8C 578.326 201.125 578.384 200.974 577.6 202.4L 574.4 200.8C 578.686 195.969 575.852 192.295 578.102 187.287C 580.343 182.298 587.728 182.413 587.046 175.2C 586.658 171.092 582.036 169.063 581.69 165.029C 581.368 161.258 588.534 150.908 582.282 149.054C 569.913 145.387 555.865 157.615 545.139 161.258C 540.411 162.865 532.708 159.104 528 158.133C 522.47 156.993 513.534 157.167 511.546 150.368C 509.514 143.413 512.795 135.855 512.8 128.8C 506.251 129.653 498.494 137.8 492.797 137.506C 488.494 137.285 482.116 133.013 481.054 128.799C 480.338 125.958 482.124 120.488 478.282 119.466C 472.582 117.95 467.764 124.506 462.403 123.087C 458.068 121.94 459.061 118.034 456.298 115.99C 453.846 114.176 443.868 110.694 440.8 110.447C 435.862 110.052 431.666 115.819 427.863 114.806C 418.566 112.329 413.417 101.37 406.793 95.8864C 400.274 90.4912 380.201 96.3656 374.882 101.637C 368.162 108.3 381.428 119.92 377.082 126.22C 373.612 131.252 363.845 136.523 358.4 139.233C 354.563 141.142 350.051 142.018 349.98 147.2C 349.862 155.813 361.694 154.348 363.2 164z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 212.8 95.2L 212.8 96.8C 214.108 96.364 213.964 96.508 214.4 95.2L 212.8 95.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 216.8 96.8C 218.064 96.2536 218.222 96.156 219.2 95.2C 217.936 95.7472 217.778 95.844 216.8 96.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 325.6 95.2C 324.811 96.3824 324.8 96.1624 324.8 97.6C 326.213 96.8168 326.364 96.6224 325.6 95.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 328.8 96L 328.8 96.8L 334.4 96C 332.33 95.148 330.943 95.3752 328.8 96z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 385.6 95.2L 385.6 96L 390.4 96C 388.758 95.3008 387.402 95.2376 385.6 95.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 303.2 96L 304 96.8L 303.2 96z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 316.8 96L 316.8 96.8L 320 97.6C 318.949 96.3056 318.498 96.2456 316.8 96z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 331.734 96.2664C 331.378 96.6224 332.222 96.5776 332.266 96.5336C 332.622 96.1776 331.778 96.2224 331.734 96.2664z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 336.266 96.5336C 336.222 96.5776 336.178 97.4224 336.534 97.0664C 336.578 97.0224 336.622 96.1776 336.266 96.5336z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 342.934 96.2664C 342.578 96.6224 343.422 96.5776 343.466 96.5336C 343.822 96.1776 342.978 96.2224 342.934 96.2664z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 375.2 103.2C 376.193 109.084 382.374 121.568 380.338 127.032C 379.263 129.916 375.306 130.737 373.028 132.366C 366.468 137.062 359.97 140.337 352.8 144C 353.63 146.814 352.987 148.496 352 151.2C 355.724 152.086 359.391 152 363.2 152C 362.752 155.939 365.917 160.148 364.317 163.882C 362.359 168.45 356.389 164.763 353.282 167.222C 351.293 168.798 352.282 172.21 351.057 174.282C 349.118 177.558 341.935 178.966 338.4 179.2L 340.661 184.003C 344.05 194.567 323.082 188.705 318.882 192.022C 316.143 194.186 317.186 202.347 316.8 205.6C 323.885 205.605 331.435 208.797 338.4 207.826C 345.549 206.83 352.169 202.405 359.2 201.107C 363.162 200.376 365.434 202.305 367.2 205.6L 362.4 207.2L 362.4 208.8C 367.238 211.049 371.314 214.385 376 216.8C 377.023 212.077 373.511 209.075 373.969 204.803C 374.275 201.939 377.142 200.229 377.939 197.529C 378.495 195.645 377.534 192.442 379.018 190.966C 381.69 188.311 384.664 193.29 386.147 194.758C 390.703 199.264 397.142 201.026 399.506 208C 401.58 214.118 395.69 221.843 399.343 227.818C 402.918 233.664 412.126 226.908 414.4 234.4L 421.6 234.4C 421.996 239.486 425.452 238.474 428.238 241.823C 430.565 244.622 430.39 248.586 430.4 252L 435.2 253.6C 437.775 248.28 437.058 242.306 438.845 236.8C 439.943 233.415 442.449 230.373 444.062 227.2C 446.41 222.578 449.688 217.425 455.2 221.6C 462.658 219.643 464.916 211.434 471.274 209.533C 477.204 207.76 484.11 213.21 490.4 212C 489.233 208.206 487.269 204.683 486.4 200.8C 490.054 200.141 493.108 198.083 496.8 197.6C 495.465 192.648 489.835 187.649 490.002 182.403C 490.202 176.112 495.762 174.863 499.988 172.393C 506.692 168.474 512.823 164.801 520 161.6L 520 160.8C 517.158 159.077 513.094 157.667 511.086 154.929C 506.731 148.986 509.054 137.701 510.4 131.2C 504.959 133.436 499.978 139.157 494.4 140.348C 482.839 142.817 479.025 129.386 477.6 121.6C 468.819 121.984 457.214 132.17 455.2 117.6C 447.683 116.199 435.858 106.747 432.8 118.4C 430.254 118.569 428.065 119.45 425.6 120C 424.656 114.009 418.644 112.141 414.471 108.549C 410.884 105.46 408.255 99.3008 404.42 97.0232C 396.03 92.0392 383.167 101.138 375.2 103.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 200 96.8L 200 97.6L 205.6 97.6C 203.734 96.812 202.034 96.8152 200 96.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 216 96.8L 216.8 97.6L 216 96.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 305.6 96.8L 304.8 100.8L 311.2 100.8L 311.2 100C 308.813 99.3664 307.351 98.5368 305.6 96.8M 314.134 97.0664C 313.778 97.4224 314.622 97.3776 314.666 97.3336C 315.022 96.9776 314.178 97.0224 314.134 97.0664z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 313.6 97.6L 313.6 98.4C 315.08 98.5616 316.12 98.5616 317.6 98.4C 318.674 101.637 320.852 101.562 324 101.6L 324 100.8C 321.134 100.346 320.046 99.5936 319.2 96.8C 317.246 96.8872 315.502 97.1424 313.6 97.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 337.334 97.0664C 336.978 97.4224 337.822 97.3776 337.866 97.3336C 338.222 96.9776 337.378 97.0224 337.334 97.0664z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 341.6 96.8L 342.4 97.6L 341.6 96.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 370.4 96.8C 371.56 98.0864 372.041 98.4512 373.6 99.2C 372.619 97.572 372.238 97.3392 370.4 96.8M 198.4 97.6L 198.4 98.4L 206.4 98.4C 203.87 97.3384 201.131 97.6 198.4 97.6M 207.2 97.6L 207.2 98.4L 212.8 98.4C 210.934 97.612 209.234 97.6152 207.2 97.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 212.8 97.6C 204.59 100.026 195.402 96.8008 187.2 99.2L 187.2 100L 207.2 100C 209.257 99.9992 213.967 100.697 212.8 97.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 214.666 98.1336C 214.622 98.1776 214.578 99.0224 214.934 98.6664C 214.978 98.6224 215.022 97.7776 214.666 98.1336z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 312.8 97.6L 312 99.2C 313.01 98.4232 313.114 98.6448 312.8 97.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 319.466 98.1336C 319.422 98.1776 319.378 99.0224 319.734 98.6664C 319.778 98.6224 319.822 97.7776 319.466 98.1336z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 322.4 100C 324.238 99.4608 324.619 99.228 325.6 97.6C 324.041 98.3488 323.56 98.7136 322.4 100z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 336.8 97.6L 336.8 98.4L 340.8 99.2L 340.8 98.4L 336.8 97.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 341.6 97.6L 342.4 98.4L 341.6 97.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 382.4 101.6C 384.886 100.738 385.986 99.9344 387.2 97.6C 384.99 98.6392 383.869 99.6424 382.4 101.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 405.866 98.1336C 405.822 98.1776 405.778 99.0224 406.134 98.6664C 406.178 98.6224 406.222 97.7776 405.866 98.1336z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 305.066 98.9336C 305.022 98.9776 304.978 99.8224 305.334 99.4664C 305.378 99.4224 305.422 98.5776 305.066 98.9336z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 311.2 101.6C 313.21 100.77 314.094 100.254 315.2 98.4C 312.974 99.0496 312.298 99.5624 311.2 101.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 316 98.4L 316.8 100.8L 317.6 100.8L 317.6 98.4L 316 98.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 327.2 98.4L 328 99.2L 327.2 98.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 340.8 98.4L 341.6 99.2L 340.8 98.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 378.934 98.6664C 378.578 99.0224 379.422 98.9776 379.466 98.9336C 379.822 98.5776 378.978 98.6224 378.934 98.6664M 185.6 99.2L 185.6 101.6C 186.556 100.622 186.653 100.464 187.2 99.2L 185.6 99.2M 319.2 99.2L 319.2 100L 322.4 100C 321.195 99.4536 320.548 99.3392 319.2 99.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 324 101.6C 325.539 100.799 325.678 100.738 326.4 99.2C 324.701 99.9192 324.719 99.9008 324 101.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 326.666 99.7336C 326.622 99.7776 326.578 100.622 326.934 100.266C 326.978 100.222 327.022 99.3776 326.666 99.7336z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 373.6 99.2L 373.6 100L 378.4 100C 376.758 99.3008 375.402 99.2376 373.6 99.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 383.2 99.2L 384 100L 383.2 99.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 408.8 99.2C 409.864 101.278 410.749 102.073 412.8 103.2C 411.782 101.157 410.853 100.206 408.8 99.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 183.2 106.4L 184 106.4C 185.697 104.217 187.417 102.497 189.6 100.8C 186.039 100.085 184.07 103.309 183.2 106.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 190.134 100.266C 189.778 100.622 190.622 100.578 190.666 100.534C 191.022 100.178 190.178 100.222 190.134 100.266z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 191.2 100L 191.2 100.8L 195.2 100.8C 193.785 100.177 192.771 100.07 191.2 100z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 195.2 100L 195.2 100.8L 198.4 100.8C 197.195 100.254 196.548 100.139 195.2 100M 205.6 100L 205.6 100.8L 208 100.8C 207.002 100.252 206.762 100.201 205.6 100z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 210.4 100L 211.2 100.8L 210.4 100z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 302.4 100L 302.4 103.2L 303.2 103.2C 303.061 101.852 302.946 101.205 302.4 100z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 320 100L 320 100.8L 324 100.8C 322.585 100.177 321.571 100.07 320 100M 373.6 100L 373.6 100.8L 377.6 100.8C 376.185 100.177 375.171 100.07 373.6 100M 381.6 100L 381.6 101.6C 382.908 101.164 382.764 101.308 383.2 100L 381.6 100z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 189.6 100.8L 189.6 101.6L 196 101.6C 193.91 100.722 191.868 100.806 189.6 100.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 211.2 100.8L 211.2 101.6L 213.6 101.6C 212.602 101.052 212.362 101.001 211.2 100.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 312 100.8L 312 102.4C 313.308 101.964 313.164 102.108 313.6 100.8L 312 100.8M 317.6 100.8L 318.4 101.6L 317.6 100.8M 325.334 101.066C 324.978 101.422 325.822 101.378 325.866 101.334C 326.222 100.978 325.378 101.022 325.334 101.066z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 372.8 100.8L 373.6 101.6L 372.8 100.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 380.534 101.066C 380.178 101.422 381.022 101.378 381.066 101.334C 381.422 100.978 380.578 101.022 380.534 101.066z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 184.8 101.6L 185.6 102.4L 184.8 101.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 187.2 101.6L 184.8 104.8C 186.514 103.895 187.279 103.546 187.2 101.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 211.2 101.6L 211.2 102.4L 213.6 102.4C 212.602 101.852 212.362 101.801 211.2 101.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 303.2 101.6L 303.2 104L 304 104C 303.799 102.838 303.748 102.598 303.2 101.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 304 101.6L 304 102.4L 307.2 102.4C 305.995 101.854 305.348 101.739 304 101.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 307.2 101.6L 307.2 102.4L 312 102.4C 310.358 101.701 309.002 101.638 307.2 101.6M 318.4 101.6L 318.4 102.4L 324.8 102.4C 322.71 101.522 320.668 101.606 318.4 101.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 378.4 101.6L 378.4 102.4L 380.8 102.4C 379.802 101.852 379.562 101.801 378.4 101.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 304 102.4L 304 104C 305.308 103.564 305.164 103.708 305.6 102.4L 304 102.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 305.6 102.4L 305.6 103.2L 311.2 103.2C 309.334 102.412 307.634 102.415 305.6 102.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 369.866 102.934C 369.822 102.978 369.778 103.822 370.134 103.466C 370.178 103.422 370.222 102.578 369.866 102.934z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 370.4 102.4L 370.4 104.8L 371.2 104.8C 370.999 103.638 370.948 103.398 370.4 102.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 371.2 102.4L 372.8 109.6L 373.6 109.6C 373.42 106.798 372.833 104.696 371.2 102.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 302.4 103.2L 303.2 104L 302.4 103.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 178.4 108L 183.2 104.8C 180.656 104.25 179.685 105.938 178.4 108M 409.6 104L 410.4 104.8L 409.6 104z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 173.6 115.2L 173.6 116C 178.02 114.722 181.278 108.84 183.2 104.8C 178.273 107.106 177.288 111.695 173.6 115.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 184.8 104.8L 185.6 105.6L 184.8 104.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 370.666 105.334C 370.622 105.378 370.578 106.222 370.934 105.866C 370.978 105.822 371.022 104.978 370.666 105.334z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 371.466 106.134C 371.422 106.178 371.378 107.022 371.734 106.666C 371.778 106.622 371.822 105.778 371.466 106.134z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 372 105.6L 372 109.6L 372.8 109.6C 372.73 108.029 372.623 107.015 372 105.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 375.2 105.6L 375.2 110.4L 376 110.4C 375.962 108.598 375.899 107.242 375.2 105.6M 182.4 106.4L 183.2 107.2L 182.4 106.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 412 106.4L 412.8 107.2L 412 106.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 181.6 107.2L 182.4 108L 181.6 107.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 376 107.2L 376 111.2L 376.8 111.2C 376.73 109.629 376.623 108.615 376 107.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 412.8 107.2L 413.6 108L 412.8 107.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 177.6 108L 178.4 108.8L 177.6 108z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 180.8 108L 181.6 108.8L 180.8 108z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 413.6 108L 414.4 108.8L 413.6 108z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 179.2 108.8L 179.2 110.4C 180.508 109.964 180.364 110.108 180.8 108.8L 179.2 108.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 414.934 109.066C 414.578 109.422 415.422 109.378 415.466 109.334C 415.822 108.978 414.978 109.022 414.934 109.066z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 435.2 109.6L 435.2 110.4C 439.506 110.401 442.574 110.695 446.4 112.8C 443.318 109.009 439.813 108.514 435.2 109.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 442.134 109.066C 441.778 109.422 442.622 109.378 442.666 109.334C 443.022 108.978 442.178 109.022 442.134 109.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 373.066 110.134C 373.022 110.178 372.978 111.022 373.334 110.666C 373.378 110.622 373.422 109.778 373.066 110.134z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 416 109.6L 416.8 110.4L 416 109.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 444 109.6C 444.882 110.765 445.234 111.118 446.4 112C 445.681 110.302 445.698 110.319 444 109.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 179.2 110.4L 180 111.2L 179.2 110.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 417.334 110.666C 416.978 111.022 417.822 110.978 417.866 110.934C 418.222 110.578 417.378 110.622 417.334 110.666z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 421.6 110.4C 422.482 111.566 422.834 111.918 424 112.8C 423.281 111.102 423.298 111.119 421.6 110.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 434.134 110.666C 433.778 111.022 434.622 110.978 434.666 110.934C 435.022 110.578 434.178 110.622 434.134 110.666z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 178.4 111.2L 179.2 112L 178.4 111.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 373.6 111.2L 374.4 112L 373.6 111.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 418.4 111.2L 419.2 112L 418.4 111.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 432.8 111.2L 433.6 112L 432.8 111.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 176 112L 176.8 112.8L 176 112z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 376 112L 376.8 112.8L 376 112z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 432.266 112.534C 432.222 112.578 432.178 113.422 432.534 113.066C 432.578 113.022 432.622 112.178 432.266 112.534z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 376.8 112.8L 376.8 115.2L 377.6 115.2C 377.399 114.038 377.348 113.798 376.8 112.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 451.734 113.066C 451.378 113.422 452.222 113.378 452.266 113.334C 452.622 112.978 451.778 113.022 451.734 113.066z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 175.2 113.6L 176 114.4L 175.2 113.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 177.6 113.6C 176.651 114.549 176.378 114.867 176 116C 177.595 115.322 178.159 115.194 177.6 113.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 431.2 113.6L 432 114.4L 431.2 113.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 434.4 113.6L 435.2 114.4L 434.4 113.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 450.4 113.6L 450.4 114.4L 454.4 114.4C 452.985 113.777 451.971 113.67 450.4 113.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 430.4 114.4L 431.2 115.2L 430.4 114.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 433.6 114.4L 434.4 115.2L 433.6 114.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 449.6 114.4L 449.6 115.2L 455.2 115.2C 453.335 114.412 451.634 114.415 449.6 114.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 455.734 114.666C 455.378 115.022 456.222 114.978 456.266 114.934C 456.622 114.578 455.778 114.622 455.734 114.666z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 377.866 115.734C 377.822 115.778 377.778 116.622 378.134 116.266C 378.178 116.222 378.222 115.378 377.866 115.734z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 429.6 115.2L 430.4 116L 429.6 115.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 445.6 115.2L 446.4 116L 445.6 115.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 456.8 115.2L 457.6 116L 456.8 115.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 172 116L 172.8 116.8L 172 116z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 172 121.6L 172.8 121.6L 172.8 116.8L 176 116.8C 172.486 115.649 172.094 118.724 172 121.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 447.2 116L 448 116.8L 447.2 116M 171.2 116.8L 172 117.6L 171.2 116.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 172.8 119.2C 173.966 118.318 174.317 117.966 175.2 116.8C 173.309 117.186 173.186 117.309 172.8 119.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 181.6 117.6L 181.6 118.4L 184.8 117.6C 183.473 117.275 183.006 117.353 181.6 117.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 184.8 116.8L 184.8 117.6L 187.2 117.6C 186.202 117.052 185.962 117.001 184.8 116.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 187.734 117.066C 187.378 117.422 188.222 117.378 188.266 117.334C 188.622 116.978 187.778 117.022 187.734 117.066z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 377.6 116.8L 378.4 117.6L 377.6 116.8M 425.6 116.8L 425.6 117.6C 427.534 118.178 429.178 118.358 431.2 118.4L 431.2 117.6C 429.246 117.513 427.502 117.258 425.6 116.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 426.934 117.066C 426.578 117.422 427.422 117.378 427.466 117.334C 427.822 116.978 426.978 117.022 426.934 117.066z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 432 116.8L 431.2 118.4L 432.8 118.4C 432.8 116.918 433.04 117.32 432 116.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 453.334 117.066C 452.978 117.422 453.822 117.378 453.866 117.334C 454.222 116.978 453.378 117.022 453.334 117.066z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 454.4 116.8L 455.2 117.6L 454.4 116.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 457.866 117.334C 457.822 117.378 457.778 118.222 458.134 117.866C 458.178 117.822 458.222 116.978 457.866 117.334z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 479.2 116.8C 477.467 117.756 476.358 118.153 474.4 118.4L 474.4 119.2L 480.8 119.2C 480.247 118.09 480.013 117.711 479.2 116.8M 170.4 117.6L 170.4 120L 171.2 120C 170.999 118.839 170.948 118.598 170.4 117.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 171.2 117.6C 171.262 119.716 171.198 121.013 172.8 122.4C 172.351 120.718 171.961 119.153 171.2 117.6M 184 119.2L 187.2 118.4C 185.563 117.799 185.123 117.875 184 119.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 187.734 117.866C 187.378 118.222 188.222 118.178 188.266 118.134C 188.622 117.778 187.778 117.822 187.734 117.866M 378.666 118.134C 378.622 118.178 378.578 119.022 378.934 118.666C 378.978 118.622 379.022 117.778 378.666 118.134z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 425.6 117.6C 426.062 119.758 426.609 119.831 428.8 120L 428.8 119.2L 425.6 117.6M 471.2 117.6L 470.4 119.2L 472 119.2C 472 117.718 472.24 118.12 471.2 117.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 180 118.4L 180.8 119.2L 180 118.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 180 120.8L 184 119.2C 181.932 118.486 181.239 119.06 180 120.8M 187.2 118.4L 187.2 120L 188.8 120L 188.8 118.4L 187.2 118.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 189.066 118.934C 189.022 118.978 188.978 119.822 189.334 119.466C 189.378 119.422 189.422 118.578 189.066 118.934z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 426.4 118.4L 426.4 119.2L 428.8 119.2C 427.802 118.652 427.562 118.601 426.4 118.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 457.334 118.666C 456.978 119.022 457.822 118.978 457.866 118.934C 458.222 118.578 457.378 118.622 457.334 118.666z\" />\r\n            <path style=\"stroke:none; fill:#92c2d5\"\r\n                d=\"M 478.4 118.4L 479.2 119.2L 478.4 118.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 176 120.8L 176 121.6C 178.397 121.42 179.399 121.158 180.8 119.2L 176 120.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 182.134 119.466C 181.778 119.822 182.622 119.778 182.666 119.734C 183.022 119.378 182.178 119.422 182.134 119.466z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 457.866 119.734C 457.822 119.778 457.778 120.622 458.134 120.266C 458.178 120.222 458.222 119.378 457.866 119.734z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 458.666 119.734C 458.622 119.778 458.578 120.622 458.934 120.266C 458.978 120.222 459.022 119.378 458.666 119.734z\" />\r\n            <path style=\"stroke:none; fill:#92c2d5\"\r\n                d=\"M 468 119.2L 468 120L 471.2 120C 469.995 119.454 469.348 119.339 468 119.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 466.4 121.6L 466.4 122.4L 474.4 120C 471.551 119.012 469.041 120.372 466.4 121.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 480 119.2L 480.8 120L 480 119.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 188 120C 188.79 122.282 189.651 122.698 192 123.2C 190.878 121.381 189.988 120.81 188 120z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 466.4 120L 466.4 121.6C 467.708 121.164 467.564 121.308 468 120L 466.4 120z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 468.534 120.266C 468.178 120.622 469.022 120.578 469.066 120.534C 469.422 120.178 468.578 120.222 468.534 120.266z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 172.8 120.8L 172.8 121.6L 176 121.6C 174.795 121.054 174.148 120.939 172.8 120.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 376.8 120.8L 376.8 127.2L 377.6 127.2C 378.234 124.674 378.144 123.054 376.8 120.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 476.534 121.066C 476.178 121.422 477.022 121.378 477.066 121.334C 477.422 120.978 476.578 121.022 476.534 121.066z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 477.6 120.8L 478.4 124.8L 479.2 124.8C 478.958 122.965 478.738 122.23 477.6 120.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 172.8 121.6L 172.8 122.4L 176 122.4C 174.795 121.854 174.148 121.739 172.8 121.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 176 121.6L 176 122.4L 179.2 122.4C 177.995 121.854 177.348 121.739 176 121.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 187.2 121.6C 188.108 124.318 189.262 124.463 192 124L 192 123.2L 187.2 121.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 192.534 121.866C 192.178 122.222 193.022 122.178 193.066 122.134C 193.422 121.778 192.578 121.822 192.534 121.866M 465.6 121.6L 464.8 123.2C 465.81 122.423 465.914 122.645 465.6 121.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 173.6 122.4L 173.6 123.2L 176 123.2C 175.002 122.652 174.762 122.601 173.6 122.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 192 122.4L 192 123.2C 193.308 123.636 193.164 123.492 193.6 124.8L 194.4 124.8C 194.014 122.909 193.891 122.786 192 122.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 377.6 122.4L 378.4 123.2L 377.6 122.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 456 122.4C 456.749 123.958 457.114 124.44 458.4 125.6C 457.651 124.041 457.286 123.56 456 122.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 466.134 122.666C 465.778 123.022 466.622 122.978 466.666 122.934C 467.022 122.578 466.178 122.622 466.134 122.666z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 477.866 122.934C 477.822 122.978 477.778 123.822 478.134 123.466C 478.178 123.422 478.222 122.578 477.866 122.934z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 192.534 123.466C 192.178 123.822 193.022 123.778 193.066 123.734C 193.422 123.378 192.578 123.422 192.534 123.466z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 376.8 123.2L 377.6 124L 376.8 123.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 464.534 123.466C 464.178 123.822 465.022 123.778 465.066 123.734C 465.422 123.378 464.578 123.422 464.534 123.466z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 480.8 123.2L 480.8 128L 481.6 128C 481.562 126.198 481.499 124.842 480.8 123.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 192.8 124C 192.699 128.73 190.807 132.936 190.4 137.6L 191.2 137.6C 192.182 133.198 195.863 128.054 192.8 124z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 380.266 124.534C 380.222 124.578 380.178 125.422 380.534 125.066C 380.578 125.022 380.622 124.178 380.266 124.534z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 380.8 124.8L 379.2 128.8C 380.796 127.602 381.213 126.766 380.8 124.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 458.4 124.8C 459.378 125.756 459.536 125.853 460.8 126.4C 460.016 124.974 460.074 125.125 458.4 124.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 460.8 124.8L 461.6 125.6L 460.8 124.8M 478.4 124.8L 478.4 128L 479.2 128C 479.061 126.652 478.946 126.005 478.4 124.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 481.6 124.8L 480.8 129.6L 481.6 129.6C 482.434 127.923 482.882 126.641 483.2 124.8L 481.6 124.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 460.8 125.6L 460.8 126.4L 463.2 126.4C 462.202 125.852 461.962 125.801 460.8 125.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 374.4 128L 375.2 128.8L 374.4 128z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 477.6 128L 477.6 130.4L 478.4 130.4C 478.199 129.238 478.148 128.998 477.6 128z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 478.4 128L 478.4 131.2L 479.2 131.2C 479.061 129.852 478.946 129.205 478.4 128z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 504.8 128.8L 504.8 129.6L 512 128.8C 509.534 127.774 507.366 128.19 504.8 128.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 378.134 129.066C 377.778 129.422 378.622 129.378 378.666 129.334C 379.022 128.978 378.178 129.022 378.134 129.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 507.2 128.8L 502.4 131.2L 502.4 132C 504.363 131.34 506.15 130.537 508 129.6L 507.2 128.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 508.534 129.066C 508.178 129.422 509.022 129.378 509.066 129.334C 509.422 128.978 508.578 129.022 508.534 129.066z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 192.8 129.6L 192.8 132.8L 193.6 132.8C 193.461 131.452 193.346 130.805 192.8 129.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 193.866 130.134C 193.822 130.178 193.778 131.022 194.134 130.666C 194.178 130.622 194.222 129.778 193.866 130.134z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 374.4 130.4L 374.4 131.2L 377.6 130.4C 376.273 130.075 375.806 130.153 374.4 130.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 504 129.6L 504.8 130.4L 504 129.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 507.734 129.866C 507.378 130.222 508.222 130.178 508.266 130.134C 508.622 129.778 507.778 129.822 507.734 129.866z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 513.066 130.134C 513.022 130.178 512.978 131.022 513.334 130.666C 513.378 130.622 513.422 129.778 513.066 130.134z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 504.8 130.4L 505.6 131.2L 504.8 130.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 506.134 130.666C 505.778 131.022 506.622 130.978 506.666 130.934C 507.022 130.578 506.178 130.622 506.134 130.666z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 372.8 131.2L 373.6 132L 372.8 131.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 504 131.2L 504.8 132L 504 131.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 510.4 131.2L 510.4 134.4L 511.2 134.4C 511.061 133.052 510.946 132.405 510.4 131.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 372 132L 372.8 132.8L 372 132M 501.6 132L 502.4 132.8L 501.6 132z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 371.2 132.8L 370.4 134.4L 372 134.4C 372 132.918 372.24 133.32 371.2 132.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 509.866 133.334C 509.822 133.378 509.778 134.222 510.134 133.866C 510.178 133.822 510.222 132.978 509.866 133.334z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 503.2 133.6L 504 134.4L 503.2 133.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 191.2 134.4L 191.2 137.6L 192 137.6C 191.861 136.252 191.746 135.605 191.2 134.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 192.266 134.934C 192.222 134.978 192.178 135.822 192.534 135.466C 192.578 135.422 192.622 134.578 192.266 134.934z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 363.2 136.8L 367.2 135.2C 365.175 134.632 364.387 135.095 363.2 136.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 480.8 134.4L 480.8 136L 482.4 136C 481.964 134.692 482.108 134.836 480.8 134.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 485.6 134.4L 485.6 135.2L 488 135.2C 487.002 134.652 486.762 134.601 485.6 134.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 488.534 134.666C 488.178 135.022 489.022 134.978 489.066 134.934C 489.422 134.578 488.578 134.622 488.534 134.666z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 500.8 136.8C 501.966 135.917 502.317 135.566 503.2 134.4C 501.501 135.119 501.519 135.101 500.8 136.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 509.6 134.4L 509.6 138.4L 510.4 138.4C 510.33 136.829 510.223 135.815 509.6 134.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 482.4 135.2L 483.2 136L 482.4 135.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 488 135.2C 488.978 136.156 489.136 136.253 490.4 136.8C 489.616 135.374 489.674 135.525 488 135.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 496.8 135.2L 497.6 136L 496.8 135.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 483.734 136.266C 483.378 136.622 484.222 136.578 484.266 136.534C 484.622 136.178 483.778 136.222 483.734 136.266z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 496 136L 496.8 136.8L 496 136z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 499.2 136L 499.2 137.6L 500.8 137.6L 500.8 136L 499.2 136z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 508.8 136L 509.6 136.8L 508.8 136z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 485.6 136.8L 486.4 137.6L 485.6 136.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 490.4 136.8L 491.2 137.6L 490.4 136.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 493.6 136.8L 493.6 137.6L 496 137.6C 495.002 137.052 494.762 137.001 493.6 136.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 508.8 136.8L 508.8 140.8L 509.6 140.8C 509.53 139.229 509.423 138.215 508.8 136.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 189.6 137.6L 189.6 141.6L 190.4 141.6C 190.33 140.029 190.223 139.015 189.6 137.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 190.4 137.6L 190.4 140L 191.2 140L 192 137.6L 190.4 137.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 492.8 137.6L 492.8 138.4L 495.2 138.4C 494.202 137.852 493.962 137.801 492.8 137.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 498.4 137.6L 499.2 138.4L 498.4 137.6M 488.534 138.666C 488.178 139.022 489.022 138.978 489.066 138.934C 489.422 138.578 488.578 138.622 488.534 138.666z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 497.6 138.4L 498.4 139.2L 497.6 138.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 508 138.4L 508 140.8L 508.8 140.8C 508.599 139.638 508.548 139.398 508 138.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 188.8 139.2L 188.8 142.4L 189.6 142.4C 189.461 141.052 189.346 140.405 188.8 139.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 489.6 139.2L 489.6 140C 491.285 140.515 492.636 140.725 494.4 140.8L 494.4 140L 489.6 139.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 494.934 140.266C 494.578 140.622 495.422 140.578 495.466 140.534C 495.822 140.178 494.978 140.222 494.934 140.266z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 352.534 141.066C 352.178 141.422 353.022 141.378 353.066 141.334C 353.422 140.978 352.578 141.022 352.534 141.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 189.6 141.6L 189.6 144L 190.4 144C 190.199 142.838 190.148 142.598 189.6 141.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 351.2 141.6L 352 142.4L 351.2 141.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 357.6 141.6L 358.4 142.4L 357.6 141.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 188 142.4L 188 146.4L 188.8 146.4C 188.73 144.829 188.623 143.815 188 142.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 188.8 142.4L 188.8 145.6L 189.6 145.6C 189.461 144.252 189.346 143.605 188.8 142.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 510.4 142.4C 510.808 145.63 511.191 148.736 511.2 152L 512 152C 512 148.605 512.369 145.282 510.4 142.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 511.466 142.934C 511.422 142.978 511.378 143.822 511.734 143.466C 511.778 143.422 511.822 142.578 511.466 142.934z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 512 143.2L 512 147.2L 512.8 147.2C 512.73 145.629 512.623 144.615 512 143.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 187.2 144.8L 187.2 147.2L 188 147.2C 187.799 146.039 187.748 145.798 187.2 144.8M 352 144.8L 352 147.2L 352.8 147.2C 352.599 146.038 352.548 145.798 352 144.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 156 149.6L 156.8 149.6L 160 146.4C 157.457 145.862 156.694 147.292 156 149.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 157.6 148.8C 163.5 146.442 165.817 150.918 171.2 152.401C 176.058 153.738 181.466 152.041 186.4 152L 186.4 148.8C 185.092 149.236 185.236 149.092 184.8 150.4L 184 150.4C 181.654 148.817 180.603 149.726 179.2 152C 173.427 150.622 161.107 143.243 157.6 148.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 188.8 145.6L 189.6 146.4L 188.8 145.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 352.8 145.6L 352 149.6L 352.8 149.6C 353.274 147.876 353.419 147.235 352.8 145.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 353.6 145.6L 353.6 148L 354.4 148C 354.199 146.838 354.148 146.598 353.6 145.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 188 146.4L 188 148.8L 188.8 148.8C 188.599 147.638 188.548 147.398 188 146.4z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 135.2 176.8L 136 176.8C 136.275 170.484 139.152 162.818 144.967 159.451C 147.997 157.697 151.965 158.258 154.977 156.456C 157.84 154.743 157.639 149.077 161.615 148.953C 164.374 148.867 167.665 151.988 170.4 152.8C 167.708 150 161.926 145.125 158.071 148.715C 155.878 150.758 156.424 154.052 153.494 155.656C 150.635 157.221 147.098 156.955 144.167 158.3C 137.309 161.448 135.256 170.047 135.2 176.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 186.4 147.2L 186.4 152L 187.2 152C 187.162 150.198 187.099 148.842 186.4 147.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 187.2 147.2L 187.2 149.6L 188 149.6C 187.799 148.439 187.748 148.198 187.2 147.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 577.6 147.2L 577.6 148.8C 578.908 148.364 578.764 148.508 579.2 147.2L 577.6 147.2z\" />\r\n            <!--style=\"stroke:none; fill:#c12929;\" class=\"ribnoe\" style=\"stroke:none; fill:#c13429;\" -->\r\n            <g>\r\n                <path class=\"ribnoe\"\r\n                    d=\"M 64.8 248.8L 64 254.4C 59.6369 254.07 58.6511 250.351 55.0327 249.453C 52.1358 248.734 47.9669 251.857 45.6432 253.295C 41.1779 256.058 32.2742 268.888 41.6 269.6L 41.6 272C 47.0202 271.752 51.575 268.25 56.8 267.995C 62.0467 267.738 65.182 271.537 69.6716 273.132C 71.9308 273.935 74.4795 273.221 76.6932 274.194C 80.2144 275.742 79.3212 279.438 80.48 282.388C 82.4192 287.326 89.6112 289.482 94.1712 286.946C 103.482 281.765 92.6704 277.355 92.3416 271.231C 92.0888 266.54 99.6568 263.129 103.2 261.6L 104 264.8C 110.754 261.959 118.772 259.505 116.8 251.2C 123.04 249.826 133.67 252.008 137.582 245.45C 139.863 241.622 137.083 232.512 139.714 230.186C 143.111 227.182 151.857 232.209 156.318 227.993C 158.258 226.158 157.106 223.137 158.422 220.982C 159.823 218.69 162.462 219.014 164.318 217.469C 165.858 216.187 165.622 213.834 166.882 212.314C 169.887 208.689 176.461 208.343 180.8 208C 180.854 202.089 183.36 200.442 186.486 195.864C 188.632 192.723 188.206 188.84 191.371 186.242C 197.434 181.266 208.712 181.914 216 178.4C 214.843 172.015 210.88 170.085 204.8 169.6C 204.366 150.759 186.667 155.29 173.6 153.359C 169.673 152.779 164.454 147.742 160.846 148.601C 157.346 149.434 157.598 154.161 154.977 156.05C 151.69 158.42 146.883 157.396 143.675 159.886C 136.088 165.774 138.263 173.379 134.421 180.726C 132.669 184.076 128.649 185.097 126.766 188.21C 124.91 191.278 126.048 195.15 124.618 198.4C 122.543 203.117 117.868 206.905 116.606 211.985C 115.668 215.763 121.124 216.566 119.871 219.963C 116.665 228.66 108.098 221.493 103.547 226.586C 99.228 231.42 106.258 237.613 102.606 243.165C 98.5584 249.318 94.3176 245.502 88.8 246.051C 80.852 246.842 72.9706 248.449 64.8 248.8z\" />\r\n            </g>\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 578.4 148L 578.4 148.8L 581.6 148.8C 580.395 148.254 579.748 148.139 578.4 148M 348.8 148.8L 349.6 152L 350.4 152L 350.4 148.8L 348.8 148.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 156 149.6L 156.8 150.4L 156 149.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 156 150.4L 155.2 152.8C 156.613 152.017 156.764 151.822 156 150.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 576.8 150.4C 575.851 151.349 575.533 151.622 574.4 152L 574.4 152.8C 576.086 152.332 577.441 152.122 576.8 150.4z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 491.2 213.6L 491.2 214.4C 494.118 215.402 496.262 217.534 499.2 218.4C 499.11 222.246 497.796 225.778 497.6 229.6C 502.97 231.557 507.395 244.142 507.2 249.6C 510.327 251.199 511.742 253.489 512.8 256.8L 509.6 256.8C 510.626 259.082 511.423 260.372 513.6 261.6C 513.728 263.266 513.978 263.621 515.2 264.8C 519.232 251.722 532.007 256.86 542.317 252.821C 547.146 250.929 551.614 243.658 555.803 240.263C 559.719 237.091 564.226 230.9 569.6 232.8L 570.4 232.8C 571.349 231.851 571.667 231.578 572.8 231.2C 572.255 226.154 576.489 221.198 569.6 219.2C 570.237 213.778 567.494 208.92 572.8 205.6C 570.753 201.162 567.397 193.002 576 195.2C 575.709 192.278 573.755 188.486 575.234 185.706C 577.261 181.897 583.334 180.917 584.002 176C 584.644 171.284 578.545 167.475 578.843 162.4C 579.041 159.043 584.002 155.018 581.456 151.686C 579.753 149.458 576.926 151.665 575.129 152.485C 570.014 154.818 563.808 157.258 558.4 158.811C 553.79 160.135 549.446 164.475 544.8 164.85C 538.478 165.358 532.589 160.902 526.431 160.922C 523.235 160.932 520.325 163.638 517.599 165.084C 510.736 168.723 499.069 172.181 494.339 178.506C 489.594 184.853 497.282 189.234 498.288 195.188C 499.188 200.519 492.299 199.608 491.019 203.422C 489.72 207.293 494.158 210.279 491.2 213.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 581.866 150.934C 581.822 150.978 581.778 151.822 582.134 151.466C 582.178 151.422 582.222 150.578 581.866 150.934z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 585.066 150.934C 585.022 150.978 584.978 151.822 585.334 151.466C 585.378 151.422 585.422 150.578 585.066 150.934z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 187.2 151.2L 187.2 152L 194.4 152C 192.088 151.03 189.701 151.202 187.2 151.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 573.6 152.8L 576 152C 574.578 151.236 574.383 151.387 573.6 152.8M 582.4 151.2L 582.4 153.6L 583.2 153.6C 582.999 152.438 582.948 152.198 582.4 151.2z\" />\r\n            <path style=\"stroke:none; fill:#010101\"\r\n                d=\"M 180 152L 180 153.6C 185.759 153.6 191.11 154.747 196.8 155.2C 195.026 149.856 184.691 152 180 152z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 356 152L 356 152.8C 358.554 152.828 360.352 152.846 362.4 154.4C 363.633 151.129 358.093 152 356 152z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 570.4 152L 570.4 152.8L 573.6 152.8C 572.395 152.254 571.748 152.139 570.4 152z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 584.8 152L 584.8 156.8L 585.6 156.8C 585.562 154.998 585.499 153.642 584.8 152z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 154.4 152.8L 154.4 154.4C 155.708 153.964 155.564 154.108 156 152.8L 154.4 152.8z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 172 152.8L 172 153.6L 180 153.6C 177.47 152.538 174.731 152.8 172 152.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 197.334 153.066C 196.978 153.422 197.822 153.378 197.866 153.334C 198.222 152.978 197.378 153.022 197.334 153.066z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 351.2 152.8L 352 153.6L 351.2 152.8M 360 152.8L 360 153.6L 362.4 154.4C 361.616 152.974 361.674 153.125 360 152.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 566.4 152.8L 566.4 153.6L 568.8 153.6C 567.802 153.052 567.562 153.001 566.4 152.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 565.6 155.2C 567.995 154.526 570.334 153.933 572.8 153.6C 570.169 152.574 567.405 152.968 565.6 155.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 573.334 153.066C 572.978 153.422 573.822 153.378 573.866 153.334C 574.222 152.978 573.378 153.022 573.334 153.066z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 155.2 153.6C 153.319 154.764 151.742 155.458 149.6 156L 149.6 156.8C 151.792 156.53 155.651 156.354 155.2 153.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 197.334 153.866C 196.978 154.222 197.822 154.178 197.866 154.134C 198.222 153.778 197.378 153.822 197.334 153.866z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 198.934 153.866C 198.578 154.222 199.422 154.178 199.466 154.134C 199.822 153.778 198.978 153.822 198.934 153.866z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 569.6 153.6L 570.4 154.4L 569.6 153.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 153.6 154.4L 154.4 155.2L 153.6 154.4z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 197.334 154.666C 196.978 155.022 197.822 154.978 197.866 154.934C 198.222 154.578 197.378 154.622 197.334 154.666z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 198.934 154.666C 198.578 155.022 199.422 154.978 199.466 154.934C 199.822 154.578 198.978 154.622 198.934 154.666M 556 159.2C 559.634 158.23 563.37 157.617 565.6 154.4C 562.66 155.424 557.983 156.87 556 159.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 566.934 154.666C 566.578 155.022 567.422 154.978 567.466 154.934C 567.822 154.578 566.978 154.622 566.934 154.666z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 144 155.2L 144 156L 152 156C 149.47 154.938 146.731 155.2 144 155.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 198.4 155.2L 198.4 156C 200.53 157.438 202.464 158.934 204.8 160C 203.603 156.844 201.705 155.651 198.4 155.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 201.6 155.2L 201.6 156.8L 203.2 156.8C 202.764 155.492 202.908 155.636 201.6 155.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 510.4 155.2L 511.2 156L 510.4 155.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 511.2 155.2L 512 156L 511.2 155.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 556.534 155.466C 556.178 155.822 557.022 155.778 557.066 155.734C 557.422 155.378 556.578 155.422 556.534 155.466z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 565.334 155.466C 564.978 155.822 565.822 155.778 565.866 155.734C 566.222 155.378 565.378 155.422 565.334 155.466z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 584.266 155.734C 584.222 155.778 584.178 156.622 584.534 156.266C 584.578 156.222 584.622 155.378 584.266 155.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 140.8 156L 140.8 160L 141.6 160C 141.53 158.429 141.423 157.415 140.8 156z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 141.6 157.6C 143.767 157.082 145.772 156.846 148 156.8C 145.664 155.822 143.33 155.619 141.6 157.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 148.534 156.266C 148.178 156.622 149.022 156.578 149.066 156.534C 149.422 156.178 148.578 156.222 148.534 156.266z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 199.2 156C 200.384 158.533 201.734 159.961 204 161.6C 202.816 159.067 201.466 157.639 199.2 156z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 512 156L 512.8 156.8L 512 156z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 554.4 156L 555.2 156.8L 554.4 156z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 141.6 160L 142.4 160C 144.401 158.258 146.166 157.838 148.8 157.6C 145.694 156.299 142.727 156.604 141.6 160z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 204 156.8C 204.622 158.506 204.904 159.017 206.4 160C 205.651 158.441 205.286 157.96 204 156.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 512.8 156.8L 513.6 157.6L 512.8 156.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 513.6 156.8L 514.4 157.6L 513.6 156.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 559.734 157.066C 559.378 157.422 560.222 157.378 560.266 157.334C 560.622 156.978 559.778 157.022 559.734 157.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 562.134 157.066C 561.778 157.422 562.622 157.378 562.666 157.334C 563.022 156.978 562.178 157.022 562.134 157.066z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 580.8 156.8C 580.034 158.014 579.69 158.67 579.2 160C 580.797 159.005 581.246 158.646 580.8 156.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 583.2 159.2C 584.366 158.317 584.718 157.966 585.6 156.8C 583.901 157.519 583.919 157.501 583.2 159.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 364.266 158.134C 364.222 158.178 364.178 159.022 364.534 158.666C 364.578 158.622 364.622 157.778 364.266 158.134z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 515.734 157.866C 515.378 158.222 516.222 158.178 516.266 158.134C 516.622 157.778 515.778 157.822 515.734 157.866z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 560.8 157.6L 561.6 158.4L 560.8 157.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 516.534 158.666C 516.178 159.022 517.022 158.978 517.066 158.934C 517.422 158.578 516.578 158.622 516.534 158.666z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 517.6 158.4L 517.6 159.2L 520.8 159.2C 519.595 158.654 518.948 158.539 517.6 158.4M 553.6 158.4L 553.6 159.2L 556 159.2C 555.002 158.652 554.762 158.601 553.6 158.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 556.8 158.4L 556.8 159.2L 559.2 159.2C 558.202 158.652 557.962 158.601 556.8 158.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 517.6 159.2L 518.4 160L 517.6 159.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 518.4 159.2L 518.4 160C 520.474 160.406 521.926 160.406 524 160C 522.134 159.212 520.434 159.215 518.4 159.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 524 159.2L 524 160L 529.6 160.8L 529.6 160L 524 159.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 552.534 159.466C 552.178 159.822 553.022 159.778 553.066 159.734C 553.422 159.378 552.578 159.422 552.534 159.466z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 554.134 159.466C 553.778 159.822 554.622 159.778 554.666 159.734C 555.022 159.378 554.178 159.422 554.134 159.466z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 141.066 160.534C 141.022 160.578 140.978 161.422 141.334 161.066C 141.378 161.022 141.422 160.178 141.066 160.534M 204 160L 204.8 164.8L 205.6 164.8L 205.6 160L 204 160z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 205.6 160C 205.6 163.354 204.94 166.816 208 168.8L 208 168C 206.136 165.54 206.752 162.745 205.6 160z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 519.2 160L 520 160.8L 519.2 160M 522.4 160L 522.4 160.8L 526.4 160.8C 524.985 160.177 523.971 160.07 522.4 160M 542.4 164L 542.4 164.8C 546.974 164.702 549.798 163.223 553.6 160.8C 549.849 159.818 546.372 163.703 542.4 164z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 579.2 160L 579.2 162.4L 580 162.4L 580.8 160L 579.2 160z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 140 160.8L 140.8 161.6L 140 160.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 496.8 197.6C 485.558 199.196 491.358 205.688 488.8 212L 488.8 212.8L 492.8 213.6C 492.104 210.946 489.406 205.918 490.989 203.422C 493.098 200.095 498.246 200.896 498.31 195.968C 498.394 189.408 488.969 184.057 495.374 177.82C 502.88 170.511 517.506 169.669 523.2 160.8C 519.51 161.29 516.838 163.26 513.6 164.974C 506.704 168.626 491.988 172.653 490.71 181.6C 489.915 187.153 495.312 192.446 496.8 197.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 528.8 160.8L 528.8 161.6L 531.2 161.6C 530.202 161.052 529.962 161.001 528.8 160.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 531.734 161.066C 531.378 161.422 532.222 161.378 532.266 161.334C 532.622 160.978 531.778 161.022 531.734 161.066z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 578.4 160.8L 578.4 164.8L 579.2 164.8C 579.13 163.229 579.023 162.215 578.4 160.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 531.2 161.6L 531.2 162.4L 534.4 162.4C 533.195 161.854 532.548 161.739 531.2 161.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 534.934 161.866C 534.578 162.222 535.422 162.178 535.466 162.134C 535.822 161.778 534.978 161.822 534.934 161.866z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 206.4 162.4L 206.4 166.4L 207.2 166.4C 207.13 164.829 207.023 163.815 206.4 162.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 516.8 162.4L 517.6 163.2L 516.8 162.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 521.6 162.4L 522.4 163.2L 521.6 162.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 533.334 162.666C 532.978 163.022 533.822 162.978 533.866 162.934C 534.222 162.578 533.378 162.622 533.334 162.666z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 534.934 162.666C 534.578 163.022 535.422 162.978 535.466 162.934C 535.822 162.578 534.978 162.622 534.934 162.666z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 536 162.4L 536 163.2L 540 164C 538.768 162.558 537.922 162.534 536 162.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 514.4 163.2L 515.2 164L 514.4 163.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 515.734 163.466C 515.378 163.822 516.222 163.778 516.266 163.734C 516.622 163.378 515.778 163.422 515.734 163.466z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 520.534 163.466C 520.178 163.822 521.022 163.778 521.066 163.734C 521.422 163.378 520.578 163.422 520.534 163.466z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 536.8 163.2L 536.8 164L 539.2 164C 538.202 163.452 537.962 163.401 536.8 163.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 540 163.2L 540 164L 543.2 164C 541.995 163.454 541.348 163.339 540 163.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 546.4 163.2L 547.2 164L 546.4 163.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 136.8 164L 136.8 165.6C 138.108 165.164 137.964 165.308 138.4 164L 136.8 164z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 204 164L 204.8 169.6L 211.2 170.4L 211.2 169.6C 207.526 168.63 206.377 166.706 204 164z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 352 164L 352 164.8L 356.8 164.8C 355.158 164.101 353.802 164.038 352 164z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 512.8 164L 513.6 164.8L 512.8 164z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 514.134 164.266C 513.778 164.622 514.622 164.578 514.666 164.534C 515.022 164.178 514.178 164.222 514.134 164.266z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 541.334 164.266C 540.978 164.622 541.822 164.578 541.866 164.534C 542.222 164.178 541.378 164.222 541.334 164.266z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 136 164.8C 134.478 169.294 134.968 175.022 132.781 179.188C 131.066 182.456 127.398 183.766 125.282 186.64C 123.107 189.595 124.602 193.526 123.317 196.8C 121.438 201.584 111.065 210.983 114.434 216.55C 115.403 218.151 117.779 218.853 119.2 220L 120 220C 119.17 217.455 115.834 216.208 115.674 213.554C 115.339 207.977 122.152 202.876 124.145 198.061C 125.468 194.863 124.199 191.176 126.283 188.179C 131.098 181.254 139.696 175.131 136 164.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 364 164.8L 364.8 165.6L 364 164.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 512.534 165.066C 512.178 165.422 513.022 165.378 513.066 165.334C 513.422 164.978 512.578 165.022 512.534 165.066z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 544 164.8L 544 165.6L 546.4 165.6C 545.402 165.052 545.162 165.001 544 164.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 358.4 165.6L 358.4 166.4L 364 166.4C 362.135 165.612 360.434 165.615 358.4 165.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 508.8 165.6L 509.6 166.4L 508.8 165.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 508.8 166.4L 508.8 167.2L 512 166.4C 510.553 165.941 510.345 166.028 508.8 166.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 579.2 165.6L 580 166.4L 579.2 165.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 508 166.4L 507.2 168L 508.8 168C 508.8 166.518 509.04 166.92 508 166.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 581.6 166.4L 582.4 167.2L 581.6 166.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 206.4 167.2L 207.2 168L 206.4 167.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 581.6 167.2L 582.4 168L 581.6 167.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 134.666 168.534C 134.622 168.578 134.578 169.422 134.934 169.066C 134.978 169.022 135.022 168.178 134.666 168.534z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 349.866 168.534C 349.822 168.578 349.778 169.422 350.134 169.066C 350.178 169.022 350.222 168.178 349.866 168.534z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 412 171.2L 416 168.8C 413.807 168.479 413.078 169.326 412 171.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 416 168C 417.41 169.688 417.861 170.082 420 170.4C 418.67 169.198 417.683 168.641 416 168z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 504 168L 504 169.6C 505.308 169.164 505.164 169.308 505.6 168L 504 168z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 505.6 168L 506.4 168.8L 505.6 168z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 582.4 168L 583.2 168.8L 582.4 168z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 133.6 168.8C 133.126 170.95 133.06 172.273 133.6 174.4L 134.4 174.4C 134.268 172.439 134.278 170.629 133.6 168.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 208.8 168.8L 208.8 169.6L 211.2 169.6C 210.202 169.052 209.962 169.001 208.8 168.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 211.734 169.066C 211.378 169.422 212.222 169.378 212.266 169.334C 212.622 168.978 211.778 169.022 211.734 169.066z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 583.2 168.8L 584 169.6L 583.2 168.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 211.734 169.866C 211.378 170.222 212.222 170.178 212.266 170.134C 212.622 169.778 211.778 169.822 211.734 169.866z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 212.8 169.6C 213.864 171.002 214.598 171.736 216 172.8C 215.077 171.001 214.599 170.523 212.8 169.6z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 212 170.4L 215.2 176L 216 176C 215.541 173.042 214.676 171.747 212 170.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 419.2 170.4C 420.264 171.802 420.998 172.536 422.4 173.6C 421.477 171.801 420.999 171.323 419.2 170.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 501.6 170.4L 502.4 171.2L 501.6 170.4M 133.866 171.734C 133.822 171.778 133.778 172.622 134.134 172.266C 134.178 172.222 134.222 171.378 133.866 171.734z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 351.2 171.2L 351.2 174.4L 352 174.4C 351.861 173.052 351.746 172.405 351.2 171.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 500.8 171.2L 501.6 172L 500.8 171.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 504 171.2L 504.8 172L 504 171.2M 500 172L 500.8 172.8L 500 172z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 216 172.8C 216.325 174.474 216.174 174.416 217.6 175.2C 217.047 174.09 216.812 173.711 216 172.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 583.2 172.8L 584 173.6L 583.2 172.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 422.4 173.6L 422.4 176L 423.2 176C 422.999 174.838 422.948 174.598 422.4 173.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 494.934 173.866C 494.578 174.222 495.422 174.178 495.466 174.134C 495.822 173.778 494.978 173.822 494.934 173.866z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 584.266 174.134C 584.222 174.178 584.178 175.022 584.534 174.666C 584.578 174.622 584.622 173.778 584.266 174.134z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 492.8 174.4L 492.8 176C 494.108 175.564 493.964 175.708 494.4 174.4L 492.8 174.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 500.534 174.666C 500.178 175.022 501.022 174.978 501.066 174.934C 501.422 174.578 500.578 174.622 500.534 174.666z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 584.8 174.4L 584.8 176.8L 585.6 176.8C 585.399 175.638 585.348 175.399 584.8 174.4z\" />\r\n            <path style=\"stroke:none; fill:#010101\"\r\n                d=\"M 216 175.2C 211.987 189.154 188.166 176.658 188 195.2L 189.6 195.2C 190.514 178.527 216.768 190.358 217.6 175.2L 216 175.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 217.6 177.6L 222.4 176.8C 223.479 182.778 231.906 192.837 238.401 193.331C 241.605 193.574 243.997 190.611 247.117 190.83C 250.245 191.05 251.563 194.224 255.172 193.342C 258.368 192.561 259.99 189.23 263.203 188.347C 267.419 187.189 274.983 191.478 277.6 188C 272.34 186.983 265.31 184.809 260 186.8C 257.586 187.706 256.822 191.245 254.4 191.645C 252.016 192.038 249.422 188.723 246.4 188.8C 243.79 188.866 240.378 191.844 238.089 191.045C 231.247 188.657 228.214 180.786 223.6 176.266C 221.469 174.179 218.175 174.916 217.6 177.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 350.4 175.2L 351.2 176L 350.4 175.2M 349.334 176.266C 348.978 176.622 349.822 176.578 349.866 176.534C 350.222 176.178 349.378 176.222 349.334 176.266z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 492.8 176L 493.6 176.8L 492.8 176z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 218.4 176.8L 219.2 177.6L 218.4 176.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 218.4 177.6L 218.4 178.4C 219.841 178.85 220.898 179.059 222.4 179.2L 221.6 176.8L 218.4 177.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 221.866 177.334C 221.822 177.378 221.778 178.222 222.134 177.866C 222.178 177.822 222.222 176.978 221.866 177.334z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 343.2 176.8L 343.2 177.6L 345.6 177.6C 344.602 177.052 344.362 177.001 343.2 176.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 584.266 177.334C 584.222 177.378 584.178 178.222 584.534 177.866C 584.578 177.822 584.622 176.978 584.266 177.334z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 132.8 177.6L 132.8 180L 133.6 180C 133.399 178.838 133.348 178.598 132.8 177.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 217.866 178.134C 217.822 178.178 217.778 179.022 218.134 178.666C 218.178 178.622 218.222 177.778 217.866 178.134z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 336 177.6L 336.8 178.4L 336 177.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 340.8 178.4L 340.8 179.2L 344 178.4C 342.673 178.075 342.206 178.153 340.8 178.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 491.2 177.6L 492 178.4L 491.2 177.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 583.2 177.6C 581.794 179.21 580.867 180.465 580 182.4C 582.255 181.268 583.74 180.23 583.2 177.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 132 178.4L 132 180.8L 132.8 180.8C 132.599 179.638 132.548 179.398 132 178.4z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 134.4 178.4L 134.4 181.6L 135.2 181.6C 135.061 180.252 134.946 179.605 134.4 178.4M 214.4 178.4L 215.2 179.2L 214.4 178.4z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 182.4 245.6C 184.391 250.978 191.882 252.398 192.582 258.403C 193.298 264.533 183.277 279.32 176.012 276.509C 171.654 274.822 170.544 269.025 168 265.6C 166.34 266.536 165.09 266.954 163.2 267.2C 163.368 265.722 163.355 264.686 163.2 263.2C 155.39 261.586 157.561 252.006 153.6 246.4C 150.586 248.058 148.24 248.76 144.8 248.8C 145.584 243.559 149.346 240.446 152.8 236.8L 152.8 236C 151.786 234.766 151.609 234.362 151.2 232.8C 147.035 233.126 144.566 233.262 140.8 231.2C 140.714 234.985 142.429 238.673 143.2 242.4L 139.2 242.4C 138.502 252.8 127.198 253.01 119.2 252C 119.342 259.115 112.993 270.742 115.526 276.797C 119.27 285.746 124.538 280.368 130.23 284.485C 132.325 286.001 133.126 288.66 135.37 290.046C 142.037 294.164 150.327 295.203 156.713 300.49C 159.848 303.086 159.71 307.385 162.623 309.992C 166.819 313.748 172.148 312.722 176 317.6C 179.564 317.903 187.969 318.912 190.866 320.822C 195.072 323.596 194.911 327.733 200.8 328.8C 203.57 320.178 192.698 314.72 199.65 304.948C 205.745 296.381 221.201 300.173 225.6 292C 231.287 293.217 238.154 289.979 240.8 284.8C 236.458 281.235 230.852 274.826 228.8 269.6C 237.749 266.683 242.776 261.258 246.724 252.788C 248.812 248.308 248.841 243.266 252.8 240C 250.594 232.967 256.915 231.85 256.418 225.601C 256.003 220.378 247.066 218.416 252.186 213.044C 258.342 206.585 261.541 213.853 267.966 212.317C 272.851 211.149 277.598 196.693 276.514 192.106C 273.775 180.51 256.731 193.875 252.799 193.302C 250.216 192.926 248.333 190.597 245.6 190.853C 242.428 191.149 240.166 194.114 236.812 192.622C 230.88 189.984 227.558 182.31 222.097 179.626C 218.958 178.084 216.282 180.717 213.6 181.947C 207.293 184.841 196.961 183.068 192.511 188.847C 186.058 197.229 197.284 200.522 198.274 207.212C 198.882 211.318 194.312 214.158 193.322 217.736C 190.754 227.017 194.385 241.819 182.4 245.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 493.6 178.4L 494.4 179.2L 493.6 178.4z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 213.334 179.466C 212.978 179.822 213.822 179.778 213.866 179.734C 214.222 179.378 213.378 179.422 213.334 179.466z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 216.8 179.2L 217.6 180L 216.8 179.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 490.4 179.2L 489.6 180.8C 490.61 180.023 490.714 180.245 490.4 179.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 336.266 180.534C 336.222 180.578 336.178 181.422 336.534 181.066C 336.578 181.022 336.622 180.178 336.266 180.534z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 490.4 180L 491.2 180.8L 490.4 180z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 492.8 180L 493.6 180.8L 492.8 180z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 128 184C 129.774 183.07 130.715 182.331 132 180.8C 129.89 181.551 129.106 182.064 128 184z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 209.334 181.066C 208.978 181.422 209.822 181.378 209.866 181.334C 210.222 180.978 209.378 181.022 209.334 181.066z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 337.066 181.334C 337.022 181.378 336.978 182.222 337.334 181.866C 337.378 181.822 337.422 180.978 337.066 181.334z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 489.6 180.8L 489.6 184L 490.4 184C 490.261 182.652 490.146 182.005 489.6 180.8z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 130.4 184.8C 131.889 184.128 133.067 183.362 134.4 182.4C 132.246 182.074 131.546 183.012 130.4 184.8M 206.4 181.6L 207.2 182.4L 206.4 181.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 337.866 182.934C 337.822 182.978 337.778 183.822 338.134 183.466C 338.178 183.422 338.222 182.578 337.866 182.934z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 474.4 182.4C 474.725 184.074 474.574 184.016 476 184.8C 475.447 183.69 475.213 183.311 474.4 182.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 578.4 182.4L 579.2 183.2L 578.4 182.4z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 196.8 183.2L 197.6 184L 196.8 183.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 340.266 183.734C 340.222 183.778 340.178 184.622 340.534 184.266C 340.578 184.222 340.622 183.378 340.266 183.734M 576 183.2C 574.682 185.666 574.43 187.615 574.4 190.4L 575.2 190.4C 575.353 187.974 576.302 185.55 576 183.2z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 193.6 184L 194.4 184.8L 193.6 184z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 203.734 184.266C 203.378 184.622 204.222 184.578 204.266 184.534C 204.622 184.178 203.778 184.222 203.734 184.266z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 205.334 184.266C 204.978 184.622 205.822 184.578 205.866 184.534C 206.222 184.178 205.378 184.222 205.334 184.266z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 340.8 184L 340 188.8L 340.8 188.8C 341.35 186.865 341.538 185.858 340.8 184z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 489.6 184L 490.4 184.8L 489.6 184z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 580 184L 580.8 184.8L 580 184z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 581.066 184.534C 581.022 184.578 580.978 185.422 581.334 185.066C 581.378 185.022 581.422 184.178 581.066 184.534z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 192 184.8L 192.8 185.6L 192 184.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 198.4 184.8L 199.2 185.6L 198.4 184.8M 490.666 185.334C 490.622 185.378 490.578 186.222 490.934 185.866C 490.978 185.822 491.022 184.978 490.666 185.334z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 578.4 184.8L 578.4 185.6L 580.8 185.6C 579.802 185.052 579.562 185.001 578.4 184.8z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 128.534 185.866C 128.178 186.222 129.022 186.178 129.066 186.134C 129.422 185.778 128.578 185.822 128.534 185.866z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 262.4 185.6L 262.4 186.4L 264.8 186.4C 263.802 185.852 263.562 185.801 262.4 185.6z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 252.8 217.6C 255.913 219.001 257.981 220.424 260 223.2C 257.937 225.001 258.367 227.905 257.306 230.4C 254.24 237.618 250.337 245.515 251.2 253.6C 248.526 255.122 247.742 257.014 247.2 260L 244 259.2C 243.915 266.353 238.854 269.698 232 270.4C 235.107 277.582 241.717 281.752 244.8 289.6C 235.873 289.587 227.661 297.567 218.4 297.6C 220.302 301.227 223.497 304.637 227.2 306.4L 224 312L 228 312C 227.379 321.884 231.661 328.11 241.6 329.6C 241.3 332.138 241.108 334.279 241.6 336.8L 247.2 336C 245.722 343.205 248.466 344.569 249.849 351.169C 251.102 357.15 247.296 359.427 253.6 364C 258.212 359.526 261.02 359.09 267.2 359.2C 267.198 355.507 265.924 350.649 267.698 347.284C 269.422 344.014 273.178 343.534 275.521 340.97C 282.592 333.234 286.78 327.757 286.4 316.8C 292.488 316.336 293.218 309.714 299.2 308.8C 300.157 311.712 305.994 315.655 309.284 314.611C 313.344 313.322 310.468 304.939 314.487 302.082C 318.678 299.104 324.961 301.698 329.6 299.964C 334.206 298.243 335.755 293.193 340.015 291.083C 343.928 289.146 347.524 290.979 349.6 286.4C 351.53 287.584 352.529 288.419 353.6 290.4L 354.4 290.4C 356.74 289.031 359.634 290.941 361.72 289.102C 366.128 285.218 370.204 273.623 367.714 268C 365.009 261.891 360.066 260.174 360 252.8L 364.8 252.8L 364.8 252C 354.908 242.934 362.642 235.772 365.656 225.6C 366.662 222.207 366.258 217.948 366.4 214.4C 362.163 212.714 355.43 206.634 363.2 204.8C 360.386 201.6 350.267 206.119 346.4 207.17C 343.347 208 340.81 210.008 337.6 210.31C 325.58 211.442 311.632 206.4 299.2 206.4C 299.369 202.471 301.598 197.385 300.102 193.631C 298.254 188.994 285.478 182.913 281.66 187.547C 276.122 194.27 279.058 206.799 271.557 213.118C 264.567 219.005 258.846 207.723 252.8 217.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 575.466 186.134C 575.422 186.178 575.378 187.022 575.734 186.666C 575.778 186.622 575.822 185.778 575.466 186.134z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 122.4 186.4L 122.4 189.6L 123.2 189.6C 123.747 188.336 123.844 188.178 124.8 187.2C 123.802 186.652 123.562 186.601 122.4 186.4z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 126.4 186.4L 125.6 189.6L 126.4 189.6C 126.647 188.194 126.725 187.727 126.4 186.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 287.2 186.4C 288.178 187.356 288.336 187.453 289.6 188C 288.816 186.574 288.874 186.725 287.2 186.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 289.6 186.4L 289.6 187.2L 292.8 187.2C 291.595 186.654 290.948 186.539 289.6 186.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 491.2 186.4L 492 187.2L 491.2 186.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 123.466 187.734C 123.422 187.778 123.378 188.622 123.734 188.266C 123.778 188.222 123.822 187.378 123.466 187.734z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 192.8 187.2L 193.6 188L 192.8 187.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 280 187.2L 280 188.8C 281.308 188.364 281.164 188.508 281.6 187.2L 280 187.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 293.334 187.466C 292.978 187.822 293.822 187.778 293.866 187.734C 294.222 187.378 293.378 187.422 293.334 187.466z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 294.4 187.2L 295.2 188L 294.4 187.2M 191.2 188C 190.254 189.944 189.816 191.45 189.6 193.6L 190.4 193.6C 190.835 191.629 191.738 189.936 191.2 188z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 192 188L 192.8 188.8L 192 188z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 295.734 188.266C 295.378 188.622 296.222 188.578 296.266 188.534C 296.622 188.178 295.778 188.222 295.734 188.266z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 492 188L 492.8 188.8L 492 188z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 577.066 188.534C 577.022 188.578 576.978 189.422 577.334 189.066C 577.378 189.022 577.422 188.178 577.066 188.534z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 123.2 188.8L 123.2 192L 124 192C 123.861 190.652 123.746 190.005 123.2 188.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 273.6 188.8L 274.4 189.6L 273.6 188.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 280.266 189.334C 280.222 189.378 280.178 190.222 280.534 189.866C 280.578 189.822 280.622 188.978 280.266 189.334z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 296 188.8C 296.978 189.756 297.136 189.853 298.4 190.4C 297.422 189.444 297.264 189.347 296 188.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 337.334 189.066C 336.978 189.422 337.822 189.378 337.866 189.334C 338.222 188.978 337.378 189.022 337.334 189.066z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 338.4 188.8L 339.2 189.6L 338.4 188.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 339.734 189.066C 339.378 189.422 340.222 189.378 340.266 189.334C 340.622 188.978 339.778 189.022 339.734 189.066M 122.4 189.6L 122.4 192L 123.2 192C 122.999 190.838 122.948 190.598 122.4 189.6z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 124.8 189.6L 124.8 198.4L 125.6 198.4C 125.6 195.44 125.952 192.346 124.8 189.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 241.334 189.866C 240.978 190.222 241.822 190.178 241.866 190.134C 242.222 189.778 241.378 189.822 241.334 189.866z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 319.2 190.4L 319.2 191.2C 322.241 191.2 325.074 191.265 328 190.4C 325.244 189.738 322.078 190.392 319.2 190.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 327.2 190.4L 327.2 191.2L 331.2 190.4C 329.565 189.781 328.924 189.926 327.2 190.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 331.2 189.6L 331.2 190.4L 339.2 190.4C 336.67 189.338 333.931 189.6 331.2 189.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 378.4 189.6L 378.4 190.4L 381.6 190.4C 380.395 189.854 379.748 189.739 378.4 189.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 492.8 189.6L 493.6 190.4L 492.8 189.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 577.6 189.6L 577.6 192L 578.4 192C 578.199 190.838 578.148 190.598 577.6 189.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 190.666 190.934C 190.622 190.978 190.578 191.822 190.934 191.466C 190.978 191.422 191.022 190.578 190.666 190.934z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 239.734 190.666C 239.378 191.022 240.222 190.978 240.266 190.934C 240.622 190.578 239.778 190.622 239.734 190.666z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 248 190.4C 248.436 191.708 248.292 191.564 249.6 192L 249.6 190.4L 248 190.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 279.466 190.934C 279.422 190.978 279.378 191.822 279.734 191.466C 279.778 191.422 279.822 190.578 279.466 190.934z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 298.4 190.4L 299.2 191.2L 298.4 190.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 329.334 190.666C 328.978 191.022 329.822 190.978 329.866 190.934C 330.222 190.578 329.378 190.622 329.334 190.666z\" />\r\n            <path style=\"stroke:none; fill:#68aac6\"\r\n                d=\"M 377.6 190.4L 377.6 192.8L 378.4 192.8C 378.199 191.638 378.148 191.398 377.6 190.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 378.4 190.4L 378.4 192.8L 379.2 192.8C 378.999 191.638 378.948 191.398 378.4 190.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 379.2 190.4L 379.2 191.2L 382.4 191.2C 381.195 190.654 380.548 190.539 379.2 190.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 382.4 190.4C 383.149 191.958 383.514 192.44 384.8 193.6C 384.036 192.186 383.547 191.514 382.4 190.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 493.6 190.4L 494.4 193.6L 495.2 193.6C 494.749 192.198 494.465 191.566 493.6 190.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 578.666 190.934C 578.622 190.978 578.578 191.822 578.934 191.466C 578.978 191.422 579.022 190.578 578.666 190.934z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 238.4 191.2L 239.2 192L 238.4 191.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 276.8 191.2C 276.485 195.062 275.262 198.643 274.4 202.4L 275.2 202.4C 276.816 198.696 278.461 195.159 276.8 191.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 299.2 191.2L 300 192L 299.2 191.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 384.266 191.734C 384.222 191.778 384.178 192.622 384.534 192.266C 384.578 192.222 384.622 191.378 384.266 191.734z\" />\r\n            <path style=\"stroke:none; fill:#92c2d5\"\r\n                d=\"M 433.6 191.2C 434.147 192.464 434.244 192.622 435.2 193.6C 434.654 192.336 434.556 192.178 433.6 191.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 575.2 191.2L 576 192L 575.2 191.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 249.6 192L 250.4 192.8L 249.6 192z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 299.2 192L 300 192.8L 299.2 192M 577.6 192L 578.4 192.8L 577.6 192z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 300 192.8L 300.8 193.6L 300 192.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 378.4 192.8L 379.2 193.6L 378.4 192.8z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 380.8 192.8L 381.6 202.4L 376.8 202.4C 376.574 204.77 382.283 222.077 374.475 219.724C 372.365 219.088 370.802 216.293 368.8 215.2C 368.074 224.4 362.471 232.83 362.236 241.6C 362.065 247.974 368.288 251.662 367.2 258.4L 366.4 258.4L 366.4 256L 362.4 256C 364.246 260.43 368.276 263.394 369.728 268.001C 372.535 276.902 367.144 290.006 360 295.2C 358.937 290.237 353.119 295.435 351.2 291.2L 350.4 291.2C 347.998 293.627 345.335 292.996 342.4 294.454C 335.755 297.756 332.306 301.681 324.8 303.293C 320.623 304.19 313.818 302.729 315.2 308.8C 313.094 310.63 313.684 313.697 311.653 315.742C 307.855 319.566 299.829 313.821 296 312C 294.148 315.314 292.462 317.895 288.8 319.2C 288.711 329.95 283.569 335.253 276.867 342.958C 275.056 345.041 271.762 345.435 270.558 348.087C 268.013 353.69 271.196 361.055 271.449 366.431C 271.572 369.063 269.648 371.95 268.8 374.4C 276.176 373.434 279.611 379.894 285.683 381.846C 291.518 383.723 304.534 379.331 310.366 377.629C 316.806 375.749 322.701 365.051 328.374 360.982C 337.355 354.542 350.499 359.233 359.966 353.418C 364.583 350.58 371.014 339.734 376.003 339.137C 379.56 338.711 383.772 344.398 386.4 346.4L 387.2 346.4C 389.621 343.28 390.731 336.384 393.811 334.422C 396.022 333.014 399.84 333.275 402.4 332.8C 402.151 328.243 398.308 324.488 398.89 320C 399.982 311.579 406.78 310.57 410.146 304.682C 411.746 301.883 410.994 298.231 411.923 295.2C 415.369 283.968 421.767 280.496 432.8 278.4L 432 254.4C 424.43 253.566 430.593 241.674 420 240.8L 420 236.8C 416.602 236.371 413.776 236.006 410.4 236.8L 410.4 232.8C 408.086 232.848 405.477 233.541 403.2 233.213C 390.682 231.41 399.934 215.634 397.174 208.8C 394.184 201.393 386.226 198.114 380.8 192.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 577.6 192.8L 578.4 193.6L 577.6 192.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 384.8 193.6L 385.6 194.4L 384.8 193.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 495.2 193.6L 496 194.4L 495.2 193.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 572.534 193.866C 572.178 194.222 573.022 194.178 573.066 194.134C 573.422 193.778 572.578 193.822 572.534 193.866z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 187.2 194.4C 183.244 199.2 180.818 201.526 180.8 208L 176.8 208L 176.8 208.8L 181.6 208.8C 181.651 203.143 187.813 198.866 187.2 194.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 189.6 194.4L 190.4 197.6L 191.2 197.6C 190.749 196.198 190.465 195.566 189.6 194.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 300.8 194.4L 300.8 196.8L 301.6 196.8C 301.399 195.638 301.348 195.398 300.8 194.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 569.6 197.6L 570.4 197.6C 572.042 196.028 572.955 195.541 575.2 195.2C 572.379 194.049 570.718 194.818 569.6 197.6M 578.4 194.4L 578.4 199.2L 579.2 199.2C 579.162 197.398 579.099 196.042 578.4 194.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 188 195.2C 184.044 200 181.618 202.326 181.6 208.8L 178.4 208.8C 179.074 210.215 179.633 210.95 180.8 212C 183.552 208.746 184.77 196.02 190.4 200.8L 191.2 200.8C 190.942 198.733 190.422 197.118 189.6 195.2L 188 195.2z\" />\r\n            <path style=\"stroke:none; fill:#92c2d5\"\r\n                d=\"M 190.4 195.2L 191.2 196L 190.4 195.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 316.8 195.2L 317.6 196L 316.8 195.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 380 195.2C 380.046 197.428 380.282 199.433 380.8 201.6L 381.6 201.6C 381.308 199.342 380.986 197.249 380 195.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 570.4 197.6L 574.4 196C 572.332 195.286 571.639 195.86 570.4 197.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 574.4 195.2C 573.217 195.989 573.438 196 572 196L 572 196.8C 573.555 196.687 575.072 196.828 574.4 195.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 123.2 196C 122.082 197.64 121.399 198.917 120.8 200.8L 121.6 200.8C 122.657 199.057 123.401 197.994 123.2 196z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 191.466 196.534C 191.422 196.578 191.378 197.422 191.734 197.066C 191.778 197.022 191.822 196.178 191.466 196.534z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 316.8 196L 317.6 196.8L 316.8 196M 384 196C 385.347 198.676 386.642 199.541 389.6 200L 389.6 199.2L 384 196z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 498.4 196L 498.4 198.4L 499.2 198.4C 498.999 197.238 498.948 196.999 498.4 196z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 577.6 196C 576.651 196.949 576.378 197.267 576 198.4C 577.801 198.022 578.494 197.712 577.6 196z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 579.466 196.534C 579.422 196.578 579.378 197.422 579.734 197.066C 579.778 197.022 579.822 196.178 579.466 196.534z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 300.8 196.8L 301.6 197.6L 300.8 196.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 317.066 197.334C 317.022 197.378 316.978 198.222 317.334 197.866C 317.378 197.822 317.422 196.978 317.066 197.334z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 390.134 197.066C 389.778 197.422 390.622 197.378 390.666 197.334C 391.022 196.978 390.178 197.022 390.134 197.066z\" />\r\n            <path style=\"stroke:none; fill:#68aac6\"\r\n                d=\"M 191.466 198.134C 191.422 198.178 191.378 199.022 191.734 198.666C 191.778 198.622 191.822 197.778 191.466 198.134z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 300 197.6L 300.8 198.4L 300 197.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 300.8 197.6L 300.8 200L 301.6 200C 301.399 198.838 301.348 198.598 300.8 197.6z\" />\r\n            <path style=\"stroke:none; fill:#68aac6\"\r\n                d=\"M 381.066 198.134C 381.022 198.178 380.978 199.022 381.334 198.666C 381.378 198.622 381.422 197.778 381.066 198.134z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 391.734 197.866C 391.378 198.222 392.222 198.178 392.266 198.134C 392.622 197.778 391.778 197.822 391.734 197.866M 492.8 197.6L 493.6 198.4L 492.8 197.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 569.6 197.6C 569.675 199.364 569.885 200.715 570.4 202.4L 571.2 202.4C 570.751 200.718 570.361 199.153 569.6 197.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 570.4 197.6C 570.792 202.991 573.687 204.612 578.4 206.4C 576.061 203.01 572.7 202.12 572 197.6L 570.4 197.6z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 123.2 198.4C 121.146 202.528 118.12 205.914 116.8 210.4L 117.6 210.4C 120.042 206.429 122.93 202.677 124.8 198.4L 123.2 198.4z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 186.4 198.4C 184.449 201.784 184.032 204.931 184 208.8C 186.593 207.798 187.825 206.114 189.6 204C 188.186 208.918 183.191 210.19 179.2 212.8C 178.366 208.931 170.429 211.39 168.578 213.978C 167.006 216.176 168.671 219.223 166.2 221.2C 164.288 222.73 161.421 221.712 159.2 221.6C 159.2 224.89 159.063 228.032 160 231.2L 153.6 231.2C 154.565 233.916 155.688 236.309 156 239.2C 152.606 240.146 151.09 242.518 149.6 245.6C 161.411 239.941 157.556 253.566 161.619 259.685C 163.717 262.843 168.738 263.023 171.369 266.076C 173.377 268.406 174.089 272.994 177.646 273.278C 183.151 273.718 189.798 264.216 190.058 259.203C 190.401 252.608 178.732 250.968 179.698 244C 180.232 240.15 184.36 239.576 185.99 236.581C 189.269 230.552 188.243 223.13 189.854 216.812C 190.874 212.811 194.504 210.768 195.2 206.4C 191.346 204.69 189.258 201.346 186.4 198.4z\" />\r\n            <path style=\"stroke:none; fill:#010101\"\r\n                d=\"M 187.2 198.4C 188.685 202.221 194.438 205.075 194.827 208.834C 195.122 211.692 192.258 213.634 191.382 216.136C 189.237 222.253 189.224 231.183 185.61 236.581C 183.71 239.418 179.699 239.97 179.49 244.003C 179.124 251.038 189.874 252.812 189.747 259.2C 189.658 263.673 183.254 274.104 178.415 274.423C 174.505 274.682 174.132 269.102 172.29 266.743C 169.487 263.156 164.681 263.021 162.082 259.777C 157.627 254.218 160.003 243.786 149.6 245.6C 151.966 242.089 158.649 234.044 151.2 232.8C 151.922 234.338 152.061 234.399 153.6 235.2C 150.788 238.887 148.48 242.515 148 247.2C 150.022 247.158 151.666 246.978 153.6 246.4C 155.514 250.249 157.837 259.062 160.482 261.838C 162.894 264.367 166.926 264.535 169.494 267.246C 171.759 269.638 172.105 274.198 174.744 275.978C 182.666 281.321 191.319 266.026 191.884 259.928C 192.65 251.662 181.375 250.042 181.6 241.6C 192.55 243.618 190.834 224.087 193.278 217.672C 194.814 213.638 197.935 211.437 196.546 206.547C 195.637 203.35 191.533 201.086 189.6 198.4L 187.2 198.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 276 198.4L 276 200C 277.308 199.564 277.164 199.708 277.6 198.4L 276 198.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 300.266 198.934C 300.222 198.978 300.178 199.822 300.534 199.466C 300.578 199.422 300.622 198.578 300.266 198.934z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 392.8 198.4L 393.6 199.2L 392.8 198.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 492.534 198.666C 492.178 199.022 493.022 198.978 493.066 198.934C 493.422 198.578 492.578 198.622 492.534 198.666z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 576 198.4C 575.564 199.708 575.708 199.564 574.4 200L 574.4 200.8C 575.995 200.122 576.559 199.994 576 198.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 576.8 198.4L 575.2 201.6L 576 202.4C 577.325 201.051 577.801 200.203 578.4 198.4L 576.8 198.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 191.2 199.2L 191.2 201.6L 192 201.6C 191.799 200.438 191.748 200.198 191.2 199.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 316.8 199.2L 317.6 200L 316.8 199.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 379.2 199.2L 380 200L 379.2 199.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 393.866 199.734C 393.822 199.778 393.778 200.622 394.134 200.266C 394.178 200.222 394.222 199.378 393.866 199.734z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 490.4 199.2L 491.2 200L 490.4 199.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 491.2 199.2L 492 200L 491.2 199.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 192 200C 192.757 202.49 193.791 203.43 196 204.8C 194.984 202.71 193.822 201.447 192 200z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 300 200L 300 205.6L 300.8 205.6L 301.6 200L 300 200z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 316.8 200L 316.8 203.2L 317.6 203.2C 317.461 201.852 317.346 201.205 316.8 200z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 376 200L 376.8 200.8L 376 200z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 379.2 200L 379.2 201.6L 380.8 201.6L 380.8 200L 379.2 200z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 488.8 200L 489.6 200.8L 488.8 200z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 489.6 200L 490.4 200.8L 489.6 200z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 577.6 200L 578.4 200.8L 577.6 200z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 580 200L 580.8 202.4L 581.6 202.4L 581.6 200L 580 200z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 358.134 201.066C 357.778 201.422 358.622 201.378 358.666 201.334C 359.022 200.978 358.178 201.022 358.134 201.066z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 364 200.8L 364.8 201.6L 364 200.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 394.4 200.8L 395.2 201.6L 394.4 200.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 486.4 200.8C 486.646 202.498 486.706 202.949 488 204C 487.523 202.752 487.129 201.902 486.4 200.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 487.734 201.066C 487.378 201.422 488.222 201.378 488.266 201.334C 488.622 200.978 487.778 201.022 487.734 201.066M 580.266 201.334C 580.222 201.378 580.178 202.222 580.534 201.866C 580.578 201.822 580.622 200.978 580.266 201.334z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 299.2 201.6C 299.262 203.716 299.198 205.013 300.8 206.4C 300.351 204.718 299.961 203.153 299.2 201.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 356.534 201.866C 356.178 202.222 357.022 202.178 357.066 202.134C 357.422 201.778 356.578 201.822 356.534 201.866z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 364.8 201.6L 365.6 202.4L 364.8 201.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 378.4 201.6L 378.4 202.4L 381.6 202.4C 380.395 201.854 379.748 201.739 378.4 201.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 487.466 202.134C 487.422 202.178 487.378 203.022 487.734 202.666C 487.778 202.622 487.822 201.778 487.466 202.134z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 576.8 201.6L 577.6 202.4L 576.8 201.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 352.8 203.2L 352.8 204L 356 203.2C 354.553 202.741 354.345 202.828 352.8 203.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 361.334 202.666C 360.978 203.022 361.822 202.978 361.866 202.934C 362.222 202.578 361.378 202.622 361.334 202.666z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 365.6 202.4L 366.4 203.2L 365.6 202.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 373.6 202.4L 374.4 203.2L 373.6 202.4M 395.2 202.4L 396 203.2L 395.2 202.4M 571.2 202.4L 571.2 204L 572.8 204C 572.364 202.692 572.508 202.836 571.2 202.4M 196 203.2C 196.621 204.906 196.904 205.417 198.4 206.4C 197.651 204.841 197.286 204.36 196 203.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 272.8 203.2L 272.8 206.4L 273.6 206.4C 273.461 205.052 273.346 204.405 272.8 203.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 365.6 203.2L 366.4 204L 365.6 203.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 373.866 203.734C 373.822 203.778 373.778 204.622 374.134 204.266C 374.178 204.222 374.222 203.378 373.866 203.734z\" />\r\n            <path style=\"stroke:none; fill:#68aac6\"\r\n                d=\"M 376.266 203.734C 376.222 203.778 376.178 204.622 376.534 204.266C 376.578 204.222 376.622 203.378 376.266 203.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 396 203.2L 396.8 204L 396 203.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 489.6 203.2L 490.4 204L 489.6 203.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 580 203.2C 580.874 207.518 583.576 209.727 587.2 212C 585.386 208.737 582.546 205.937 580 203.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 188.8 204L 185.6 209.6C 188.036 208.234 189.715 206.888 188.8 204z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 361.334 204.266C 360.978 204.622 361.822 204.578 361.866 204.534C 362.222 204.178 361.378 204.222 361.334 204.266z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 365.6 204L 364.8 205.6L 366.4 205.6C 366.4 204.118 366.64 204.52 365.6 204z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 366.666 204.534C 366.622 204.578 366.578 205.422 366.934 205.066C 366.978 205.022 367.022 204.178 366.666 204.534z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 396.8 204L 397.6 204.8L 396.8 204z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 489.6 204L 490.4 207.2L 491.2 207.2C 490.723 205.952 490.329 205.102 489.6 204z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 188 204.8C 187.211 205.983 187.2 205.762 187.2 207.2C 188.231 206.046 188.321 206.213 188 204.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 345.6 204.8L 346.4 205.6L 345.6 204.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 360 204.8C 359.389 206.996 359.389 208.204 360 210.4L 360.8 210.4C 360.77 208.36 361.034 206.763 361.6 204.8L 360 204.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 373.6 204.8L 373.6 208L 374.4 208C 374.261 206.652 374.146 206.005 373.6 204.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 397.6 204.8L 398.4 205.6L 397.6 204.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 490.666 205.334C 490.622 205.378 490.578 206.222 490.934 205.866C 490.978 205.822 491.022 204.978 490.666 205.334z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 572.8 204.8L 573.6 205.6L 572.8 204.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 573.6 204.8L 573.6 205.6L 577.6 206.4L 577.6 205.6L 573.6 204.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 193.334 205.866C 192.978 206.222 193.822 206.178 193.866 206.134C 194.222 205.778 193.378 205.822 193.334 205.866z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 300.8 205.6L 300.8 206.4L 304 206.4C 302.795 205.854 302.148 205.739 300.8 205.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 343.2 205.6L 344 206.4L 343.2 205.6M 351.734 205.866C 351.378 206.222 352.222 206.178 352.266 206.134C 352.622 205.778 351.778 205.822 351.734 205.866z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 364 205.6L 364.8 206.4L 364 205.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 365.334 205.866C 364.978 206.222 365.822 206.178 365.866 206.134C 366.222 205.778 365.378 205.822 365.334 205.866z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 398.4 205.6L 399.2 208.8L 400 208.8C 399.591 207.238 399.414 206.834 398.4 205.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 578.4 206.4L 578.4 207.2C 582.084 209.846 585.891 213.578 588 217.6L 584 218.4L 584 219.2C 594.516 218.381 583.336 209.046 580.8 205.6L 578.4 206.4M 196.8 206.4L 196.8 209.6L 197.6 209.6C 197.461 208.252 197.346 207.605 196.8 206.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 197.6 206.4L 196.8 211.2L 197.6 211.2C 198.15 209.265 198.337 208.258 197.6 206.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 198.4 206.4L 198.4 208.8L 199.2 208.8C 198.999 207.638 198.948 207.398 198.4 206.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 308 206.4L 308 207.2L 310.4 207.2C 309.402 206.652 309.162 206.601 308 206.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 310.4 206.4L 310.4 207.2L 314.4 207.2C 312.985 206.577 311.971 206.47 310.4 206.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 314.4 206.4L 315.2 207.2L 314.4 206.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 350.134 206.666C 349.778 207.022 350.622 206.978 350.666 206.934C 351.022 206.578 350.178 206.622 350.134 206.666z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 358.4 206.4L 358.4 209.6L 359.2 209.6C 359.061 208.252 358.946 207.605 358.4 206.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 583.2 206.4C 583.747 207.664 583.844 207.822 584.8 208.8C 584.254 207.536 584.156 207.378 583.2 206.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 318.4 207.2L 318.4 208L 324 208C 322.134 207.212 320.434 207.215 318.4 207.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 374.4 207.2L 375.2 208L 374.4 207.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 568.8 207.2L 568.8 212L 569.6 212L 570.4 207.2L 568.8 207.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 572.8 207.2L 573.6 208L 572.8 207.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 274.4 208L 275.2 208.8L 274.4 208z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 326.134 208.266C 325.778 208.622 326.622 208.578 326.666 208.534C 327.022 208.178 326.178 208.222 326.134 208.266M 374.4 208L 375.2 208.8L 374.4 208z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 376.8 208L 377.6 208.8L 376.8 208z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 569.6 208L 569.6 212.8L 570.4 212.8C 570.362 210.998 570.299 209.642 569.6 208z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 572 208L 572.8 208.8L 572 208M 574.4 208C 576.848 212.414 579.132 216.497 584 218.4C 581.426 214.46 578.974 209.694 574.4 208z\" />\r\n            <path style=\"stroke:none; fill:#010101\"\r\n                d=\"M 152 231.2C 158.894 230.822 159.199 226.763 159.2 220.8C 168.514 219.59 168.345 210.609 178.4 210.4L 178.4 208.8C 165.356 208.836 158.528 222.272 152 231.2z\" />\r\n            <path style=\"stroke:none; fill:#92c2d5\"\r\n                d=\"M 183.2 208.8L 183.2 209.6L 185.6 209.6C 184.602 209.052 184.362 209.001 183.2 208.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 194.666 209.334C 194.622 209.378 194.578 210.222 194.934 209.866C 194.978 209.822 195.022 208.978 194.666 209.334z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 329.6 208.8L 329.6 209.6L 332 209.6C 331.002 209.052 330.762 209.001 329.6 208.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 341.334 209.066C 340.978 209.422 341.822 209.378 341.866 209.334C 342.222 208.978 341.378 209.022 341.334 209.066z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 377.866 209.334C 377.822 209.378 377.778 210.222 378.134 209.866C 378.178 209.822 378.222 208.978 377.866 209.334z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 468.8 209.6L 468.8 210.4L 473.6 209.6C 471.809 208.951 470.682 209.177 468.8 209.6M 182.934 209.866C 182.578 210.222 183.422 210.178 183.466 210.134C 183.822 209.778 182.978 209.822 182.934 209.866z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 255.2 209.6L 255.2 210.4L 257.6 210.4C 256.602 209.852 256.362 209.801 255.2 209.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 257.6 209.6L 257.6 210.4L 261.6 210.4C 260.185 209.777 259.171 209.67 257.6 209.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 332 209.6L 332 210.4L 334.4 210.4C 333.402 209.852 333.162 209.801 332 209.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 334.4 209.6L 334.4 210.4L 339.2 210.4C 337.558 209.701 336.202 209.638 334.4 209.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 339.734 209.866C 339.378 210.222 340.222 210.178 340.266 210.134C 340.622 209.778 339.778 209.822 339.734 209.866z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 470.666 210.134C 470.622 210.178 470.578 211.022 470.934 210.666C 470.978 210.622 471.022 209.778 470.666 210.134z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 471.2 209.6L 471.2 210.4L 473.6 210.4C 472.602 209.852 472.362 209.801 471.2 209.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 473.6 209.6L 473.6 210.4L 476.8 210.4C 475.595 209.854 474.948 209.739 473.6 209.6M 489.6 209.6L 490.4 210.4L 489.6 209.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 113.6 210.4L 113.6 212.8L 114.4 212.8L 115.2 210.4L 113.6 210.4z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 116 210.4C 115.002 213.904 115.328 216.154 119.2 216.8L 119.2 216C 116.63 214.551 116.759 213.042 116 210.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 168 213.6C 170.964 212.791 173.75 211.657 176.8 211.2C 173.491 209.909 170.362 211.119 168 213.6z\" />\r\n            <path style=\"stroke:none; fill:#92c2d5\"\r\n                d=\"M 179.466 210.934C 179.422 210.978 179.378 211.822 179.734 211.466C 179.778 211.422 179.822 210.578 179.466 210.934z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 194.4 210.4C 192.391 212.218 190.881 213.349 190.4 216C 192.408 214.454 194.469 213.026 194.4 210.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 361.334 210.666C 360.978 211.022 361.822 210.978 361.866 210.934C 362.222 210.578 361.378 210.622 361.334 210.666M 378.4 210.4L 378.4 216L 379.2 216C 379.185 213.966 379.188 212.266 378.4 210.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 468 212C 469.264 211.454 469.422 211.356 470.4 210.4C 469.136 210.947 468.978 211.044 468 212z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 477.334 210.666C 476.978 211.022 477.822 210.978 477.866 210.934C 478.222 210.578 477.378 210.622 477.334 210.666z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 478.934 210.666C 478.578 211.022 479.422 210.978 479.466 210.934C 479.822 210.578 478.978 210.622 478.934 210.666z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 492 210.4L 492 212.8L 492.8 212.8C 492.599 211.638 492.548 211.398 492 210.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 492.8 210.4L 492.8 212.8L 493.6 212.8C 493.399 211.638 493.348 211.399 492.8 210.4z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 166.4 211.2L 167.2 212L 166.4 211.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 180.8 211.2L 181.6 212L 180.8 211.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 269.6 211.2L 270.4 212L 269.6 211.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 272.8 211.2L 273.6 212L 272.8 211.2z\" />\r\n            <path style=\"stroke:none; fill:#68aac6\"\r\n                d=\"M 362.134 211.466C 361.778 211.822 362.622 211.778 362.666 211.734C 363.022 211.378 362.178 211.422 362.134 211.466z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 363.2 211.2C 364.178 212.156 364.336 212.253 365.6 212.8L 365.6 212L 363.2 211.2z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 165.6 212L 165.6 216L 166.4 216C 166.33 214.429 166.223 213.415 165.6 212z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 179.734 212.266C 179.378 212.622 180.222 212.578 180.266 212.534C 180.622 212.178 179.778 212.222 179.734 212.266z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 269.334 212.266C 268.978 212.622 269.822 212.578 269.866 212.534C 270.222 212.178 269.378 212.222 269.334 212.266z\" />\r\n            <path style=\"stroke:none; fill:#92c2d5\"\r\n                d=\"M 361.6 212L 361.6 212.8L 364 212.8C 363.002 212.252 362.762 212.201 361.6 212z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 369.6 212L 370.4 212.8L 369.6 212z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 399.2 212L 400 212.8L 399.2 212z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 467.2 212L 468 212.8L 467.2 212z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 460 223.2L 460 224C 462.282 226.008 463.525 227.37 464 230.4L 456 230.4C 453.888 218.749 444.078 225.604 444.8 234.4C 439.098 236.405 441.025 246.426 439.478 251.185C 438.486 254.234 435.27 255.51 434.262 258.443C 431.804 265.596 434.986 276.65 435.674 284C 435.949 286.924 434.962 290.565 436.798 293.161C 438.765 295.939 443.302 296.948 446.4 297.6L 444 292C 449.114 292.524 454.63 297.016 459.882 295.01C 462.423 294.039 461.857 291.739 463.218 289.879C 464.544 288.068 469.824 286.546 472 286.494C 476.202 286.393 479.882 289.742 484 290.215C 489.971 290.901 496.82 287.12 501.6 284C 499.139 274.576 504.407 274.609 512 272.8C 510.6 265.288 507.203 259.566 504.742 252.54C 502.507 246.156 501.604 238.727 499.2 232C 492.987 231.19 495.996 224.48 497.6 220.8C 494.998 219.97 493.521 219.506 492.8 216.8C 487.13 215.272 477.967 210.6 472.031 212.839C 467.523 214.539 463.74 220.154 460 223.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 572 212L 573.6 216.8L 574.4 216.8C 573.975 214.648 573.507 213.584 572 212z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 587.2 212L 588 212.8L 587.2 212z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 254.4 212.8L 254.4 215.2L 255.2 215.2L 256 212.8L 254.4 212.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 364 212.8C 364.784 214.226 364.726 214.075 366.4 214.4L 366.4 213.6L 364 212.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 365.334 213.066C 364.978 213.422 365.822 213.378 365.866 213.334C 366.222 212.978 365.378 213.022 365.334 213.066z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 370.4 212.8L 371.2 213.6L 370.4 212.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 479.2 212.8L 479.2 213.6L 484.8 214.4C 482.951 213.286 481.354 212.988 479.2 212.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 569.6 212.8L 570.4 213.6L 569.6 212.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 253.6 213.6L 252.8 216.8L 253.6 216.8C 253.972 215.255 254.059 215.047 253.6 213.6M 262.4 213.6L 262.4 214.4L 264.8 214.4C 263.802 213.852 263.562 213.801 262.4 213.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 366.4 213.6L 368 219.2L 368.8 219.2C 368.578 216.762 368.379 215.104 366.4 213.6M 572.266 214.134C 572.222 214.178 572.178 215.022 572.534 214.666C 572.578 214.622 572.622 213.778 572.266 214.134z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 577.6 213.6C 578.121 215.547 578.528 216.226 580 217.6C 579.359 215.917 578.802 214.93 577.6 213.6M 112.8 214.4C 112.117 216.558 112.119 217.109 114.4 217.6C 113.923 216.352 113.529 215.502 112.8 214.4z\" />\r\n            <path style=\"stroke:none; fill:#23799f\"\r\n                d=\"M 368.534 214.666C 368.178 215.022 369.022 214.978 369.066 214.934C 369.422 214.578 368.578 214.622 368.534 214.666z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 488.8 214.4L 489.6 215.2L 488.8 214.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 490.134 214.666C 489.778 215.022 490.622 214.978 490.666 214.934C 491.022 214.578 490.178 214.622 490.134 214.666z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 189.6 215.2L 190.4 216L 189.6 215.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 194.134 215.466C 193.778 215.822 194.622 215.778 194.666 215.734C 195.022 215.378 194.178 215.422 194.134 215.466z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 252 215.2L 252 217.6L 252.8 217.6C 252.599 216.438 252.548 216.198 252 215.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 368 215.2L 368.8 216L 368 215.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 468 215.2L 468.8 216L 468 215.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 489.6 215.2L 489.6 216L 492 216.8C 491.022 215.844 490.864 215.747 489.6 215.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 573.066 215.734C 573.022 215.778 572.978 216.622 573.334 216.266C 573.378 216.222 573.422 215.378 573.066 215.734z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 189.6 216L 189.6 222.4L 190.4 222.4C 190.394 220.131 190.478 218.09 189.6 216z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 190.4 216L 190.4 219.2L 191.2 219.2C 191.061 217.852 190.946 217.205 190.4 216z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 192.8 216L 193.6 216.8L 192.8 216z\" />\r\n            <path style=\"stroke:none; fill:#010101\"\r\n                d=\"M 366.4 216C 366.398 229.957 355.754 239.566 364.8 252.8C 362.084 253.234 359.823 254.359 360.758 257.604C 361.89 261.528 365.665 264.298 367.317 268C 370.101 274.238 365.894 281.927 362.685 287.153C 358.81 293.463 354.025 287.892 348.8 288.946C 345.262 289.661 340.762 289.62 337.839 291.976C 334.826 294.404 334.24 298.57 330.369 300.218C 323.183 303.276 313.074 296.698 312.8 308L 314.4 308C 316.066 299.843 325.694 303.994 331.969 301.954C 337.423 300.18 341.11 294.199 346.472 291.995C 351.773 289.815 357.713 294.906 362.793 291.19C 365.056 289.534 366.794 284.895 368.004 282.4C 370.161 277.947 371.554 271.06 369.349 266.4C 367.914 263.369 363.805 260.425 363.62 256.918C 363.509 254.802 365.675 254.646 367.2 254.4C 366.498 249.572 362.362 245.777 362.366 240.8C 362.371 236.574 365.358 233.385 366.753 229.6C 368.357 225.246 368 220.555 368 216L 366.4 216z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 378.666 216.534C 378.622 216.578 378.578 217.422 378.934 217.066C 378.978 217.022 379.022 216.178 378.666 216.534M 466.4 216L 466.4 217.6C 467.708 217.164 467.564 217.308 468 216L 466.4 216z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 490.134 216.266C 489.778 216.622 490.622 216.578 490.666 216.534C 491.022 216.178 490.178 216.222 490.134 216.266z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 569.6 216C 569.846 217.698 569.906 218.149 571.2 219.2C 570.723 217.952 570.329 217.102 569.6 216z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 570.4 216L 570.4 218.4L 571.2 218.4C 570.999 217.238 570.948 216.998 570.4 216z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 119.2 216.8C 119.215 229.072 102.183 218.47 100.8 231.2L 101.6 231.2C 104.659 222.228 109.789 227.842 115.771 224.806C 118.603 223.368 122.167 219.448 119.2 216.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 167.2 216.8C 165.478 218.881 164.275 219.594 161.6 220L 161.6 220.8C 164.726 221.375 168.486 220.774 167.2 216.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 371.2 216.8L 372 217.6L 371.2 216.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 377.866 217.334C 377.822 217.378 377.778 218.222 378.134 217.866C 378.178 217.822 378.222 216.978 377.866 217.334M 398.666 217.334C 398.622 217.378 398.578 218.222 398.934 217.866C 398.978 217.822 399.022 216.978 398.666 217.334z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 578.4 216.8C 579.733 218.704 580.898 218.946 583.2 219.2L 583.2 218.4L 578.4 216.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 580 216.8C 580.978 217.756 581.136 217.853 582.4 218.4C 581.422 217.444 581.264 217.347 580 216.8M 372 217.6C 372.436 218.908 372.292 218.764 373.6 219.2L 373.6 217.6L 372 217.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 462.4 217.6L 463.2 218.4L 462.4 217.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 465.6 217.6L 466.4 218.4L 465.6 217.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 250.4 218.4L 251.2 219.2L 250.4 218.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 254.4 218.4L 254.4 219.2L 257.6 220L 257.6 219.2L 254.4 218.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 365.6 218.4L 365.6 221.6L 366.4 221.6C 366.261 220.252 366.146 219.605 365.6 218.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 373.6 218.4L 373.6 219.2L 376 219.2C 375.002 218.652 374.762 218.601 373.6 218.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 372.8 219.2L 372.8 220C 374.564 219.925 375.915 219.715 377.6 219.2C 375.936 218.794 374.53 219.01 372.8 219.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 464.8 218.4L 465.6 219.2L 464.8 218.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 498.134 218.666C 497.778 219.022 498.622 218.978 498.666 218.934C 499.022 218.578 498.178 218.622 498.134 218.666z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 571.2 218.4L 572 219.2L 571.2 218.4M 118.4 219.2L 119.2 220L 118.4 219.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 251.2 219.2L 252 220L 251.2 219.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 572 219.2L 572.8 220L 572 219.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 117.6 220L 118.4 220.8L 117.6 220z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 192.8 220L 190.4 235.2L 191.2 235.2C 191.781 230.626 194.494 224.341 192.8 220z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 256.8 220L 258.4 223.2L 259.2 223.2C 258.661 221.362 258.428 220.981 256.8 220M 373.6 220L 373.6 220.8L 376.8 220.8C 375.595 220.254 374.948 220.139 373.6 220M 446.4 222.4L 449.6 220.8C 447.754 220.354 447.395 220.803 446.4 222.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 449.6 220L 449.6 220.8L 452.8 220.8C 451.595 220.254 450.948 220.139 449.6 220z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 452.8 220L 452.8 220.8L 455.2 220.8C 454.202 220.252 453.962 220.201 452.8 220z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 99.2 228.8L 100 228.8C 101.488 224.427 104.139 221.951 108.8 221.6C 103.281 219.306 99.584 223.513 99.2 228.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 108.8 220.8C 109.682 221.966 110.034 222.318 111.2 223.2C 110.814 221.309 110.691 221.186 108.8 220.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 116 220.8L 116.8 221.6L 116 220.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 117.334 221.066C 116.978 221.422 117.822 221.378 117.866 221.334C 118.222 220.978 117.378 221.022 117.334 221.066M 159.734 221.066C 159.378 221.422 160.222 221.378 160.266 221.334C 160.622 220.978 159.778 221.022 159.734 221.066z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 160.8 220.8L 160.8 221.6L 164.8 222.4L 164.8 221.6L 160.8 220.8M 166.134 221.066C 165.778 221.422 166.622 221.378 166.666 221.334C 167.022 220.978 166.178 221.022 166.134 221.066z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 448.534 221.066C 448.178 221.422 449.022 221.378 449.066 221.334C 449.422 220.978 448.578 221.022 448.534 221.066z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 452.8 220.8L 452.8 221.6L 455.2 221.6C 454.202 221.052 453.962 221.001 452.8 220.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 456 220.8L 456 221.6L 459.2 221.6C 457.995 221.054 457.348 220.939 456 220.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 103.2 222.4L 103.2 223.2L 113.6 224.8C 110.393 222.054 107.264 221.213 103.2 222.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 112 223.2L 112 224C 114.116 223.658 114.769 223.343 116 221.6L 112 223.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 164.8 221.6L 165.6 222.4L 164.8 221.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 259.466 222.134C 259.422 222.178 259.378 223.022 259.734 222.666C 259.778 222.622 259.822 221.778 259.466 222.134z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 454.4 221.6L 454.4 222.4L 456.8 224.8C 457.529 223.699 457.923 222.848 458.4 221.6L 454.4 221.6M 115.466 222.934C 115.422 222.978 115.378 223.822 115.734 223.466C 115.778 223.422 115.822 222.578 115.466 222.934z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 364 222.4L 364 224.8C 364.956 223.822 365.053 223.664 365.6 222.4L 364 222.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 397.6 222.4L 397.6 224.8L 398.4 224.8C 398.199 223.638 398.148 223.398 397.6 222.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 451.2 222.4L 452 223.2L 451.2 222.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 496.266 222.934C 496.222 222.978 496.178 223.822 496.534 223.466C 496.578 223.422 496.622 222.578 496.266 222.934z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 102.934 223.466C 102.578 223.822 103.422 223.778 103.466 223.734C 103.822 223.378 102.978 223.422 102.934 223.466z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 192 223.2L 192.8 224L 192 223.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 101.6 224C 102.036 225.308 101.892 225.164 103.2 225.6L 103.2 224L 101.6 224z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 114.134 224.266C 113.778 224.622 114.622 224.578 114.666 224.534C 115.022 224.178 114.178 224.222 114.134 224.266z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 193.066 224.534C 193.022 224.578 192.978 225.422 193.334 225.066C 193.378 225.022 193.422 224.178 193.066 224.534M 256 224L 256.8 224.8L 256 224M 453.6 224L 454.4 224.8L 453.6 224z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 459.2 224C 460.085 226.01 461.218 227.742 462.4 229.6L 463.2 229.6C 462.474 227.028 461.282 225.663 459.2 224z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 460 224L 460.8 224.8L 460 224z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 495.2 224L 495.2 231.2L 496 231.2C 495.998 228.699 496.17 226.312 495.2 224z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 101.334 225.066C 100.978 225.422 101.822 225.378 101.866 225.334C 102.222 224.978 101.378 225.022 101.334 225.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 447.2 224.8L 448 225.6L 447.2 224.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 454.666 225.334C 454.622 225.378 454.578 226.222 454.934 225.866C 454.978 225.822 455.022 224.978 454.666 225.334z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 461.066 225.334C 461.022 225.378 460.978 226.222 461.334 225.866C 461.378 225.822 461.422 224.978 461.066 225.334z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 573.6 224.8L 572.8 228L 573.6 228C 573.972 226.455 574.059 226.247 573.6 224.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 100.8 225.6C 99.572 232.239 102.874 237.442 100.8 244C 106.182 239.903 100.455 231.268 102.4 225.6L 100.8 225.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 461.6 225.6C 462.482 226.766 462.834 227.118 464 228C 463.281 226.301 463.299 226.319 461.6 225.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 100.266 226.934C 100.222 226.978 100.178 227.822 100.534 227.466C 100.578 227.422 100.622 226.578 100.266 226.934z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 365.066 226.934C 365.022 226.978 364.978 227.822 365.334 227.466C 365.378 227.422 365.422 226.578 365.066 226.934z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 446.4 226.4L 447.2 227.2L 446.4 226.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 455.2 226.4C 456.234 230.153 462.955 232.877 464 228L 463.2 228C 460.062 230.334 458.01 228.422 455.2 226.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 192.266 227.734C 192.222 227.778 192.178 228.622 192.534 228.266C 192.578 228.222 192.622 227.378 192.266 227.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 445.866 227.734C 445.822 227.778 445.778 228.622 446.134 228.266C 446.178 228.222 446.222 227.378 445.866 227.734z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 572 227.2L 572 230.4L 572.8 230.4C 572.661 229.052 572.546 228.405 572 227.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 573.6 227.2C 571.819 233.25 562.563 235.866 557.588 239.272C 552.542 242.728 550.347 248.855 545.525 251.993C 542.19 254.162 538.141 253.37 534.4 253.829C 528.646 254.536 523.319 256.829 517.6 257.6C 517.156 260.804 516.689 264.303 512.8 263.2C 512.962 264.68 512.962 265.72 512.8 267.2C 516.973 266.043 519.666 263.862 519.2 259.2C 525.234 258.707 530.769 256.15 536.8 255.428C 540.513 254.984 544.598 255.801 547.83 253.482C 556.961 246.926 561.449 233.996 575.2 234.4L 575.2 227.2L 573.6 227.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 576.8 227.2L 577.6 228L 576.8 227.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 572.8 228L 572.8 230.4L 573.6 230.4C 573.399 229.238 573.348 228.998 572.8 228z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 578.934 228.266C 578.578 228.622 579.422 228.578 579.466 228.534C 579.822 228.178 578.978 228.222 578.934 228.266z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 139.2 228.8L 138.4 230.4C 139.41 229.623 139.514 229.845 139.2 228.8z\" />\r\n            <path style=\"stroke:none; fill:#010101\"\r\n                d=\"M 121.6 251.2L 121.6 252.8C 131.386 252.799 139.234 250.583 141.349 239.864C 141.91 237.023 140.602 234.089 140.8 231.2C 143.968 232.137 147.11 232 150.4 232L 150.4 230.4C 147.787 230.391 141.622 228.338 139.694 230.126C 137.464 232.196 139.591 236.953 139.063 239.661C 137.302 248.689 130.035 251.13 121.6 251.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 158.4 228.8C 157.451 229.749 157.133 230.022 156 230.4L 156 231.2C 157.74 230.766 158.714 230.627 158.4 228.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 257.6 228.8L 258.4 229.6L 257.6 228.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 364 228.8L 364.8 229.6L 364 228.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 397.066 229.334C 397.022 229.378 396.978 230.222 397.334 229.866C 397.378 229.822 397.422 228.978 397.066 229.334z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 457.6 228.8L 458.4 229.6L 457.6 228.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 583.2 229.6L 583.2 230.4C 585.447 230.39 587.414 230.688 589.6 231.2C 587.51 229.087 586.082 229.003 583.2 229.6M 596 233.6L 601.6 229.6C 598.306 229.015 597.06 230.582 596 233.6z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 149.6 229.6L 149.6 230.4L 152 230.4C 151.002 229.852 150.762 229.801 149.6 229.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 363.466 230.134C 363.422 230.178 363.378 231.022 363.734 230.666C 363.778 230.622 363.822 229.778 363.466 230.134z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 456.534 229.866C 456.178 230.222 457.022 230.178 457.066 230.134C 457.422 229.778 456.578 229.822 456.534 229.866z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 575.2 229.6C 575.418 231.305 575.79 233.215 574.042 234.31C 571.98 235.601 568.744 235.092 566.4 236.225C 558.427 240.078 554.486 245.235 549.102 251.74C 547.367 253.836 543.833 257.968 541.6 255.2C 531.892 257.914 520.542 254.82 517.6 267.2L 513.6 266.4L 517.6 274.4C 520.309 272.337 521.344 270.604 521.6 267.2C 525.165 269.022 527.094 272.144 528 276C 531.637 276.162 530.794 278.102 529.6 280.8C 533.07 280.223 535.138 281.714 538.4 282.628C 541.663 283.542 545.034 283.634 548 285.474C 559.282 292.477 558.4 305.242 558.4 316.8C 563.305 316.803 567.549 316.562 568 322.4C 573.858 321.942 578.026 321.902 582.4 326.4C 584.957 322.817 584.914 317.67 588.884 314.997C 592.718 312.417 598.646 314.29 603.2 312C 602.221 306.573 597.861 302.93 596.8 297.6L 596 297.6C 589.984 303.716 590.53 289.11 591.454 285.601C 592.89 280.154 597.462 281.402 599.947 277.92C 601.552 275.672 599.913 271.43 600.38 268.803C 601.226 264.051 605.742 262.636 609.6 260.8L 609.6 260C 605.192 257.176 602.856 254.134 604 248.8C 595.424 246.675 607.074 239.46 602.703 235.85C 600.814 234.29 593.886 237.57 591.2 237.6C 589.802 232.784 579.958 231.174 575.2 229.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 582.4 230.4L 582.4 231.2L 588 231.2C 586.082 229.954 584.682 230.173 582.4 230.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 150.4 230.4C 151.381 232.028 151.762 232.261 153.6 232.8C 152.44 231.514 151.959 231.149 150.4 230.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 158.4 230.4L 159.2 231.2L 158.4 230.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 159.2 230.4L 160 231.2L 159.2 230.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 256.8 230.4L 257.6 231.2L 256.8 230.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 407.2 230.4L 407.2 231.2L 412.8 231.2C 410.934 230.412 409.234 230.415 407.2 230.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 412.8 230.4L 413.6 231.2L 412.8 230.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 500.8 230.4L 501.6 231.2L 500.8 230.4M 575.2 230.4L 575.2 232.8L 576 232.8C 575.799 231.638 575.748 231.398 575.2 230.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 599.2 230.4L 599.2 231.2L 601.6 231.2C 600.602 230.652 600.362 230.601 599.2 230.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 601.6 230.4C 602.664 231.802 603.398 232.536 604.8 233.6C 603.877 231.801 603.399 231.323 601.6 230.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 152.8 231.2L 153.6 232L 152.8 231.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 154.934 231.466C 154.578 231.822 155.422 231.778 155.466 231.734C 155.822 231.378 154.978 231.422 154.934 231.466M 256.266 231.734C 256.222 231.778 256.178 232.622 256.534 232.266C 256.578 232.222 256.622 231.378 256.266 231.734z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 399.2 231.2L 400 232L 399.2 231.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 413.6 231.2L 414.4 232L 413.6 231.2M 444 231.2L 444.8 232L 444 231.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 496 231.2L 496 232L 498.4 232.8C 497.616 231.374 497.674 231.525 496 231.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 566.4 231.2L 566.4 232L 568.8 232C 567.802 231.452 567.562 231.401 566.4 231.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 598.4 231.2L 599.2 232L 598.4 231.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 595.2 233.6L 595.2 234.4L 603.2 232.8C 600.365 230.749 598.104 232.142 595.2 233.6z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 101.6 232L 102.4 235.2L 103.2 235.2C 102.791 233.638 102.614 233.234 101.6 232z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 142.934 232.266C 142.578 232.622 143.422 232.578 143.466 232.534C 143.822 232.178 142.978 232.222 142.934 232.266z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 144 232L 144 232.8L 149.6 232.8C 147.734 232.012 146.034 232.015 144 232z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 149.6 232L 150.4 232.8L 149.6 232z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 150.4 232L 151.2 232.8L 150.4 232z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 191.466 232.534C 191.422 232.578 191.378 233.422 191.734 233.066C 191.778 233.022 191.822 232.178 191.466 232.534z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 252.8 232C 251.922 233.666 251.452 234.936 251.2 236.8L 252 236.8L 254.4 232L 252.8 232z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 362.4 232L 363.2 232.8L 362.4 232z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 400 232L 400.8 232.8L 400 232z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 400.8 232L 400.8 232.8L 404.8 232.8C 403.385 232.177 402.371 232.07 400.8 232z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 404.8 232L 405.6 232.8L 404.8 232z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 443.2 232L 444 232.8L 443.2 232z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 563.2 234.4C 564.759 233.651 565.24 233.286 566.4 232C 564.694 232.622 564.183 232.904 563.2 234.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 566.4 232L 566.4 232.8L 569.6 232.8C 568.395 232.254 567.748 232.139 566.4 232z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 580 232L 580.8 232.8L 580 232z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 100.266 233.334C 100.222 233.378 100.178 234.222 100.534 233.866C 100.578 233.822 100.622 232.978 100.266 233.334M 140.266 233.334C 140.222 233.378 140.178 234.222 140.534 233.866C 140.578 233.822 140.622 232.978 140.266 233.334z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 143.2 232.8L 143.2 233.6L 148 233.6C 146.358 232.901 145.002 232.838 143.2 232.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 251.734 233.066C 251.378 233.422 252.222 233.378 252.266 233.334C 252.622 232.978 251.778 233.022 251.734 233.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 400.8 232.8L 400.8 233.6L 404 233.6C 402.795 233.054 402.148 232.939 400.8 232.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 404.534 233.066C 404.178 233.422 405.022 233.378 405.066 233.334C 405.422 232.978 404.578 233.022 404.534 233.066z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 443.2 232.8L 442.4 234.4C 443.41 233.623 443.514 233.845 443.2 232.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 444 232.8L 443.2 234.4L 444.8 234.4C 444.8 232.918 445.04 233.32 444 232.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 499.466 233.334C 499.422 233.378 499.378 234.222 499.734 233.866C 499.778 233.822 499.822 232.978 499.466 233.334z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 564.8 233.6L 564.8 234.4L 568 233.6C 566.553 233.141 566.345 233.228 564.8 233.6M 572.8 232.8L 573.6 233.6L 572.8 232.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 575.2 232.8L 576 233.6L 575.2 232.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 581.6 232.8L 581.6 233.6L 586.4 233.6C 584.758 232.901 583.402 232.838 581.6 232.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 99.4664 234.134C 99.4224 234.178 99.3776 235.022 99.7336 234.666C 99.7776 234.622 99.8224 233.778 99.4664 234.134z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 189.6 233.6L 189.6 236L 190.4 236C 190.199 234.839 190.148 234.598 189.6 233.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 410.666 234.134C 410.622 234.178 410.578 235.022 410.934 234.666C 410.978 234.622 411.022 233.778 410.666 234.134z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 571.466 234.134C 571.422 234.178 571.378 235.022 571.734 234.666C 571.778 234.622 571.822 233.778 571.466 234.134z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 604.8 233.6L 605.6 234.4L 604.8 233.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 100.534 234.666C 100.178 235.022 101.022 234.978 101.066 234.934C 101.422 234.578 100.578 234.622 100.534 234.666z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 141.066 234.934C 141.022 234.978 140.978 235.822 141.334 235.466C 141.378 235.422 141.422 234.578 141.066 234.934z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 151.466 234.934C 151.422 234.978 151.378 235.822 151.734 235.466C 151.778 235.422 151.822 234.578 151.466 234.934z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 152.266 234.934C 152.222 234.978 152.178 235.822 152.534 235.466C 152.578 235.422 152.622 234.578 152.266 234.934z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 418.134 234.666C 417.778 235.022 418.622 234.978 418.666 234.934C 419.022 234.578 418.178 234.622 418.134 234.666z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 419.2 234.4L 419.2 235.2L 421.6 235.2C 420.602 234.652 420.362 234.601 419.2 234.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 560 236L 560 236.8C 561.717 236.397 563.183 235.905 564.8 235.2C 562.83 234.642 561.868 235.112 560 236z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 572 234.4L 572 235.2L 575.2 235.2C 573.995 234.654 573.348 234.539 572 234.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 605.6 234.4L 606.4 235.2L 605.6 234.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 100.266 235.734C 100.222 235.778 100.178 236.622 100.534 236.266C 100.578 236.222 100.622 235.378 100.266 235.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 100.8 235.2L 100.8 236.8L 102.4 236.8C 101.964 235.492 102.108 235.636 100.8 235.2z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 103.2 235.2C 103.175 238.188 102.774 241.044 102.4 244L 103.2 244C 103.913 241.007 104.41 238.086 103.2 235.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 152.8 235.2L 153.6 236L 152.8 235.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 155.2 235.2L 155.2 239.2L 156 239.2C 155.93 237.629 155.823 236.615 155.2 235.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 190.4 235.2L 191.2 236L 190.4 235.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 410.666 235.734C 410.622 235.778 410.578 236.622 410.934 236.266C 410.978 236.222 411.022 235.378 410.666 235.734z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 411.2 235.2L 412 236L 411.2 235.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 412 235.2L 412.8 236L 412 235.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 591.2 235.2L 592 236L 591.2 235.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 188.8 236L 189.6 236.8L 188.8 236z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 189.6 236L 189.6 238.4L 190.4 238.4C 190.199 237.238 190.148 236.998 189.6 236z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 411.2 236L 412 236.8L 411.2 236z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 591.466 236.534C 591.422 236.578 591.378 237.422 591.734 237.066C 591.778 237.022 591.822 236.178 591.466 236.534z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 592 236L 592 236.8C 593.626 237.058 594.386 237.072 596 236.8C 594.585 236.177 593.571 236.07 592 236z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 595.2 237.6C 596.874 237.275 596.816 237.426 597.6 236C 596.336 236.547 596.178 236.644 595.2 237.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 606.4 236L 605.6 240.8C 607.372 239.024 607.822 238.13 606.4 236z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 141.866 237.334C 141.822 237.378 141.778 238.222 142.134 237.866C 142.178 237.822 142.222 236.978 141.866 237.334M 154.4 236.8L 154.4 239.2L 155.2 239.2C 154.999 238.038 154.948 237.798 154.4 236.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 188.8 236.8L 188.8 240L 189.6 240C 189.461 238.652 189.346 238.005 188.8 236.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 362.4 236.8L 363.2 237.6L 362.4 236.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 558.4 237.6L 558.4 238.4L 561.6 237.6C 560.153 237.141 559.945 237.228 558.4 237.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 592.534 237.066C 592.178 237.422 593.022 237.378 593.066 237.334C 593.422 236.978 592.578 237.022 592.534 237.066z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 362.4 237.6L 363.2 238.4L 362.4 237.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 500.8 237.6L 500.8 240L 501.6 240C 501.399 238.838 501.348 238.598 500.8 237.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 141.866 238.934C 141.822 238.978 141.778 239.822 142.134 239.466C 142.178 239.422 142.222 238.578 141.866 238.934z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 153.6 238.4L 154.4 239.2L 153.6 238.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 254.666 238.934C 254.622 238.978 254.578 239.822 254.934 239.466C 254.978 239.422 255.022 238.578 254.666 238.934z\" />\r\n            <path style=\"stroke:none; fill:#68aac6\"\r\n                d=\"M 360 238.4L 360.8 239.2L 360 238.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 362.666 238.934C 362.622 238.978 362.578 239.822 362.934 239.466C 362.978 239.422 363.022 238.578 362.666 238.934z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 556.8 238.4L 556.8 240C 558.108 239.564 557.964 239.708 558.4 238.4L 556.8 238.4z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 139.2 239.2L 140 240L 139.2 239.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 149.334 239.466C 148.978 239.822 149.822 239.778 149.866 239.734C 150.222 239.378 149.378 239.422 149.334 239.466z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 188.266 239.734C 188.222 239.778 188.178 240.622 188.534 240.266C 188.578 240.222 188.622 239.378 188.266 239.734z\" />\r\n            <path style=\"stroke:none; fill:#92c2d5\"\r\n                d=\"M 359.466 239.734C 359.422 239.778 359.378 240.622 359.734 240.266C 359.778 240.222 359.822 239.378 359.466 239.734z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 360 239.2L 360.8 240L 360 239.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 603.2 239.2L 604 240L 603.2 239.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 87.2 243.2C 89.1 242.773 90.1 242.773 92 243.2C 90.42 240.422 88.78 240.422 87.2 243.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 141.866 240.534C 141.822 240.578 141.778 241.422 142.134 241.066C 142.178 241.022 142.222 240.178 141.866 240.534z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 142.4 240C 141.422 240.956 141.264 241.053 140 241.6L 140 242.4C 141.878 242.165 143.161 242.006 142.4 240z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 148 240L 148.8 240.8L 148 240z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 148.8 240L 148 244L 148.8 244L 150.4 240L 148.8 240M 152.8 240L 153.6 240.8L 152.8 240z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 187.2 240C 186.411 241.183 186.4 240.962 186.4 242.4C 187.431 241.246 187.521 241.413 187.2 240M 251.734 240.266C 251.378 240.622 252.222 240.578 252.266 240.534C 252.622 240.178 251.778 240.222 251.734 240.266z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 358.4 240L 358.4 242.4L 359.2 242.4C 358.999 241.238 358.948 240.998 358.4 240z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 420.534 240.266C 420.178 240.622 421.022 240.578 421.066 240.534C 421.422 240.178 420.578 240.222 420.534 240.266M 504.266 240.534C 504.222 240.578 504.178 241.422 504.534 241.066C 504.578 241.022 504.622 240.178 504.266 240.534M 555.2 240L 556 240.8L 555.2 240z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 602.666 240.534C 602.622 240.578 602.578 241.422 602.934 241.066C 602.978 241.022 603.022 240.178 602.666 240.534z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 148 240.8L 148.8 241.6L 148 240.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 188 240.8L 186.4 244C 187.985 243.072 188.592 242.361 189.6 240.8L 188 240.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 250.4 240.8L 251.2 241.6L 250.4 240.8M 359.2 240.8C 359.281 244.165 360.094 246.604 361.6 249.6L 362.4 249.6C 361.852 246.515 360.74 243.526 359.2 240.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 423.734 241.066C 423.378 241.422 424.222 241.378 424.266 241.334C 424.622 240.978 423.778 241.022 423.734 241.066z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 554.4 240.8L 555.2 241.6L 554.4 240.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 89.3336 241.866C 88.9776 242.222 89.8224 242.178 89.8664 242.134C 90.2224 241.778 89.3776 241.822 89.3336 241.866z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 147.2 241.6L 148 242.4L 147.2 241.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 181.6 241.6L 181.6 244L 182.4 244L 186.4 242.4L 186.4 241.6C 184.699 241.785 183.297 241.797 181.6 241.6M 249.6 241.6L 250.4 242.4L 249.6 241.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 505.066 242.134C 505.022 242.178 504.978 243.022 505.334 242.666C 505.378 242.622 505.422 241.778 505.066 242.134z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 552.8 241.6L 553.6 242.4L 552.8 241.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 553.6 241.6L 554.4 242.4L 553.6 241.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 601.6 241.6L 602.4 242.4L 601.6 241.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 602.4 241.6L 602.4 247.2L 603.2 247.2C 603.185 245.166 603.188 243.465 602.4 241.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 79.2 242.4L 79.2 243.2L 81.6 243.2C 80.6016 242.652 80.3616 242.601 79.2 242.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 60 252.8C 61.2226 242.149 46.6946 247.542 42.0796 251.219C 39.855 252.992 39.1808 258.268 37.6426 260.8C 34.8461 265.403 32.4351 270.175 39.2 272C 36.1472 275.053 31.8942 282.379 36 283.2C 34.6444 285.234 35.2566 285.214 33.6 284.8C 33.6275 294.379 46.333 298.374 55.2 298.4C 55.1124 300.354 54.8576 302.098 54.4 304C 57.1357 303.414 57.72 300.128 55.6 298C 51.6402 294.026 41.9568 294.601 37.6889 290.934C 35.2646 288.85 37.3912 286.509 37.4666 284C 37.6718 277.182 40.3104 272.832 48 272.8L 48 272C 45.2654 271.663 38.2762 271.699 37.0636 268.454C 36.2503 266.277 38.976 263.398 39.8895 261.6C 43.0733 255.334 45.1919 250.895 52.7969 248.822C 57.0161 247.672 58.9378 253.111 63.2 253.6C 65.0251 244.661 75.7126 247.993 82.4 247.032C 86.1664 246.49 88.8944 245.054 92.8 245.6C 92.0064 244.31 91.36 242.916 89.5848 242.893C 87.2264 242.862 85.5424 245.285 83.188 245.578C 77.5928 246.277 71.0448 243.47 65.6469 246.122C 62.5992 247.62 62.6808 251.071 60 252.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 100.8 242.4L 101.6 243.2L 100.8 242.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 147.2 242.4L 147.2 246.4L 148 246.4C 147.93 244.829 147.823 243.815 147.2 242.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 181.6 246.4L 182.4 246.4C 183.912 245.039 185.342 244.14 186.4 242.4C 183.754 243.128 182.608 243.824 181.6 246.4z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 186.4 242.4L 187.2 243.2L 186.4 242.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 505.6 242.4L 505.6 244.8L 506.4 244.8C 506.199 243.638 506.148 243.398 505.6 242.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 552.8 242.4L 553.6 243.2L 552.8 242.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 601.6 242.4L 602.4 243.2L 601.6 242.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 78.4 244L 78.4 244.8L 81.6 244C 80.1528 243.541 79.945 243.628 78.4 244z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 84 243.2L 84 244L 87.2 244C 85.9952 243.454 85.348 243.339 84 243.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 151.2 245.6C 152.986 245.31 154.214 245.31 156 245.6C 154.39 243.344 152.742 243.284 151.2 245.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 154.4 243.2L 154.4 244L 156.8 246.4L 157.6 246.4C 156.929 244.299 156.501 243.871 154.4 243.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 427.466 243.734C 427.422 243.778 427.378 244.622 427.734 244.266C 427.778 244.222 427.822 243.378 427.466 243.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 506.666 243.734C 506.622 243.778 506.578 244.622 506.934 244.266C 506.978 244.222 507.022 243.378 506.666 243.734z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 551.2 243.2L 552 244L 551.2 243.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 600.8 243.2L 601.6 244L 600.8 243.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 601.6 243.2C 601.662 245.316 601.598 246.613 603.2 248C 602.751 246.318 602.361 244.753 601.6 243.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 68 244L 68 244.8L 72.8 245.6C 71.4128 243.998 70.1161 244.062 68 244z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 80 244C 80.7216 245.538 80.8608 245.599 82.4 246.4C 81.6808 244.701 81.6992 244.719 80 244z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 81.6 244L 82.4 244.8L 81.6 244z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 84 244L 84 244.8L 87.2 244.8C 85.9952 244.254 85.348 244.139 84 244z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 92 244L 92.8 244.8L 92 244z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 99.2 244L 100 244.8L 99.2 244z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 88 244.8L 88 245.6C 93.6856 246.82 97.9616 249.082 102.4 244C 96.8296 245.379 93.7136 245.266 88 244.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 146.4 244L 145.6 248L 146.4 248C 146.749 246.359 146.898 245.554 146.4 244z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 181.334 244.266C 180.978 244.622 181.822 244.578 181.866 244.534C 182.222 244.178 181.378 244.222 181.334 244.266z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 186.134 244.266C 185.778 244.622 186.622 244.578 186.666 244.534C 187.022 244.178 186.178 244.222 186.134 244.266z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 550.4 244C 548.131 246.592 546.502 249.653 544 252L 544 252.8C 547.394 251.2 550.85 248.034 550.4 244z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 600 244L 600 248L 600.8 248C 600.73 246.429 600.623 245.415 600 244z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 600.8 244C 600.884 246.628 600.946 248.142 603.2 249.6L 600.8 244M 67.7334 245.066C 67.3778 245.422 68.2222 245.378 68.2666 245.334C 68.6222 244.978 67.7778 245.022 67.7334 245.066z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 73.6 244.8L 73.6 245.6L 76 245.6C 75.0013 245.052 74.7613 245.001 73.6 244.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 82.9336 245.066C 82.5776 245.422 83.4224 245.378 83.4664 245.334C 83.8224 244.978 82.9776 245.022 82.9336 245.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 84.5336 245.066C 84.1776 245.422 85.0224 245.378 85.0664 245.334C 85.4224 244.978 84.5776 245.022 84.5336 245.066M 92.8 244.8L 92.8 245.6L 95.2 245.6C 94.2016 245.052 93.9616 245.001 92.8 244.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 144.8 244.8L 144.8 248.8C 147.335 248.794 149.567 248.72 152 248L 152 247.2C 149.851 247.601 147.784 247.906 145.6 248L 146.4 244.8L 144.8 244.8M 182.934 245.066C 182.578 245.422 183.422 245.378 183.466 245.334C 183.822 244.978 182.978 245.022 182.934 245.066z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 427.466 245.334C 427.422 245.378 427.378 246.222 427.734 245.866C 427.778 245.822 427.822 244.978 427.466 245.334z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 429.866 245.334C 429.822 245.378 429.778 246.222 430.134 245.866C 430.178 245.822 430.222 244.978 429.866 245.334z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 506.666 245.334C 506.622 245.378 506.578 246.222 506.934 245.866C 506.978 245.822 507.022 244.978 506.666 245.334M 82.9336 245.866C 82.5776 246.222 83.4224 246.178 83.4664 246.134C 83.8224 245.778 82.9776 245.822 82.9336 245.866z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 64.8 248L 64.8 248.8C 72.1572 248.648 81.0824 248.921 88 246.4C 81.9944 244.729 71.296 247.487 64.8 248z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 94.4 245.6L 94.4 246.4L 96.8 246.4C 95.8016 245.852 95.5616 245.801 94.4 245.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 97.3336 245.866C 96.9776 246.222 97.8224 246.178 97.8664 246.134C 98.2224 245.778 97.3776 245.822 97.3336 245.866z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 156.266 246.134C 156.222 246.178 156.178 247.022 156.534 246.666C 156.578 246.622 156.622 245.778 156.266 246.134z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 250.4 245.6L 250.4 249.6L 251.2 249.6C 251.13 248.029 251.023 247.015 250.4 245.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 507.466 246.134C 507.422 246.178 507.378 247.022 507.734 246.666C 507.778 246.622 507.822 245.778 507.466 246.134z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 146.934 246.666C 146.578 247.022 147.422 246.978 147.466 246.934C 147.822 246.578 146.978 246.622 146.934 246.666z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 156.8 246.4L 156.8 248.8L 157.6 248.8C 157.399 247.638 157.348 247.398 156.8 246.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 157.6 246.4L 158.4 247.2L 157.6 246.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 429.6 246.4L 429.6 248.8L 430.4 248.8C 430.199 247.638 430.148 247.398 429.6 246.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 135.2 247.2L 136 248L 135.2 247.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 146.4 247.2L 146.4 248L 150.4 248C 148.985 247.377 147.971 247.27 146.4 247.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 157.6 247.2C 157.971 248.938 158.484 250.366 159.2 252L 160 252C 159.663 249.726 159.249 248.79 157.6 247.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 158.4 247.2L 159.2 248L 158.4 247.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 180 247.2L 180.8 248L 180 247.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 182.4 247.2L 183.2 248L 182.4 247.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 41.6 248L 41.6 248.8L 44.8 248.8C 43.5952 248.254 42.9482 248.139 41.6 248z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 41.6 257.6L 42.4 257.6C 44.7902 252.814 54.0538 246.64 57.6 252.8C 59.8372 244.389 42.6232 251.165 41.6 257.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 159.2 248L 160 248.8L 159.2 248M 180 248L 180.8 248.8L 180 248z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 504.8 248L 505.6 248.8L 504.8 248M 546.4 248C 545.611 249.183 545.6 248.962 545.6 250.4C 546.631 249.246 546.721 249.413 546.4 248z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 602.934 248.266C 602.578 248.622 603.422 248.578 603.466 248.534C 603.822 248.178 602.978 248.222 602.934 248.266z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 605.866 248.534C 605.822 248.578 605.778 249.422 606.134 249.066C 606.178 249.022 606.222 248.178 605.866 248.534M 41.6 248.8L 41.6 249.6C 43.0799 249.762 44.1201 249.762 45.6 249.6C 44.1848 248.977 43.1713 248.87 41.6 248.8z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 64 248.8L 63.2 253.6L 58.4 252.8L 58.4 253.6C 60.3345 254.178 61.9773 254.358 64 254.4C 64.2417 252.394 64.5926 250.714 64 248.8M 132.534 249.066C 132.178 249.422 133.022 249.378 133.066 249.334C 133.422 248.978 132.578 249.022 132.534 249.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 184 248.8L 184.8 249.6L 184 248.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 429.6 248.8L 429.6 251.2L 430.4 251.2C 430.199 250.038 430.148 249.798 429.6 248.8M 40.8 251.2L 43.2 250.4C 41.7774 249.636 41.5829 249.787 40.8 251.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 44 249.6L 44 250.4L 47.2 250.4C 45.9951 249.854 45.3482 249.739 44 249.6z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 116.8 252.8C 120.667 251.304 123.897 251.178 128 251.2C 124.267 249.525 119.321 249.121 116.8 252.8M 130.134 249.866C 129.778 250.222 130.622 250.178 130.666 250.134C 131.022 249.778 130.178 249.822 130.134 249.866z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 184.8 249.6L 185.6 250.4L 184.8 249.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 250.4 249.6L 251.2 250.4L 250.4 249.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 362.4 249.6L 363.2 250.4L 362.4 249.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 504 249.6L 504 253.6L 504.8 253.6C 504.73 252.029 504.623 251.015 504 249.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 507.2 249.6L 508 250.4L 507.2 249.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 508 249.6C 509.413 251.989 510.983 254.215 512 256.8L 512.8 256.8C 512.161 253.498 510.985 251.238 508 249.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 603.2 249.6L 604 250.4L 603.2 249.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 59.4666 250.934C 59.4222 250.978 59.3778 251.822 59.7334 251.466C 59.7777 251.422 59.8223 250.578 59.4666 250.934z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 119.2 251.2L 119.2 252L 122.4 251.2C 121.073 250.875 120.606 250.953 119.2 251.2M 506.4 250.4L 507.2 251.2L 506.4 250.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 545.066 250.934C 545.022 250.978 544.978 251.822 545.334 251.466C 545.378 251.422 545.422 250.578 545.066 250.934z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 547.2 250.4L 548 251.2L 547.2 250.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 603.2 250.4L 603.2 252.8L 604 252.8C 603.799 251.638 603.748 251.398 603.2 250.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 40 251.2L 40 256L 40.8 256C 40.7622 254.198 40.6994 252.842 40 251.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 187.2 251.2L 188 252L 187.2 251.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 363.2 251.2L 364 252L 363.2 251.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 436 251.2L 436.8 252L 436 251.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 546.4 251.2L 547.2 252L 546.4 251.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 39.2 252L 39.2 254.4L 40 254.4C 39.799 253.238 39.7478 252.998 39.2 252z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 60 252L 60.8 252.8L 60 252z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 61.6 252L 62.4 252.8L 61.6 252z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 117.6 252C 117.694 254.184 117.999 256.251 118.4 258.4L 119.2 258.4L 119.2 252L 117.6 252z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 188.534 252.266C 188.178 252.622 189.022 252.578 189.066 252.534C 189.422 252.178 188.578 252.222 188.534 252.266z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 248.8 252L 248.8 254.4L 249.6 254.4C 249.399 253.238 249.348 252.998 248.8 252z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 428 252L 428 254.4L 428.8 254.4C 428.599 253.238 428.548 252.998 428 252z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 431.734 252.266C 431.378 252.622 432.222 252.578 432.266 252.534C 432.622 252.178 431.778 252.222 431.734 252.266z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 509.6 252L 508.8 254.4C 510.213 253.617 510.364 253.422 509.6 252M 157.866 253.334C 157.822 253.378 157.778 254.222 158.134 253.866C 158.178 253.822 158.222 252.978 157.866 253.334z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 185.6 252.8L 186.4 253.6L 185.6 252.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 188.8 252.8L 189.6 253.6L 188.8 252.8z\" />\r\n            <path style=\"stroke:none; fill:#68aac6\"\r\n                d=\"M 360 252.8L 360 254.4C 361.308 253.964 361.164 254.108 361.6 252.8L 360 252.8z\" />\r\n            <path style=\"stroke:none; fill:#92c2d5\"\r\n                d=\"M 367.2 252.8L 367.2 255.2L 368 255.2C 367.799 254.038 367.748 253.798 367.2 252.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 539.734 253.066C 539.378 253.422 540.222 253.378 540.266 253.334C 540.622 252.978 539.778 253.022 539.734 253.066M 541.6 252.8L 541.6 253.6L 544 253.6C 543.002 253.052 542.762 253.001 541.6 252.8M 603.2 252.8L 604 256L 604.8 256C 604.349 254.598 604.065 253.966 603.2 252.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 156.8 253.6L 156.8 257.6L 157.6 257.6C 157.53 256.029 157.423 255.015 156.8 253.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 186.4 253.6L 187.2 254.4L 186.4 253.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 190.4 253.6L 191.2 254.4L 190.4 253.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 248 253.6L 248.8 254.4L 248 253.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 428.8 253.6L 429.6 254.4L 428.8 253.6M 604 253.6L 604.8 254.4L 604 253.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 157.6 254.4C 157.846 256.098 157.906 256.549 159.2 257.6C 158.791 256.038 158.614 255.634 157.6 254.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 191.466 254.934C 191.422 254.978 191.378 255.822 191.734 255.466C 191.778 255.422 191.822 254.578 191.466 254.934M 248.266 254.934C 248.222 254.978 248.178 255.822 248.534 255.466C 248.578 255.422 248.622 254.578 248.266 254.934z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 363.2 254.4L 363.2 255.2L 367.2 256C 365.968 254.558 365.122 254.534 363.2 254.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 429.6 254.4L 430.4 255.2L 429.6 254.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 430.4 254.4L 431.2 255.2L 430.4 254.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 432 254.4L 432 256.8L 432.8 256.8C 432.599 255.638 432.548 255.398 432 254.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 506.134 254.666C 505.778 255.022 506.622 254.978 506.666 254.934C 507.022 254.578 506.178 254.622 506.134 254.666z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 508.8 254.4C 509.519 256.099 509.501 256.081 511.2 256.8C 510.814 254.909 510.691 254.786 508.8 254.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 511.2 254.4L 511.2 256.8L 512 256.8C 511.799 255.638 511.748 255.398 511.2 254.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 528 254.4L 528.8 255.2L 528 254.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 604.8 254.4C 605.679 256.784 606.666 257.822 608.8 259.2C 607.636 257.211 606.574 255.862 604.8 254.4M 362.4 255.2L 363.2 256L 362.4 255.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 363.2 255.2L 363.2 256L 365.6 256C 364.602 255.452 364.362 255.401 363.2 255.2z\" />\r\n            <path style=\"stroke:none; fill:#68aac6\"\r\n                d=\"M 367.2 255.2L 366.4 256.8C 367.41 256.023 367.514 256.245 367.2 255.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 524 255.2L 524 256L 526.4 256C 525.402 255.452 525.162 255.401 524 255.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 535.2 255.2L 535.2 256L 540.8 256C 538.934 255.212 537.234 255.215 535.2 255.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 541.6 255.2L 541.6 256.8C 543.102 256.659 544.159 256.45 545.6 256C 544.185 255.377 543.171 255.27 541.6 255.2z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 117.6 256C 115.812 259.14 112.944 259.83 109.6 260.8L 109.6 261.6C 112.863 260.967 116.085 260.369 119.2 259.2C 118.723 257.952 118.329 257.102 117.6 256z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 192.266 256.534C 192.222 256.578 192.178 257.422 192.534 257.066C 192.578 257.022 192.622 256.178 192.266 256.534M 247.466 256.534C 247.422 256.578 247.378 257.422 247.734 257.066C 247.778 257.022 247.822 256.178 247.466 256.534z\" />\r\n            <path style=\"stroke:none; fill:#92c2d5\"\r\n                d=\"M 367.2 256L 368 256.8L 367.2 256z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 522.134 256.266C 521.778 256.622 522.622 256.578 522.666 256.534C 523.022 256.178 522.178 256.222 522.134 256.266z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 523.2 256L 524 256.8L 523.2 256z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 529.6 256L 529.6 256.8L 532 256.8C 531.002 256.252 530.761 256.201 529.6 256z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 534.934 256.266C 534.578 256.622 535.422 256.578 535.466 256.534C 535.822 256.178 534.978 256.222 534.934 256.266M 537.334 256.266C 536.978 256.622 537.822 256.578 537.866 256.534C 538.222 256.178 537.378 256.222 537.334 256.266z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 605.066 256.534C 605.022 256.578 604.978 257.422 605.334 257.066C 605.378 257.022 605.422 256.178 605.066 256.534M 119.2 256.8L 118.4 260.8L 119.2 260.8C 119.674 259.076 119.819 258.435 119.2 256.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 360 256.8L 360 259.2L 360.8 259.2C 360.599 258.038 360.548 257.798 360 256.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 366.666 257.334C 366.622 257.378 366.578 258.222 366.934 257.866C 366.978 257.822 367.022 256.978 366.666 257.334z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 520 256.8L 520.8 257.6L 520 256.8M 541.6 256.8L 541.6 257.6L 544 257.6C 543.002 257.052 542.762 257.001 541.6 256.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 610.4 256.8L 611.2 257.6L 610.4 256.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 157.066 258.134C 157.022 258.178 156.978 259.022 157.334 258.666C 157.378 258.622 157.422 257.778 157.066 258.134z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 157.6 257.6C 157.741 259.102 157.95 260.159 158.4 261.6L 159.2 261.6C 158.816 260.032 158.45 258.954 157.6 257.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 158.4 257.6L 158.4 260L 159.2 260C 158.999 258.838 158.948 258.598 158.4 257.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 192 257.6L 192 260.8L 192.8 260.8C 192.661 259.452 192.546 258.805 192 257.6M 241.6 257.6L 242.4 258.4L 241.6 257.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 246.4 257.6L 245.6 260C 247.013 259.217 247.164 259.022 246.4 257.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 507.2 257.6L 507.2 260.8L 508 260.8C 507.861 259.452 507.746 258.805 507.2 257.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 606.4 257.6L 607.2 258.4L 606.4 257.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 611.2 257.6L 612 258.4L 611.2 257.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 244.8 258.4L 244.8 260C 246.108 259.564 245.964 259.708 246.4 258.4L 244.8 258.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 516 258.4L 516 262.4L 516.8 262.4C 516.73 260.829 516.623 259.815 516 258.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 516.8 258.4L 516.8 260.8L 517.6 260.8C 517.399 259.638 517.348 259.399 516.8 258.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 607.2 258.4L 608 259.2L 607.2 258.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 360.8 259.2C 361.347 260.464 361.444 260.622 362.4 261.6C 361.853 260.336 361.756 260.178 360.8 259.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 508 259.2L 508.8 262.4L 509.6 262.4C 509.149 260.998 508.865 260.366 508 259.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 519.734 259.466C 519.378 259.822 520.222 259.778 520.266 259.734C 520.622 259.378 519.778 259.422 519.734 259.466z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 608 259.2L 608.8 260L 608 259.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 608.8 259.2L 609.6 260L 608.8 259.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 612 259.2L 612 260L 614.4 260.8C 613.616 259.374 613.674 259.525 612 259.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 108 264C 110.976 263.032 114.808 262.475 116.8 260C 113.366 260.666 109.926 260.85 108 264M 243.2 260L 243.2 263.2L 244 263.2C 243.861 261.852 243.746 261.205 243.2 260M 612 260L 612 263.2L 613.6 263.2L 613.6 260L 612 260z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 162.4 260.8L 163.2 261.6L 162.4 260.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 192 260.8L 192.8 261.6L 192 260.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 362.4 260.8C 362.947 262.064 363.044 262.222 364 263.2C 363.447 262.09 363.212 261.711 362.4 260.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 433.6 260.8L 433.6 264L 434.4 264C 434.261 262.652 434.146 262.005 433.6 260.8M 511.2 260.8L 512 261.6L 511.2 260.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 613.6 260.8C 613.053 262.064 612.956 262.222 612 263.2L 612 264C 614.119 263.546 614.684 262.73 613.6 260.8z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 101.6 261.6L 103.2 264.8L 104 264.8C 103.461 262.962 103.228 262.581 101.6 261.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 113.6 261.6L 113.6 262.4L 116 262.4C 115.002 261.852 114.762 261.801 113.6 261.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 158.934 261.866C 158.578 262.222 159.422 262.178 159.466 262.134C 159.822 261.778 158.978 261.822 158.934 261.866M 192 261.6L 192.8 262.4L 192 261.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 363.2 261.6L 364 262.4L 363.2 261.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 512.534 261.866C 512.178 262.222 513.022 262.178 513.066 262.134C 513.422 261.778 512.578 261.822 512.534 261.866z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 518.666 262.134C 518.622 262.178 518.578 263.022 518.934 262.666C 518.978 262.622 519.022 261.778 518.666 262.134z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 100 262.4C 96.9504 266.17 88.5816 270.691 95.2 275.2L 93.6 269.6C 96.796 268.119 99.2672 265.622 102.4 264C 103.886 266.058 104.748 266.182 107.2 265.6C 104.892 264.36 102.524 263.081 100 262.4z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 107.2 262.4C 106.251 263.349 105.978 263.667 105.6 264.8C 107.401 264.422 108.094 264.112 107.2 262.4z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 102.4 264C 98.96 265.192 96.7616 267.896 93.6 269.6C 94.4016 274.026 101.287 278.38 100.23 282.403C 98.864 287.606 89.1248 292.414 84.364 289.118C 79.9711 286.075 78.3118 280.801 76.8 276C 67.7945 277.758 65.4217 270.002 57.6 269.218C 52.0329 268.66 44.9244 274.122 39.2 275.2C 38.0165 280.378 36.084 285.874 36.8 291.2C 44.5952 290.357 56.7718 295.998 56.8 304C 59.3996 303.583 62.3103 300.419 64.8118 301.076C 73.0416 303.238 78.6178 316.444 83.676 322.296C 89.9952 329.606 96.5144 329.138 103.793 333.708C 108.957 336.95 114.47 342.723 120.8 343.2C 121.317 346.399 122.626 347.61 125.6 348.8C 130.63 340.013 142.728 338.934 147.134 329.464C 149.261 324.894 143.57 320.932 146.4 315.2C 139.722 314.135 142.618 308.774 143.2 304C 149.58 305.85 150.421 308.276 157.6 305.6C 155.33 298.522 143.13 295.166 136.801 293.154C 132.766 291.872 132.002 287.589 128.581 286.086C 125.861 284.89 122.814 286.746 120.034 285.682C 109.64 281.701 113.584 269.574 116 262.4C 111.154 262.504 106.138 267.382 102.4 264z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 160 262.4L 160.8 263.2L 160 262.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 160.8 262.4L 161.6 263.2L 160.8 262.4M 190.4 262.4L 190.4 264.8C 191.356 263.822 191.453 263.664 192 262.4L 190.4 262.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 366.4 262.4C 366.836 263.708 366.692 263.564 368 264L 368 262.4L 366.4 262.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 512 262.4L 512.8 263.2L 512 262.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 516.266 262.934C 516.222 262.978 516.178 263.822 516.534 263.466C 516.578 263.422 516.622 262.578 516.266 262.934z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 600.8 267.2L 601.6 267.2C 603.094 265.573 604.555 264.419 606.4 263.2C 603.383 262.703 601.818 264.515 600.8 267.2z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 97.6 264.8C 98.864 264.253 99.0216 264.156 100 263.2C 98.736 263.747 98.5784 263.844 97.6 264.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 163.2 263.2L 164 264L 163.2 263.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 168.8 263.2L 169.6 264L 168.8 263.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 242.4 263.2L 242.4 264.8C 243.708 264.364 243.564 264.508 244 263.2L 242.4 263.2z\" />\r\n            <path style=\"stroke:none; fill:#92c2d5\"\r\n                d=\"M 364 263.2L 364.8 264L 364 263.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 513.6 263.2L 514.4 264L 513.6 263.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 115.466 264.534C 115.422 264.578 115.378 265.422 115.734 265.066C 115.778 265.022 115.822 264.178 115.466 264.534z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 163.734 264.266C 163.378 264.622 164.222 264.578 164.266 264.534C 164.622 264.178 163.778 264.222 163.734 264.266z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 164.8 264L 164.8 264.8L 168 265.6L 168 264.8L 164.8 264z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 169.6 264L 170.4 264.8L 169.6 264z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 187.2 264L 188 264.8L 187.2 264z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 243.466 264.534C 243.422 264.578 243.378 265.422 243.734 265.066C 243.778 265.022 243.822 264.178 243.466 264.534z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 364.8 264L 365.6 264.8L 364.8 264z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 93.6 268C 95.4856 267.117 96.3008 266.435 97.6 264.8C 95.7144 265.683 94.8992 266.365 93.6 268z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 107.2 264.8L 108 265.6L 107.2 264.8M 163.734 265.066C 163.378 265.422 164.222 265.378 164.266 265.334C 164.622 264.978 163.778 265.022 163.734 265.066z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 164 266.4C 165.674 266.075 165.616 266.226 166.4 264.8C 165.136 265.347 164.978 265.444 164 266.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 166.4 264.8C 165.166 265.814 164.762 265.991 163.2 266.4L 163.2 267.2C 165.16 267.104 167.276 267.124 166.4 264.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 170.4 264.8L 171.2 265.6L 170.4 264.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 186.4 264.8L 184.8 268.8L 185.6 268.8C 186.374 267.17 186.728 266.512 186.4 264.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 189.6 264.8L 190.4 265.6L 189.6 264.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 241.6 264.8C 241.164 266.108 241.308 265.964 240 266.4L 240 267.2C 241.838 266.661 242.219 266.428 243.2 264.8L 241.6 264.8M 517.6 264.8L 518.4 265.6L 517.6 264.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 600.8 264.8L 601.6 265.6L 600.8 264.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 602.666 265.334C 602.622 265.378 602.578 266.222 602.934 265.866C 602.978 265.822 603.022 264.978 602.666 265.334z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 106.4 265.6L 107.2 266.4L 106.4 265.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 113.6 265.6L 112.8 270.4C 114.449 268.81 114.863 267.874 115.2 265.6L 113.6 265.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 168 265.6L 168.8 266.4L 168 265.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 185.6 265.6L 186.4 266.4L 185.6 265.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 607.2 265.6C 607.525 267.274 607.374 267.216 608.8 268C 608.247 266.889 608.013 266.511 607.2 265.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 608.266 266.134C 608.222 266.178 608.178 267.022 608.534 266.666C 608.578 266.622 608.622 265.778 608.266 266.134z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 608.8 265.6C 608.253 266.864 608.156 267.022 607.2 268L 607.2 268.8C 609.319 268.346 609.884 267.53 608.8 265.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 168.8 266.4L 169.6 267.2L 168.8 266.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 184.8 266.4L 185.6 267.2L 184.8 266.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 189.066 266.934C 189.022 266.978 188.978 267.822 189.334 267.466C 189.378 267.422 189.422 266.578 189.066 266.934z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 433.866 266.934C 433.822 266.978 433.778 267.822 434.134 267.466C 434.178 267.422 434.222 266.578 433.866 266.934z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 515.2 266.4L 515.2 267.2L 517.6 267.2C 516.602 266.652 516.362 266.601 515.2 266.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 601.6 266.4L 600.8 269.6C 602.125 268.477 602.201 268.037 601.6 266.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 606.4 266.4L 607.2 267.2L 606.4 266.4z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 46.4 271.2L 46.4 272C 50.4429 271.402 53.9765 269.846 57.6 268C 53.9128 267.238 49.8897 270.012 46.4 271.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 96.8 267.2L 97.6 268L 96.8 267.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 169.6 267.2L 170.4 268L 169.6 267.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 184.8 267.2L 185.6 268L 184.8 267.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 237.6 268L 237.6 268.8L 240.8 268C 239.353 267.541 239.145 267.628 237.6 268z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 521.6 267.2L 521.6 268.8C 522.908 268.364 522.764 268.508 523.2 267.2L 521.6 267.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 523.2 267.2L 524 268L 523.2 267.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 604 271.2L 604.8 271.2L 607.2 267.2C 604.829 267.974 604.398 268.747 604 271.2z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 36 268L 36 269.6L 37.6 269.6C 37.164 268.292 37.3081 268.436 36 268z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 56.8 268L 56.8 268.8L 60 269.6C 58.7655 268.586 58.3618 268.409 56.8 268z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 59.2 268L 59.2 268.8C 62.4249 270.428 66.1751 273.308 69.6315 274.15C 72.1105 274.753 75.1119 273.809 77.1889 275.682C 81.8104 279.852 77.5567 286.24 85.6 288.354C 95.8328 291.043 105.322 280.502 93.6 274.4C 94.6152 276.584 97.5248 279.172 97.568 281.599C 97.6784 287.836 88.7184 288.766 84.804 286.393C 79.6878 283.291 81.888 278.497 78.5136 274.994C 76.4721 272.874 72.969 274.01 70.4315 273.132C 66.4532 271.755 63.4852 269.015 59.2 268M 92 268L 92 269.6C 93.308 269.164 93.164 269.308 93.6 268L 92 268z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 96 268L 96.8 268.8L 96 268z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 170.4 268L 171.2 271.2L 172 271.2C 171.591 269.638 171.414 269.234 170.4 268z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 600 268L 600 271.2L 600.8 271.2C 600.661 269.852 600.546 269.205 600 268z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 229.6 268.8L 230.4 269.6L 229.6 268.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 236.534 269.066C 236.178 269.422 237.022 269.378 237.066 269.334C 237.422 268.978 236.578 269.022 236.534 269.066z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 599.466 269.334C 599.422 269.378 599.378 270.222 599.734 269.866C 599.778 269.822 599.822 268.978 599.466 269.334z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 37.6 269.6L 37.6 270.4L 41.6 270.4C 40.1847 269.777 39.1713 269.67 37.6 269.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 61.3334 269.866C 60.9778 270.222 61.8222 270.178 61.8666 270.134C 62.2222 269.778 61.3778 269.822 61.3334 269.866M 229.066 270.134C 229.022 270.178 228.978 271.022 229.334 270.666C 229.378 270.622 229.422 269.778 229.066 270.134z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 233.6 269.6L 233.6 270.4L 236 270.4C 235.002 269.852 234.762 269.801 233.6 269.6M 524.8 269.6L 525.6 270.4L 524.8 269.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 600.8 269.6L 600.8 273.6L 601.6 273.6C 602.05 272.159 602.259 271.102 602.4 269.6L 600.8 269.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 51.7334 270.666C 51.3778 271.022 52.2222 270.978 52.2666 270.934C 52.6223 270.578 51.7778 270.622 51.7334 270.666z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 170.4 270.4L 171.2 271.2L 170.4 270.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 525.6 270.4L 526.4 271.2L 525.6 270.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 36.8 271.2L 37.6 272L 36.8 271.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 48.8 271.2L 48.8 272L 51.2 272C 50.2014 271.452 49.9612 271.401 48.8 271.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 64 271.2C 64.7512 273.31 65.2638 274.094 67.2 275.2C 66.2695 273.426 65.531 272.485 64 271.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 64.8 271.2C 65.2361 272.508 65.0918 272.364 66.4 272.8L 66.4 271.2L 64.8 271.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 171.466 271.734C 171.422 271.778 171.378 272.622 171.734 272.266C 171.778 272.222 171.822 271.378 171.466 271.734z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 172.266 271.734C 172.222 271.778 172.178 272.622 172.534 272.266C 172.578 272.222 172.622 271.378 172.266 271.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 185.866 271.734C 185.822 271.778 185.778 272.622 186.134 272.266C 186.178 272.222 186.222 271.378 185.866 271.734z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 231.2 271.2L 232 272L 231.2 271.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 36.8 273.6L 39.2 272.8C 37.7774 272.036 37.5829 272.187 36.8 273.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 48.5334 272.266C 48.1778 272.622 49.0222 272.578 49.0666 272.534C 49.4222 272.178 48.5778 272.222 48.5334 272.266z\" />\r\n            <path style=\"stroke:none; fill:#6a3434\"\r\n                d=\"M 92.2664 272.534C 92.2224 272.578 92.1776 273.422 92.5336 273.066C 92.5776 273.022 92.6224 272.178 92.2664 272.534z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 182.4 272L 183.2 272.8L 182.4 272z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 232 272L 232.8 272.8L 232 272z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 523.2 272L 524 272.8L 523.2 272z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 600 272L 600.8 276L 601.6 276C 601.291 274.286 601.004 273.401 600 272z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 37.6 272.8L 38.4 273.6L 37.6 272.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 42.4 272.8L 42.4 273.6L 44.8 273.6C 43.8014 273.052 43.5612 273.001 42.4 272.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 45.6 272.8L 46.4 273.6L 45.6 272.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 66.4 272.8C 68.5487 276.115 74.6499 276.026 78.4 276.8C 76.1128 273.272 70.1954 274.408 66.4 272.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 172.266 273.334C 172.222 273.378 172.178 274.222 172.534 273.866C 172.578 273.822 172.622 272.978 172.266 273.334M 174.934 273.066C 174.578 273.422 175.422 273.378 175.466 273.334C 175.822 272.978 174.978 273.022 174.934 273.066z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 177.6 275.2L 182.4 273.6C 180.149 272.87 179.214 273.541 177.6 275.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 232.8 272.8L 233.6 273.6L 232.8 272.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 434.666 273.334C 434.622 273.378 434.578 274.222 434.934 273.866C 434.978 273.822 435.022 272.978 434.666 273.334M 510.4 272.8L 510.4 273.6L 512.8 273.6C 511.802 273.052 511.562 273.001 510.4 272.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 514.4 272.8C 514.646 274.498 514.706 274.949 516 276C 515.523 274.752 515.129 273.902 514.4 272.8z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 520.8 278.4C 516.376 277.684 507.411 272.616 503.698 277.082C 500.402 281.046 505.525 285.702 499.185 288.865C 495.17 290.868 487.678 293.326 483.2 292.614C 479.358 292.003 476.263 288.245 472.136 289.082C 466.802 290.166 464.449 296.815 459.199 298.321C 455.731 299.316 452.136 296.714 448.8 296C 449.164 300.146 450.291 310.122 453.28 313.12C 459.376 319.237 473.687 323.118 471.2 333.6C 473.622 337.31 465.276 344.91 463.2 348.8C 465.906 350.321 467.516 353.19 470.472 354.404C 473.539 355.665 476.734 354.401 479.771 355.303C 483.118 356.297 487.405 359.669 490.314 361.656C 492.806 363.358 493.042 366.184 495.074 368.114C 497.2 370.132 500.685 369.279 503.197 370.542C 506.94 372.424 508.994 376.601 512.803 378.386C 517.356 380.521 523.225 377.563 524 372.8C 530.901 372.418 532.455 364.428 540.8 364L 542.4 352.8C 538.795 350.252 536.341 347.724 536 343.2C 541.683 343.696 550.832 350.102 555.864 348.947C 567.811 346.205 570.902 334.439 582.4 331.2C 579.887 323.028 571.386 324.518 564.8 324.8C 565.171 323.062 565.684 321.634 566.4 320C 562.862 318.954 559.574 319.149 556 320C 553.654 310.143 557.64 298.627 550.409 290.095C 545.675 284.51 536.767 287.513 533.6 282.4C 525.682 283.329 525.21 279.816 524.8 272.8C 521.694 273.678 521.02 275.278 520.8 278.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 601.6 272.8L 601.6 276L 602.4 276C 602.261 274.652 602.146 274.005 601.6 272.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 36.8 273.6L 37.6 274.4L 36.8 273.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 42.9334 273.866C 42.5778 274.222 43.4222 274.178 43.4666 274.134C 43.8222 273.778 42.9778 273.822 42.9334 273.866z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 175.2 273.6L 175.2 274.4L 177.6 274.4C 176.602 273.852 176.362 273.801 175.2 273.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 177.6 273.6L 178.4 274.4L 177.6 273.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 233.6 273.6L 234.4 274.4L 233.6 273.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 503.2 273.6L 504 274.4L 503.2 273.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 521.6 273.6L 522.4 274.4L 521.6 273.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 524.8 273.6L 524.8 276.8L 525.6 276.8C 525.461 275.452 525.346 274.805 524.8 273.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 600.266 274.134C 600.222 274.178 600.178 275.022 600.534 274.666C 600.578 274.622 600.622 273.778 600.266 274.134z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 604 273.6L 604 276L 604.8 276C 604.599 274.838 604.548 274.598 604 273.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 36.2666 274.934C 36.2222 274.978 36.1778 275.822 36.5334 275.466C 36.5778 275.422 36.6222 274.578 36.2666 274.934z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 41.3334 274.666C 40.9778 275.022 41.8222 274.978 41.8666 274.934C 42.2222 274.578 41.3778 274.622 41.3334 274.666M 172.8 274.4L 173.6 275.2L 172.8 274.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 176.534 274.666C 176.178 275.022 177.022 274.978 177.066 274.934C 177.422 274.578 176.578 274.622 176.534 274.666z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 184 274.4L 184.8 275.2L 184 274.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 501.6 274.4L 502.4 275.2L 501.6 274.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 525.6 274.4L 525.6 276.8L 526.4 276.8C 526.199 275.638 526.148 275.398 525.6 274.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 67.2 275.2L 67.2 276L 70.4 276C 69.1951 275.454 68.5482 275.339 67.2 275.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 70.4 275.2L 71.2 276L 70.4 275.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 71.2 275.2L 71.2 276L 73.6 276C 72.6013 275.452 72.3613 275.401 71.2 275.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 114.666 275.734C 114.622 275.778 114.578 276.622 114.934 276.266C 114.978 276.222 115.022 275.378 114.666 275.734z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 235.2 275.2L 236 276L 235.2 275.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 369.866 275.734C 369.822 275.778 369.778 276.622 370.134 276.266C 370.178 276.222 370.222 275.378 369.866 275.734M 506.4 275.2L 506.4 276L 508.8 276C 507.802 275.452 507.562 275.401 506.4 275.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 512.534 275.466C 512.178 275.822 513.022 275.778 513.066 275.734C 513.422 275.378 512.578 275.422 512.534 275.466z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 513.6 275.2L 513.6 276L 516.8 276.8L 516.8 276L 513.6 275.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 520 275.2C 519.234 276.414 518.89 277.07 518.4 278.4L 520.8 278.4C 520.661 277.052 520.546 276.405 520 275.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 528.8 275.2L 528.8 276L 531.2 276.8C 530.416 275.374 530.474 275.525 528.8 275.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 35.2 276L 36 276.8L 35.2 276M 38.6666 276.534C 38.6222 276.578 38.5778 277.422 38.9334 277.066C 38.9778 277.022 39.0222 276.178 38.6666 276.534z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 72.5334 276.266C 72.1778 276.622 73.0222 276.578 73.0666 276.534C 73.4222 276.178 72.5778 276.222 72.5334 276.266z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 73.6 276L 73.6 276.8L 76 276.8C 75.0013 276.252 74.7613 276.201 73.6 276z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 236 276L 236.8 276.8L 236 276z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 513.334 276.266C 512.978 276.622 513.822 276.578 513.866 276.534C 514.222 276.178 513.378 276.222 513.334 276.266z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 531.2 276L 531.2 278.4L 532 278.4C 531.799 277.238 531.748 276.998 531.2 276z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 605.066 276.534C 605.022 276.578 604.978 277.422 605.334 277.066C 605.378 277.022 605.422 276.178 605.066 276.534z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 37.8666 277.334C 37.8222 277.378 37.7778 278.222 38.1334 277.866C 38.1778 277.822 38.2222 276.978 37.8666 277.334z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 77.0666 277.334C 77.0222 277.378 76.9778 278.222 77.3334 277.866C 77.3778 277.822 77.4222 276.978 77.0666 277.334z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 77.6 276.8L 77.6 279.2L 78.4 279.2C 78.199 278.038 78.1478 277.798 77.6 276.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 115.2 276.8L 116 277.6L 115.2 276.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 176 276.8L 176 277.6L 178.4 277.6C 177.402 277.052 177.162 277.001 176 276.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 237.334 277.066C 236.978 277.422 237.822 277.378 237.866 277.334C 238.222 276.978 237.378 277.022 237.334 277.066z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 500 276.8L 500 280.8L 500.8 280.8C 500.73 279.229 500.623 278.215 500 276.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 514.4 276.8L 514.4 277.6L 518.4 278.4L 518.4 277.6L 514.4 276.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 517.334 277.066C 516.978 277.422 517.822 277.378 517.866 277.334C 518.222 276.978 517.378 277.022 517.334 277.066z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 530.4 276.8L 530.4 279.2L 531.2 279.2C 530.999 278.038 530.948 277.798 530.4 276.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 78.4 277.6L 78.4 283.2L 79.2 283.2C 79.185 281.166 79.1876 279.466 78.4 277.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 98.4 277.6C 98.836 278.908 98.692 278.764 100 279.2L 100 277.6L 98.4 277.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 431.2 278.4C 433.507 283.344 432.318 290.841 435.671 294.981C 438.757 298.791 445.338 298.327 447.857 302.571C 449.961 306.116 448.146 310.725 451.055 314.146C 452.585 315.945 454.814 315.713 456.714 316.818C 459.45 318.411 469.532 328.985 469.331 332.004C 468.17 349.397 442.618 354.349 442.4 372.8L 440.8 372.8L 440 367.2C 435.094 368.676 436.658 372.228 434.26 375.746C 430.772 380.861 425.994 379.119 424.8 387.2C 420.676 384.225 419.644 380.574 416.485 376.883C 409.95 369.248 402.909 362.781 397.594 354.518C 394.883 350.306 388.238 353.682 388.8 347.2C 387.179 348.35 385.847 350.31 387.355 352.318C 388.856 354.317 392.177 353.262 394.158 354.543C 396.871 356.298 398.452 362.595 399.2 365.6C 411.485 366.526 414.024 387.746 425.6 389.6L 427.286 384.797C 432.822 372.446 436.411 390.417 438.4 395.2C 425.766 393.605 430.255 402.969 421.585 407.554C 418.741 409.058 413.725 411.582 410.446 410.912C 407.8 410.37 406.434 405.882 403.439 406.97C 398.504 408.762 403.56 415.157 406.4 416L 405.6 412C 403.062 412 403.558 410.1 404 408C 407.674 413.714 411.252 413.6 417.6 413.6C 419.742 409.834 424.152 410.157 426.72 406.978C 428.99 404.169 428.266 399.747 431.512 397.466C 433.842 395.829 438.418 397.933 439.863 394.946C 441.066 392.458 437.94 388.786 437.29 386.4C 435.885 381.243 436.086 375.203 438.4 370.4L 439.2 375.2C 446.285 372.905 446.218 364.777 449.671 359.284C 451.338 356.634 454.32 355.463 456 352.8L 457.6 353.6C 463.139 347.668 473.776 337.461 470.853 328.106C 469.986 325.334 466.88 324.603 464.843 322.885C 462.477 320.889 461.714 317.77 459.482 315.794C 457.634 314.156 454.933 314.354 453.135 312.546C 449.899 309.294 449.348 301.211 448.8 296.8C 434.641 298.257 437.057 287.084 433.6 277.6L 431.2 278.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 525.066 278.134C 525.022 278.178 524.978 279.022 525.334 278.666C 525.378 278.622 525.422 277.778 525.066 278.134z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 604.8 277.6L 605.6 278.4L 604.8 277.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 36.8 278.4L 36.8 281.6L 37.6 281.6C 37.4607 280.252 37.3465 279.605 36.8 278.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 37.8666 278.934C 37.8222 278.978 37.7778 279.822 38.1334 279.466C 38.1778 279.422 38.2222 278.578 37.8666 278.934M 238.934 278.666C 238.578 279.022 239.422 278.978 239.466 278.934C 239.822 278.578 238.978 278.622 238.934 278.666z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 430.134 278.666C 429.778 279.022 430.622 278.978 430.666 278.934C 431.022 278.578 430.178 278.622 430.134 278.666M 600 278.4L 600.8 279.2L 600 278.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 599.2 279.2L 599.2 280L 602.4 280C 601.021 279.155 600.863 279.171 599.2 279.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 605.6 278.4L 605.6 283.2L 606.4 283.2C 606.362 281.398 606.299 280.042 605.6 278.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 100 279.2L 100.8 280L 100 279.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 116.8 279.2L 117.6 280L 116.8 279.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 240 279.2C 240.749 280.759 241.114 281.24 242.4 282.4C 241.651 280.841 241.286 280.36 240 279.2M 428.534 279.466C 428.178 279.822 429.022 279.778 429.066 279.734C 429.422 279.378 428.578 279.422 428.534 279.466z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 429.6 279.2L 429.6 280L 432 280C 431.002 279.452 430.762 279.401 429.6 279.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 524.8 279.2L 524.8 281.6L 525.6 281.6C 525.399 280.438 525.348 280.198 524.8 279.2M 595.2 279.2L 595.2 280L 599.2 280C 597.785 279.377 596.771 279.27 595.2 279.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 100 280C 99.2232 282.8 97.6136 284.801 96 287.2C 98.9888 285.726 101.178 283.443 100 280z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 236.8 280C 237.45 282.226 237.962 282.902 240 284C 239.07 282.226 238.331 281.285 236.8 280z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 434.4 280L 435.2 280.8L 434.4 280M 525.6 280C 525.925 281.674 525.774 281.616 527.2 282.4C 526.647 281.289 526.413 280.911 525.6 280z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 526.4 280C 527.428 282.564 528.482 282.986 531.2 283.2L 531.2 282.4C 529.302 281.879 528.03 281.116 526.4 280z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 533.6 280L 534.4 280.8L 533.6 280M 592.8 282.4C 593.966 281.517 594.318 281.166 595.2 280C 593.501 280.719 593.519 280.701 592.8 282.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 595.2 280L 596 280.8L 595.2 280z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 33.6 281.6L 32.8 284.8C 34.1864 283.822 34.5211 283.193 35.2 281.6L 33.6 281.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 36.8 281.6L 37.6 282.4L 36.8 281.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 368 281.6L 368.8 282.4L 368 281.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 429.334 281.866C 428.978 282.222 429.822 282.178 429.866 282.134C 430.222 281.778 429.378 281.822 429.334 281.866z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 404.8 335.2C 401.298 335.642 397.938 335.998 394.4 336C 393.319 341.552 390.282 344.676 388 349.6C 390.561 350.998 394.317 351.358 396.454 353.271C 398.578 355.173 398.665 358.446 400.578 360.578C 405.166 365.689 410.968 369.883 415.398 375.368C 418.907 379.714 419.671 384.202 424.8 387.2C 424.985 385.499 424.997 384.097 424.8 382.4C 426.958 380.87 431.912 377.872 433.201 375.749C 434.506 373.599 434.87 368.174 438.326 368.166C 440.395 368.16 441.046 371.644 442.4 372.8C 441.956 368.112 444.122 368.165 445.93 364.488C 447.499 361.297 447.254 358.223 449.971 355.439C 456.654 348.595 471.515 341.218 468.654 329.01C 468.046 326.418 464.397 325.393 462.506 323.925C 460.337 322.24 459.426 319.654 457.421 317.853C 455.556 316.177 452.707 316.146 451.139 314.146C 448.226 310.432 449.542 304.762 446.526 301.143C 443.438 297.438 436.98 297.844 434.33 293.45C 432.658 290.677 435.37 283.534 431.746 282.218C 422.253 278.774 415.087 290.897 413.758 298.4C 413.257 301.233 413.649 305.281 411.981 307.746C 408.648 312.673 402.158 312.238 401.147 320C 400.507 324.919 404.782 329.863 404.8 335.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 503.2 281.6L 503.2 284L 504 284C 503.799 282.838 503.748 282.598 503.2 281.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 599.2 281.6L 599.2 282.4C 601.392 283.333 603.223 283.848 605.6 284L 605.6 283.2L 599.2 281.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 422.4 282.4L 422.4 283.2L 425.6 283.2C 424.395 282.654 423.748 282.539 422.4 282.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 435.2 282.4L 435.2 287.2L 436 287.2C 435.962 285.398 435.899 284.042 435.2 282.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 34.4 283.2L 34.4 285.6L 35.2 285.6L 36 283.2L 34.4 283.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 100 283.2L 100.8 284L 100 283.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 116.8 283.2C 117.236 284.508 117.092 284.364 118.4 284.8C 117.964 283.492 118.108 283.636 116.8 283.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 124.8 283.2L 124.8 284L 129.6 284C 127.958 283.301 126.602 283.238 124.8 283.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 129.6 283.2L 130.4 284L 129.6 283.2z\" />\r\n            <path style=\"stroke:none; fill:#92c2d5\"\r\n                d=\"M 367.2 283.2L 367.2 285.6L 368 285.6C 367.799 284.438 367.748 284.198 367.2 283.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 421.334 283.466C 420.978 283.822 421.822 283.778 421.866 283.734C 422.222 283.378 421.378 283.422 421.334 283.466M 533.6 283.2L 534.4 284L 533.6 283.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 592.266 283.734C 592.222 283.778 592.178 284.622 592.534 284.266C 592.578 284.222 592.622 283.378 592.266 283.734z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 116.8 284L 117.6 284.8L 116.8 284z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 242.4 284L 242.4 289.6L 243.2 289.6C 243.185 287.566 243.188 285.866 242.4 284z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 366.4 284C 365.278 286.402 364.408 288.576 364 291.2L 364.8 291.2C 365.917 288.797 367.123 286.606 366.4 284z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 419.2 284L 420 284.8L 419.2 284z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 499.2 286.4C 500.899 285.681 500.881 285.699 501.6 284C 500.062 284.722 500.001 284.861 499.2 286.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 534.934 284.266C 534.578 284.622 535.422 284.578 535.466 284.534C 535.822 284.178 534.978 284.222 534.934 284.266z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 536 284L 536 284.8L 538.4 284.8C 537.402 284.252 537.161 284.201 536 284z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 591.2 284L 592 284.8L 591.2 284z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 594.4 284L 594.4 291.2L 595.2 291.2C 595.198 288.699 595.37 286.312 594.4 284z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 601.6 284L 601.6 284.8L 605.6 284.8C 604.185 284.177 603.171 284.07 601.6 284z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 33.0666 285.334C 33.0222 285.378 32.9778 286.222 33.3334 285.866C 33.3778 285.822 33.4222 284.978 33.0666 285.334z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 118.4 284.8L 118.4 285.6C 120.302 286.058 122.046 286.312 124 286.4L 124 285.6L 118.4 284.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 418.666 285.334C 418.622 285.378 418.578 286.222 418.934 285.866C 418.978 285.822 419.022 284.978 418.666 285.334z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 534.4 284.8L 534.4 285.6L 538.4 285.6C 536.985 284.977 535.971 284.87 534.4 284.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 542.4 284.8L 543.2 285.6L 542.4 284.8M 548 284.8L 548.8 285.6L 548 284.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 591.2 284.8L 591.2 289.6L 592 289.6L 592.8 284.8L 591.2 284.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 32 285.6C 32.5469 286.864 32.6438 287.022 33.6 288C 33.0531 286.736 32.9562 286.578 32 285.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 119.2 285.6L 120 286.4L 119.2 285.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 417.866 286.134C 417.822 286.178 417.778 287.022 418.134 286.666C 418.178 286.622 418.222 285.778 417.866 286.134z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 470.4 285.6L 470.4 286.4L 472.8 286.4C 471.802 285.852 471.561 285.801 470.4 285.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 498.4 285.6L 499.2 286.4L 498.4 285.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 592 285.6L 592 288.8L 592.8 288.8C 592.661 287.452 592.546 286.805 592 285.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 243.2 286.4L 243.2 288.8L 244 288.8C 243.799 287.638 243.748 287.398 243.2 286.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 348.8 288.8L 352 288.8C 352 287.362 351.989 287.582 351.2 286.4C 349.501 287.119 349.519 287.101 348.8 288.8z\" />\r\n            <path style=\"stroke:none; fill:#92c2d5\"\r\n                d=\"M 366.4 286.4L 367.2 287.2L 366.4 286.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 418.666 286.934C 418.622 286.978 418.578 287.822 418.934 287.466C 418.978 287.422 419.022 286.578 418.666 286.934z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 470.134 286.666C 469.778 287.022 470.622 286.978 470.666 286.934C 471.022 286.578 470.178 286.622 470.134 286.666z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 473.6 286.4L 474.4 287.2L 473.6 286.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 497.334 286.666C 496.978 287.022 497.822 286.978 497.866 286.934C 498.222 286.578 497.378 286.622 497.334 286.666z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 498.4 286.4L 499.2 287.2L 498.4 286.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 590.4 286.4L 590.4 288.8L 591.2 288.8C 590.999 287.638 590.948 287.398 590.4 286.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 595.2 286.4L 595.2 289.6L 596 289.6C 595.861 288.252 595.746 287.605 595.2 286.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 96 287.2L 96.8 288L 96 287.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 130.666 287.734C 130.622 287.778 130.578 288.622 130.934 288.266C 130.978 288.222 131.022 287.378 130.666 287.734z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 416.8 287.2L 416.8 288.8C 418.108 288.364 417.964 288.508 418.4 287.2L 416.8 287.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 468 287.2L 468.8 288L 468 287.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 476 287.2L 476.8 288L 476 287.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 496.534 287.466C 496.178 287.822 497.022 287.778 497.066 287.734C 497.422 287.378 496.578 287.422 496.534 287.466z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 83.2 288L 83.2 289.6L 84.8 289.6C 84.364 288.292 84.508 288.436 83.2 288z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 84 288L 84 288.8C 87.7888 289.702 91.4488 289.909 95.2 288.8L 95.2 288C 91.2688 288.73 87.9312 288.73 84 288z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 241.6 288L 240.8 289.6L 242.4 289.6C 242.4 288.118 242.64 288.52 241.6 288z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 244.266 288.534C 244.222 288.578 244.178 289.422 244.534 289.066C 244.578 289.022 244.622 288.178 244.266 288.534z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 352 288L 352.8 288.8L 352 288z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 353.066 288.534C 353.022 288.578 352.978 289.422 353.334 289.066C 353.378 289.022 353.422 288.178 353.066 288.534z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 365.866 288.534C 365.822 288.578 365.778 289.422 366.134 289.066C 366.178 289.022 366.222 288.178 365.866 288.534z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 417.6 288C 416.811 289.183 416.8 288.962 416.8 290.4C 418.213 289.617 418.364 289.422 417.6 288z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 462.4 293.6L 463.2 293.6L 463.2 288.8L 466.4 288.8C 462.886 287.649 462.494 290.724 462.4 293.6M 492.8 288L 492.8 288.8L 495.2 288.8C 494.202 288.252 493.962 288.201 492.8 288z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 548.8 288L 549.6 288.8L 548.8 288M 36.2666 289.334C 36.2222 289.378 36.1778 290.222 36.5334 289.866C 36.5778 289.822 36.6222 288.978 36.2666 289.334z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 84.8 288.8L 85.6 289.6L 84.8 288.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 131.466 289.334C 131.422 289.378 131.378 290.222 131.734 289.866C 131.778 289.822 131.822 288.978 131.466 289.334z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 354.666 289.334C 354.622 289.378 354.578 290.222 354.934 289.866C 354.978 289.822 355.022 288.978 354.666 289.334z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 355.2 288.8L 355.2 289.6L 358.4 290.4L 358.4 289.6L 355.2 288.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 463.2 291.2C 464.739 290.399 464.879 290.338 465.6 288.8C 463.709 289.186 463.586 289.309 463.2 291.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 489.334 289.066C 488.978 289.422 489.822 289.378 489.866 289.334C 490.222 288.978 489.378 289.022 489.334 289.066z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 490.4 288.8L 490.4 289.6L 492.8 289.6C 491.802 289.052 491.562 289.001 490.4 288.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 549.6 288.8L 549.6 290.4L 551.2 290.4C 550.764 289.092 550.908 289.236 549.6 288.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 84 289.6L 84 290.4L 88 290.4C 86.5848 289.777 85.5712 289.67 84 289.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 238.4 290.4L 238.4 291.2L 241.6 290.4C 240.153 289.941 239.945 290.028 238.4 290.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 244.8 289.6C 246.211 292.058 248.074 293.593 250.4 295.2C 249.081 292.399 247.602 290.919 244.8 289.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 344 289.6L 344.8 290.4L 344 289.6z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 355.734 289.866C 355.378 290.222 356.222 290.178 356.266 290.134C 356.622 289.778 355.778 289.822 355.734 289.866z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 416 289.6L 415.2 292.8L 416 292.8C 416.372 291.255 416.459 291.047 416 289.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 467.2 292C 468.759 291.251 469.24 290.886 470.4 289.6C 468.841 290.349 468.36 290.714 467.2 292z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 593.6 289.6L 593.6 293.6L 594.4 293.6C 594.33 292.029 594.223 291.015 593.6 289.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 37.6 290.4L 37.6 291.2L 40 291.2C 39.0014 290.652 38.7612 290.601 37.6 290.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 132 290.4L 132.8 291.2L 132 290.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 347.2 291.2L 347.2 292L 352.8 292C 350.85 290.633 349.553 290.825 347.2 291.2M 356 290.4L 356.8 291.2L 356 290.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 364.8 290.4C 363.971 291.349 363.729 291.683 363.2 292.8C 364.438 291.79 364.646 291.845 364.8 290.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 433.6 290.4C 433.328 292.014 433.342 292.774 433.6 294.4L 434.4 294.4C 434.33 292.829 434.223 291.815 433.6 290.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 467.2 290.4L 468 291.2L 467.2 290.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 478.4 290.4L 479.2 291.2L 478.4 290.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 551.2 290.4L 552 291.2L 551.2 290.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 37.6 291.2L 37.6 292L 42.4 292C 40.7583 291.301 39.4022 291.238 37.6 291.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 42.9334 291.466C 42.5778 291.822 43.4222 291.778 43.4666 291.734C 43.8222 291.378 42.9778 291.422 42.9334 291.466z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 132.8 291.2L 133.6 292L 132.8 291.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 227.734 291.466C 227.378 291.822 228.222 291.778 228.266 291.734C 228.622 291.378 227.778 291.422 227.734 291.466z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 236.8 292.8L 239.2 292C 237.778 291.236 237.583 291.387 236.8 292.8M 349.6 291.2L 350.4 292L 349.6 291.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 364.8 291.2L 365.6 292L 364.8 291.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 466.4 291.2L 467.2 292L 466.4 291.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 479.734 291.466C 479.378 291.822 480.222 291.778 480.266 291.734C 480.622 291.378 479.778 291.422 479.734 291.466z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 43.7334 292.266C 43.3778 292.622 44.2222 292.578 44.2666 292.534C 44.6222 292.178 43.7778 292.222 43.7334 292.266z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 133.6 292L 133.6 292.8L 136 292.8C 135.002 292.252 134.762 292.201 133.6 292z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 142.934 292.266C 142.578 292.622 143.422 292.578 143.466 292.534C 143.822 292.178 142.978 292.222 142.934 292.266z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 225.866 292.534C 225.822 292.578 225.778 293.422 226.134 293.066C 226.178 293.022 226.222 292.178 225.866 292.534z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 235.734 292.266C 235.378 292.622 236.222 292.578 236.266 292.534C 236.622 292.178 235.778 292.222 235.734 292.266z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 344 292L 344 292.8L 349.6 292.8C 347.734 292.012 346.034 292.015 344 292z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 349.6 292L 350.4 292.8L 349.6 292z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 351.2 292L 351.2 292.8L 354.4 292.8C 353.195 292.254 352.548 292.139 351.2 292z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 358.4 292L 358.4 292.8L 361.6 292.8C 360.395 292.254 359.748 292.139 358.4 292z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 362.134 292.266C 361.778 292.622 362.622 292.578 362.666 292.534C 363.022 292.178 362.178 292.222 362.134 292.266z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 444 292L 444 294.4L 444.8 294.4C 444.599 293.238 444.548 292.998 444 292z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 444.8 292L 444.8 295.2L 445.6 295.2C 446.319 293.501 446.301 293.519 448 292.8C 446.795 292.254 446.148 292.139 444.8 292z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 465.6 292C 464.811 293.183 464.8 292.962 464.8 294.4C 465.831 293.246 465.921 293.413 465.6 292z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 480.8 292L 480.8 292.8L 488.8 292.8C 486.27 291.738 483.531 292 480.8 292z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 552 292L 552.8 295.2L 553.6 295.2C 553.191 293.638 553.014 293.234 552 292z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 35.2 292.8L 35.2 294.4L 36.8 294.4C 36.364 293.092 36.5081 293.236 35.2 292.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 36 292.8L 36.8 293.6L 36 292.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 44.8 292.8L 45.6 293.6L 44.8 292.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 136.534 293.066C 136.178 293.422 137.022 293.378 137.066 293.334C 137.422 292.978 136.578 293.022 136.534 293.066z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 138.134 293.066C 137.778 293.422 138.622 293.378 138.666 293.334C 139.022 292.978 138.178 293.022 138.134 293.066z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 144 292.8L 144.8 293.6L 144 292.8M 233.6 292.8L 233.6 293.6L 236 293.6C 235.002 293.052 234.762 293.001 233.6 292.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 344.8 292.8L 344.8 293.6L 349.6 293.6C 347.958 292.901 346.602 292.838 344.8 292.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 351.2 292.8L 351.2 293.6L 354.4 293.6C 353.195 293.054 352.548 292.939 351.2 292.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 360 292.8L 360 293.6L 363.2 293.6C 361.995 293.054 361.348 292.939 360 292.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 414.4 292.8L 414.4 295.2L 415.2 295.2L 416 292.8L 414.4 292.8M 45.6 293.6L 45.6 294.4L 48 295.2C 47.0218 294.244 46.864 294.147 45.6 293.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 145.6 293.6L 146.4 294.4L 145.6 293.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 360 295.2L 362.4 294.4C 360.978 293.636 360.783 293.787 360 295.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 462.4 293.6L 463.2 294.4L 462.4 293.6M 591.2 293.6L 591.2 297.6L 592 297.6C 591.93 296.029 591.823 295.015 591.2 293.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 46.6666 294.934C 46.6222 294.978 46.5778 295.822 46.9334 295.466C 46.9778 295.422 47.0222 294.578 46.6666 294.934z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 299.2 294.4C 299.525 296.074 299.374 296.016 300.8 296.8C 300.253 295.536 300.156 295.378 299.2 294.4M 303.2 294.4C 303.919 296.099 303.901 296.081 305.6 296.8C 304.718 295.634 304.366 295.282 303.2 294.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 434.4 294.4L 435.2 295.2L 434.4 294.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 438.934 294.666C 438.578 295.022 439.422 294.978 439.466 294.934C 439.822 294.578 438.978 294.622 438.934 294.666z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 452 294.4L 452.8 295.2L 452 294.4M 460.8 294.4L 461.6 295.2L 460.8 294.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 553.6 294.4L 553.6 297.6L 554.4 297.6C 554.261 296.252 554.146 295.605 553.6 294.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 47.7334 295.466C 47.3778 295.822 48.2222 295.778 48.2666 295.734C 48.6222 295.378 47.7778 295.422 47.7334 295.466z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 148 295.2L 148.8 296L 148 295.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 226.4 295.2L 227.2 296L 226.4 295.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 335.2 295.2L 336 296L 335.2 295.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 411.2 295.2L 411.2 297.6L 412 297.6C 411.799 296.438 411.748 296.198 411.2 295.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 413.866 295.734C 413.822 295.778 413.778 296.622 414.134 296.266C 414.178 296.222 414.222 295.378 413.866 295.734z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 448.8 295.2L 449.6 296L 448.8 295.2M 453.6 295.2L 453.6 296L 457.6 296.8C 456.368 295.358 455.522 295.334 453.6 295.2M 458.4 295.2L 459.2 296L 458.4 295.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 554.4 295.2C 554.534 297.122 554.558 297.968 556 299.2C 555.616 297.632 555.25 296.554 554.4 295.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 594.934 295.466C 594.578 295.822 595.422 295.778 595.466 295.734C 595.822 295.378 594.978 295.422 594.934 295.466z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 50.4 296L 50.4 296.8L 55.2 296.8C 53.5583 296.101 52.2022 296.038 50.4 296z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 149.334 296.266C 148.978 296.622 149.822 296.578 149.866 296.534C 150.222 296.178 149.378 296.222 149.334 296.266z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 216 296L 216.8 296.8L 216 296z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 225.334 296.266C 224.978 296.622 225.822 296.578 225.866 296.534C 226.222 296.178 225.378 296.222 225.334 296.266z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 334.4 296L 335.2 296.8L 334.4 296z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 54.4 296.8L 54.4 297.6C 55.7082 298.036 55.564 297.892 56 299.2L 56.8 299.2C 56.4141 297.309 56.2912 297.186 54.4 296.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 150.4 296.8L 151.2 297.6L 150.4 296.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 223.2 296.8L 224 297.6L 223.2 296.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 224.534 297.066C 224.178 297.422 225.022 297.378 225.066 297.334C 225.422 296.978 224.578 297.022 224.534 297.066z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 333.6 296.8L 334.4 297.6L 333.6 296.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 443.734 297.066C 443.378 297.422 444.222 297.378 444.266 297.334C 444.622 296.978 443.778 297.022 443.734 297.066M 461.334 297.066C 460.978 297.422 461.822 297.378 461.866 297.334C 462.222 296.978 461.378 297.022 461.334 297.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 590.4 296.8C 591.279 299.457 592.472 299.79 595.2 300L 595.2 299.2C 593.302 298.679 592.031 297.916 590.4 296.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 597.6 296.8C 597.642 298.822 597.822 300.466 598.4 302.4L 599.2 302.4C 599.134 300.074 599.007 298.646 597.6 296.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 47.7334 297.866C 47.3778 298.222 48.2222 298.178 48.2666 298.134C 48.6222 297.778 47.7778 297.822 47.7334 297.866z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 152.534 297.866C 152.178 298.222 153.022 298.178 153.066 298.134C 153.422 297.778 152.578 297.822 152.534 297.866z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 332.8 297.6L 333.6 298.4L 332.8 297.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 448 297.6L 448.8 298.4L 448 297.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 459.734 297.866C 459.378 298.222 460.222 298.178 460.266 298.134C 460.622 297.778 459.778 297.822 459.734 297.866z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 592 298.4L 592 299.2C 593.698 298.954 594.149 298.894 595.2 297.6L 592 298.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 595.2 297.6L 596 298.4L 595.2 297.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 596.8 297.6L 596.8 300.8L 597.6 300.8C 597.461 299.452 597.346 298.805 596.8 297.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 54.4 298.4L 54.4 303.2L 55.2 303.2C 55.1622 301.398 55.0994 300.042 54.4 298.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 153.6 298.4L 154.4 299.2L 153.6 298.4M 332 298.4L 332 300C 333.308 299.564 333.164 299.708 333.6 298.4L 332 298.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 456 298.4L 456 299.2L 459.2 299.2C 457.995 298.654 457.348 298.539 456 298.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 154.934 299.466C 154.578 299.822 155.422 299.778 155.466 299.734C 155.822 299.378 154.978 299.422 154.934 299.466z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 208.8 300L 208.8 300.8C 210.984 300.706 213.051 300.401 215.2 300C 213.042 299.225 211.071 299.718 208.8 300z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 189.6 322.4C 184.423 323.24 176.47 317.388 172.315 319.447C 162.966 324.081 171.918 336.37 165.6 342.4C 166.55 346.267 164.577 349.892 165.823 353.6C 169.513 364.574 181.534 375.561 192 379.632C 195.424 380.964 199.52 383.302 203.2 383.507C 209.454 383.856 223.825 377.094 225.6 385.6L 232.8 385.6C 237.101 376.996 250.705 379.238 258.4 376.8C 258.843 373.41 262.302 375.078 264.711 373.645C 267.35 372.074 268.914 367.614 269.6 364.8C 266.035 363.67 262.167 362.578 258.4 363.45C 256.079 363.988 253.774 366.412 251.286 365.799C 244.826 364.208 247.573 354.524 246.718 350.4C 245.802 345.991 242.965 344.037 244 339.2C 238.751 338.374 240.371 334.793 237.25 331.71C 234.925 329.414 231.346 329.038 228.918 326.866C 225.304 323.631 221.459 311.423 223.2 307.2C 220.678 304.894 218.346 302.247 216.8 299.2C 209.538 300.861 197.344 304.142 199.09 314.369C 199.81 318.586 205.779 322.287 203.966 327.053C 200.539 336.056 191.919 326.871 189.6 322.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 328.8 300L 328.8 300.8L 332 300C 330.673 299.675 330.206 299.753 328.8 300z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 412.8 299.2L 412.8 303.2L 413.6 303.2C 413.53 301.629 413.423 300.615 412.8 299.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 554.666 299.734C 554.622 299.778 554.578 300.622 554.934 300.266C 554.978 300.222 555.022 299.378 554.666 299.734z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 555.2 299.2L 555.2 302.4L 556 302.4C 555.861 301.052 555.746 300.405 555.2 299.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 60.8 302.4C 64.0658 301.726 65.9114 302.418 68.8 304C 66.3944 300.845 63.904 299.282 60.8 302.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 156.534 300.266C 156.178 300.622 157.022 300.578 157.066 300.534C 157.422 300.178 156.578 300.222 156.534 300.266M 217.066 300.534C 217.022 300.578 216.978 301.422 217.334 301.066C 217.378 301.022 217.422 300.178 217.066 300.534z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 220 300L 220.8 300.8L 220 300z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 324.266 300.534C 324.222 300.578 324.178 301.422 324.534 301.066C 324.578 301.022 324.622 300.178 324.266 300.534z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 325.334 300.266C 324.978 300.622 325.822 300.578 325.866 300.534C 326.222 300.178 325.378 300.222 325.334 300.266z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 592 300L 592 300.8L 594.4 300.8C 593.402 300.252 593.162 300.201 592 300z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 203.2 300.8L 204 301.6L 203.2 300.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 207.734 301.066C 207.378 301.422 208.222 301.378 208.266 301.334C 208.622 300.978 207.778 301.022 207.734 301.066z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 220.8 300.8L 221.6 301.6L 220.8 300.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 322.934 301.066C 322.578 301.422 323.422 301.378 323.466 301.334C 323.822 300.978 322.978 301.022 322.934 301.066z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 324.8 300.8L 325.6 301.6L 324.8 300.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 325.6 300.8L 326.4 301.6L 325.6 300.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 447.2 300.8L 447.2 303.2L 448 303.2C 447.799 302.038 447.748 301.798 447.2 300.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 599.2 300.8L 599.2 303.2L 600 303.2C 599.799 302.038 599.748 301.798 599.2 300.8z\" />\r\n            <path style=\"stroke:none; fill:#010101\"\r\n                d=\"M 45.6 310.4L 44.8 310.4C 41.1058 308.138 33.9569 312.305 30.4 314.239C 20.0425 319.871 21.6554 324.919 20.7531 335.197C 20.469 338.433 17.0538 340.218 17.0364 343.212C 17.0239 345.355 18.9121 346.832 19.3969 348.831C 20.295 352.535 19.9679 357.729 20 361.6L 25.5858 362.715C 38.3245 366.968 22.3346 380.069 20.8 384.8C 28.8052 382.101 36.1166 371.009 30.3784 362.747C 28.361 359.842 23.6881 361.682 22.0741 358.218C 19.6634 353.042 24.6931 347.388 18.4 344L 18.4 342.4C 26.2471 339.514 20.0019 329.125 23.2222 323.283C 26.899 316.614 37.2658 313.395 44 311.2C 45.0373 312.736 45.4328 313.053 47.2 313.6C 49.5937 308.588 59.773 302.248 65.6 304.722C 73.8489 308.224 77.5479 319.251 83.3552 325.26C 88.9792 331.078 94.4608 331.27 100.8 335.112C 108.7 339.9 115.987 347.365 124.8 350.4C 123.933 353.678 123.23 356.588 123.2 360L 124.8 360C 125.187 354.228 129.201 349.038 130.4 343.2C 146.041 342.387 151.626 328.47 148.142 315.439C 147.421 312.741 144.516 312.04 144 308.8C 140.334 311.25 142.814 314.607 146.4 315.2C 143.991 320.893 148.339 323.803 147.338 328.8C 146.042 335.266 134.706 340.992 128.8 341.6C 127.835 344.316 126.712 346.709 126.4 349.6C 118.664 344.381 111.208 338.334 103.2 333.606C 98.8184 331.02 93.8032 331.265 89.736 327.739C 81.5248 320.622 76.7751 306.658 66.3994 302.354C 60.767 300.018 49.1062 306.07 45.6 310.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 202.134 301.866C 201.778 302.222 202.622 302.178 202.666 302.134C 203.022 301.778 202.178 301.822 202.134 301.866z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 221.6 301.6L 222.4 302.4L 221.6 301.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 597.6 301.6L 598.4 302.4L 597.6 301.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 312.8 302.4L 313.6 303.2L 312.8 302.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 316 302.4L 316 303.2L 320.8 303.2C 319.158 302.501 317.802 302.438 316 302.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 448 302.4L 448 305.6L 448.8 305.6C 448.661 304.252 448.546 303.605 448 302.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 555.2 302.4L 555.2 306.4L 556 306.4C 555.93 304.829 555.823 303.815 555.2 302.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 556 302.4L 556 319.2L 559.2 319.2L 559.2 318.4L 556.8 318.4C 556.8 313.465 557.918 306.972 556 302.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 598.4 302.4L 599.2 303.2L 598.4 302.4z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 43.2 312C 38.8258 313.277 25.5207 318.331 23.7469 322.582C 20.8122 329.618 28.0073 339.326 20 344C 24.5002 350.498 24.17 353.165 23.2 360.8C 30.1816 360.33 35.1682 367.232 32.905 374.397C 31.3679 379.262 25.4895 384.035 20.8 385.6L 18.4 394.4C 27.194 392.357 23.4439 399.49 28.5216 403.178C 30.7139 404.77 34.4109 403.358 35.5852 406.518C 37.6948 412.197 31.863 416.317 39.2123 421.006C 42.078 422.834 45.6205 422.21 48.8 423.008C 65.1033 427.101 80.812 423.903 96.8 419.2C 98.268 425.963 102.068 429.31 108.8 427.2C 105.318 411.826 111.895 403.014 117.01 388.801C 119.81 381.015 112.188 377.285 123.2 372.8C 121.677 371.293 120.373 370.438 118.4 369.6C 119.151 365.567 119.183 362.038 122.4 359.2C 121.131 355.586 122.41 353.694 124 350.4C 113.03 346.012 105.107 332.075 92 334.4C 91.1584 329.962 84.8632 326.821 81.636 323.772C 77.6977 320.05 75.301 315.112 71.3704 311.052C 69.3408 308.955 67.9674 304.468 64.7654 303.922C 61.497 303.364 51.5282 307.619 49.279 310.039C 47.9115 311.511 47.9145 315.036 45.6 315.496C 43.5938 315.895 43.4028 313.257 43.2 312z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 159.466 303.734C 159.422 303.778 159.378 304.622 159.734 304.266C 159.778 304.222 159.822 303.378 159.466 303.734M 312.266 303.734C 312.222 303.778 312.178 304.622 312.534 304.266C 312.578 304.222 312.622 303.378 312.266 303.734z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 315.2 303.2L 315.2 304L 324 304C 321.254 302.848 318.16 303.2 315.2 303.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 410.666 303.734C 410.622 303.778 410.578 304.622 410.934 304.266C 410.978 304.222 411.022 303.378 410.666 303.734z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 450.666 303.734C 450.622 303.778 450.578 304.622 450.934 304.266C 450.978 304.222 451.022 303.378 450.666 303.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 599.2 303.2L 600 304L 599.2 303.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 143.466 304.534C 143.422 304.578 143.378 305.422 143.734 305.066C 143.778 305.022 143.822 304.178 143.466 304.534z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 144 304L 141.6 309.6C 143.014 308.836 143.686 308.347 144.8 307.2C 149.323 310.837 153.971 308.926 159.2 308.8L 157.6 305.6C 153.366 306.731 150.01 307.457 145.6 307.2L 145.6 306.4C 146.651 305.786 146.586 305.851 147.2 304.8L 144 304z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 220 304L 220.8 304.8L 220 304z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 600.266 304.534C 600.222 304.578 600.178 305.422 600.534 305.066C 600.578 305.022 600.622 304.178 600.266 304.534z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 201.6 304.8L 202.4 305.6L 201.6 304.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 220.8 304.8L 220.8 306.4L 222.4 306.4C 221.964 305.092 222.108 305.236 220.8 304.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 311.2 304.8C 311.23 308.722 310.688 312.994 311.2 316.8L 312 316.8C 313.993 312.658 313.148 309.208 312.8 304.8L 311.2 304.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 48 307.2L 51.2 306.4C 49.5628 305.799 49.1234 305.875 48 307.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 51.2 305.6L 52 306.4L 51.2 305.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 54.4 305.6L 55.2 306.4L 54.4 305.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 55.2 305.6L 55.2 306.4L 57.6 306.4C 56.6013 305.852 56.3613 305.801 55.2 305.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 200.8 305.6L 201.6 306.4L 200.8 305.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 450.4 305.6L 450.4 308.8L 451.2 308.8C 451.061 307.452 450.946 306.805 450.4 305.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 600.8 305.6L 601.6 306.4L 600.8 305.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 49.3334 306.666C 48.9778 307.022 49.8222 306.978 49.8666 306.934C 50.2222 306.578 49.3778 306.622 49.3334 306.666z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 54.4 306.4L 54.4 307.2L 56.8 307.2C 55.8013 306.652 55.5613 306.601 54.4 306.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 68 306.4L 68.8 307.2L 68 306.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 146.134 306.666C 145.778 307.022 146.622 306.978 146.666 306.934C 147.022 306.578 146.178 306.622 146.134 306.666M 222.4 306.4L 223.2 307.2L 222.4 306.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 225.6 306.4L 225.6 308.8L 226.4 308.8C 226.199 307.638 226.148 307.398 225.6 306.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 226.666 306.934C 226.622 306.978 226.578 307.822 226.934 307.466C 226.978 307.422 227.022 306.578 226.666 306.934z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 412 306.4L 412 308.8L 412.8 308.8C 412.599 307.638 412.548 307.398 412 306.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 555.2 306.4L 555.2 308.8L 556 308.8C 555.799 307.638 555.748 307.398 555.2 306.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 604.266 306.934C 604.222 306.978 604.178 307.822 604.534 307.466C 604.578 307.422 604.622 306.578 604.266 306.934z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 44 309.6L 44.8 310.4C 46.202 309.336 46.9358 308.602 48 307.2C 46.0525 307.721 45.3738 308.128 44 309.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 52.8 307.2L 53.6 308L 52.8 307.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 68.8 307.2C 69.7758 310.044 70.8991 311.47 73.6 312.8C 72.2494 310.473 70.9305 308.84 68.8 307.2z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 144.8 307.2C 143.34 312.326 147.398 312.105 147.774 316.114C 148.106 319.668 149.875 325.354 149.402 328.797C 148.362 336.366 137.334 343.032 130.4 343.2C 127.934 351.088 123.802 358.765 122.189 366.437C 121.569 369.387 125.794 370.593 124.998 373.455C 124.201 376.328 119.941 375.833 118.986 378.55C 118.041 381.242 120.047 385.574 119.382 388.797C 118.516 392.987 115.133 395.968 113.644 400C 111.744 405.145 105.458 419.478 111.2 423.2C 109.871 418.494 112.136 412.274 118.328 413.138C 123.335 413.836 126.938 419.877 132.012 420.586C 138.19 421.45 142.314 416.514 148 416.046C 151.657 415.746 156.484 415.419 160 416.559C 162.358 417.323 164.594 419.496 167.2 419.234C 171.501 418.801 172.954 413.654 176.843 412.458C 180.538 411.322 186.139 413.44 188.914 410.053C 191.939 406.359 189.044 400.939 191.858 396.939C 194.841 392.699 200.086 391.748 201.6 386.4C 186.638 378.528 165.894 370.998 162.886 351.2C 161.858 344.43 165.697 340.438 165.773 334.4C 165.802 332.054 163.795 330.372 163.661 328.072C 163.372 323.105 168.994 319.082 172 316C 167.788 313.886 163.005 312.95 158.4 312L 159.2 308.8C 154.047 308.631 149.058 311.265 144.8 307.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 200.266 307.734C 200.222 307.778 200.178 308.622 200.534 308.266C 200.578 308.222 200.622 307.378 200.266 307.734z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 223.2 307.2C 222.411 308.383 222.4 308.162 222.4 309.6C 223.431 308.446 223.521 308.613 223.2 307.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 411.2 307.2L 410.4 309.6C 411.813 308.817 411.964 308.622 411.2 307.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 51.7334 308.266C 51.3778 308.622 52.2222 308.578 52.2666 308.534C 52.6223 308.178 51.7778 308.222 51.7334 308.266z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 313.334 308.266C 312.978 308.622 313.822 308.578 313.866 308.534C 314.222 308.178 313.378 308.222 313.334 308.266z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 314.4 308L 315.2 308.8L 314.4 308z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 409.6 308L 409.6 309.6C 410.908 309.164 410.764 309.308 411.2 308L 409.6 308z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 451.2 308L 451.2 310.4L 452 310.4C 451.799 309.238 451.748 308.999 451.2 308z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 39.2 309.6L 39.2 310.4L 42.4 309.6C 40.9526 309.141 40.745 309.228 39.2 309.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 145.6 308.8L 145.6 309.6L 148 309.6C 147.002 309.052 146.762 309.001 145.6 308.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 199.466 309.334C 199.422 309.378 199.378 310.222 199.734 309.866C 199.778 309.822 199.822 308.978 199.466 309.334M 221.866 309.334C 221.822 309.378 221.778 310.222 222.134 309.866C 222.178 309.822 222.222 308.978 221.866 309.334z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 295.2 308.8L 295.2 309.6L 299.2 310.4C 297.968 308.958 297.122 308.934 295.2 308.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 320 308.8L 320 309.6L 324 310.4C 322.569 309.262 321.835 309.042 320 308.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 406.4 308.8L 406.4 309.6L 408.8 309.6C 407.802 309.052 407.562 309.001 406.4 308.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 408.8 308.8L 409.6 309.6L 408.8 308.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 555.2 308.8L 555.2 319.2L 556 319.2C 556 315.79 556.529 311.967 555.2 308.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 295.2 309.6L 296 310.4L 295.2 309.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 296 309.6L 296 310.4L 298.4 310.4C 297.402 309.852 297.162 309.801 296 309.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 406.4 309.6L 407.2 310.4L 406.4 309.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 604.8 309.6L 604.8 314.4L 605.6 314.4C 605.562 312.598 605.499 311.242 604.8 309.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 158.666 310.934C 158.622 310.978 158.578 311.822 158.934 311.466C 158.978 311.422 159.022 310.578 158.666 310.934z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 159.2 310.4C 159.919 312.099 159.901 312.081 161.6 312.8C 160.718 311.634 160.366 311.282 159.2 310.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 199.2 310.4L 200 311.2L 199.2 310.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 221.866 310.934C 221.822 310.978 221.778 311.822 222.134 311.466C 222.178 311.422 222.222 310.578 221.866 310.934z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 275.2 310.4L 275.2 312L 276.8 312L 276.8 310.4L 275.2 310.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 298.4 310.4L 299.2 311.2L 298.4 310.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 451.2 310.4L 452 311.2L 451.2 310.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 42.4 311.2L 43.2 312L 42.4 311.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 43.2 311.2L 43.2 313.6L 44 313.6C 43.799 312.438 43.7478 312.198 43.2 311.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 47.2 311.2L 45.6 316C 47.4002 314.634 47.8467 313.377 47.2 311.2M 164.8 311.2L 165.6 312L 164.8 311.2M 198.666 311.734C 198.622 311.778 198.578 312.622 198.934 312.266C 198.978 312.222 199.022 311.378 198.666 311.734z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 292.8 311.2L 293.6 312L 292.8 311.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 293.6 311.2L 294.4 312L 293.6 311.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 40 312L 40.8 312.8L 40 312z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 44 312L 44 315.2C 45.4375 315.2 45.2171 315.189 46.4 314.4C 45.6219 313.384 45.0159 312.778 44 312M 141.6 312L 141.6 314.4L 142.4 314.4C 142.199 313.238 142.148 312.998 141.6 312z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 169.6 312C 170.578 312.956 170.736 313.053 172 313.6C 171.022 312.644 170.864 312.547 169.6 312z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 221.866 312.534C 221.822 312.578 221.778 313.422 222.134 313.066C 222.178 313.022 222.222 312.178 221.866 312.534z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 224 312L 224 312.8L 227.2 313.6C 226.149 312.306 225.698 312.246 224 312z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 227.2 312L 227.2 315.2L 228 315.2C 227.861 313.852 227.746 313.205 227.2 312z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 292.8 312L 293.6 312.8L 292.8 312z\" />\r\n            <path style=\"stroke:none; fill:#23799f\"\r\n                d=\"M 296.8 312L 297.6 312.8L 296.8 312z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 302.134 312.266C 301.778 312.622 302.622 312.578 302.666 312.534C 303.022 312.178 302.178 312.222 302.134 312.266z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 311.2 312L 312 312.8L 311.2 312z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 404.534 312.266C 404.178 312.622 405.022 312.578 405.066 312.534C 405.422 312.178 404.578 312.222 404.534 312.266M 602.134 312.266C 601.778 312.622 602.622 312.578 602.666 312.534C 603.022 312.178 602.178 312.222 602.134 312.266z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 31.7334 313.066C 31.3778 313.422 32.2222 313.378 32.2666 313.334C 32.6222 312.978 31.7778 313.022 31.7334 313.066z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 36 313.6L 36 314.4L 39.2 313.6C 37.8726 313.275 37.4066 313.353 36 313.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 39.2 312.8C 37.7153 313.638 36.8446 314.01 35.2 314.4L 35.2 315.2C 37.1875 315.106 39.5902 315.167 39.2 312.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 74.1334 313.066C 73.7778 313.422 74.6222 313.378 74.6666 313.334C 75.0222 312.978 74.1778 313.022 74.1334 313.066z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 225.6 312.8L 226.4 313.6L 225.6 312.8M 292.266 313.334C 292.222 313.378 292.178 314.222 292.534 313.866C 292.578 313.822 292.622 312.978 292.266 313.334z\" />\r\n            <path style=\"stroke:none; fill:#68aac6\"\r\n                d=\"M 297.6 312.8L 298.4 313.6L 297.6 312.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 298.4 312.8L 299.2 313.6L 298.4 312.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 302.4 312.8L 302.4 313.6L 304.8 313.6C 303.802 313.052 303.562 313.001 302.4 312.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 403.466 313.334C 403.422 313.378 403.378 314.222 403.734 313.866C 403.778 313.822 403.822 312.978 403.466 313.334z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 601.334 313.066C 600.978 313.422 601.822 313.378 601.866 313.334C 602.222 312.978 601.378 313.022 601.334 313.066M 43.2 313.6L 43.2 316L 44 316C 43.799 314.838 43.7478 314.598 43.2 313.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 47.4666 314.134C 47.4222 314.178 47.3778 315.022 47.7334 314.666C 47.7778 314.622 47.8222 313.778 47.4666 314.134z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 74.9334 313.866C 74.5778 314.222 75.4222 314.178 75.4666 314.134C 75.8223 313.778 74.9778 313.822 74.9334 313.866z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 172.534 313.866C 172.178 314.222 173.022 314.178 173.066 314.134C 173.422 313.778 172.578 313.822 172.534 313.866z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 226.4 313.6L 227.2 314.4L 226.4 313.6M 304.8 313.6L 305.6 314.4L 304.8 313.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 305.6 313.6L 306.4 314.4L 305.6 313.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 310.4 313.6L 311.2 314.4L 310.4 313.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 589.6 313.6L 589.6 314.4L 593.6 314.4C 592.185 313.777 591.171 313.67 589.6 313.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 593.6 313.6C 595.418 315.681 598.155 315.198 600.8 315.2L 600.8 314.4L 593.6 313.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 600.534 313.866C 600.178 314.222 601.022 314.178 601.066 314.134C 601.422 313.778 600.578 313.822 600.534 313.866z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 34.1334 314.666C 33.7778 315.022 34.6222 314.978 34.6666 314.934C 35.0222 314.578 34.1778 314.622 34.1334 314.666z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 76 314.4L 76.8 315.2L 76 314.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 79.4666 314.934C 79.4222 314.978 79.3778 315.822 79.7334 315.466C 79.7777 315.422 79.8222 314.578 79.4666 314.934M 142.4 314.4L 143.2 315.2L 142.4 314.4M 400.266 314.934C 400.222 314.978 400.178 315.822 400.534 315.466C 400.578 315.422 400.622 314.578 400.266 314.934z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 402.4 314.4L 403.2 315.2L 402.4 314.4M 450.4 314.4L 451.2 315.2L 450.4 314.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 585.6 320L 586.4 320L 589.6 314.4C 587.006 315.758 586.181 317.142 585.6 320z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 592.534 314.666C 592.178 315.022 593.022 314.978 593.066 314.934C 593.422 314.578 592.578 314.622 592.534 314.666z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 604 314.4L 604.8 315.2L 604 314.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 32.5334 315.466C 32.1778 315.822 33.0222 315.778 33.0666 315.734C 33.4222 315.378 32.5778 315.422 32.5334 315.466M 44.5334 315.466C 44.1778 315.822 45.0222 315.778 45.0666 315.734C 45.4222 315.378 44.5778 315.422 44.5334 315.466z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 451.2 315.2L 452 316L 451.2 315.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 597.334 315.466C 596.978 315.822 597.822 315.778 597.866 315.734C 598.222 315.378 597.378 315.422 597.334 315.466z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 603.2 315.2L 604 316L 603.2 315.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 28.8 318.4C 30.6379 317.861 31.0193 317.628 32 316C 30.4411 316.749 29.9598 317.114 28.8 318.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 32.2666 316.534C 32.2222 316.578 32.1778 317.422 32.5334 317.066C 32.5778 317.022 32.6222 316.178 32.2666 316.534z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 44 316L 44 316.8L 46.4 316.8C 45.4014 316.252 45.1612 316.201 44 316z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 145.6 316L 146.4 316.8L 145.6 316z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 172 316L 172.8 316.8L 172 316z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 175.2 316L 176 316.8L 175.2 316z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 196.8 316C 197.221 318.034 197.502 318.828 199.2 320C 198.514 318.43 197.893 317.305 196.8 316z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 227.2 316L 228 316.8L 227.2 316z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 305.6 316L 306.4 316.8L 305.6 316z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 456.534 316.266C 456.178 316.622 457.022 316.578 457.066 316.534C 457.422 316.178 456.578 316.222 456.534 316.266z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 144.8 316.8L 145.6 317.6L 144.8 316.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 176.8 316.8C 177.778 317.756 177.936 317.853 179.2 318.4C 178.222 317.444 178.064 317.347 176.8 316.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 224.8 316.8L 225.6 320L 226.4 320C 225.949 318.598 225.665 317.966 224.8 316.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 228.266 317.334C 228.222 317.378 228.178 318.222 228.534 317.866C 228.578 317.822 228.622 316.978 228.266 317.334z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 286.4 316.8L 286.4 321.6L 287.2 321.6L 288 316.8L 286.4 316.8M 306.4 316.8L 306.4 317.6L 309.6 317.6C 308.395 317.054 307.748 316.939 306.4 316.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 399.2 316.8L 400 317.6L 399.2 316.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 456.8 316.8C 457.682 317.966 458.034 318.318 459.2 319.2C 458.481 317.501 458.499 317.519 456.8 316.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 563.2 316.8L 563.2 317.6L 566.4 317.6C 565.195 317.054 564.548 316.939 563.2 316.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 590.4 316.8L 591.2 317.6L 590.4 316.8M 594.134 317.066C 593.778 317.422 594.622 317.378 594.666 317.334C 595.022 316.978 594.178 317.022 594.134 317.066z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 77.6 317.6L 77.6 320L 78.4 320C 78.199 318.838 78.1478 318.598 77.6 317.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 172.8 317.6L 173.6 318.4L 172.8 317.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 200.8 317.6C 201.347 318.864 201.444 319.022 202.4 320C 201.853 318.736 201.756 318.578 200.8 317.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 287.2 317.6L 288 318.4L 287.2 317.6M 291.734 317.866C 291.378 318.222 292.222 318.178 292.266 318.134C 292.622 317.778 291.778 317.822 291.734 317.866z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 567.2 317.6L 568 318.4L 567.2 317.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 589.866 318.134C 589.822 318.178 589.778 319.022 590.134 318.666C 590.178 318.622 590.222 317.778 589.866 318.134z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 27.2 319.2L 27.2 320L 30.4 319.2C 28.9526 318.741 28.745 318.828 27.2 319.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 144 318.4L 144 321.6L 144.8 321.6C 144.661 320.252 144.546 319.605 144 318.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 172 318.4L 172.8 319.2L 172 318.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 179.734 318.666C 179.378 319.022 180.222 318.978 180.266 318.934C 180.622 318.578 179.778 318.622 179.734 318.666z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 181.334 318.666C 180.978 319.022 181.822 318.978 181.866 318.934C 182.222 318.578 181.378 318.622 181.334 318.666z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 228 318.4L 228 321.6L 228.8 321.6C 228.661 320.252 228.546 319.605 228 318.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 290.134 318.666C 289.778 319.022 290.622 318.978 290.666 318.934C 291.022 318.578 290.178 318.622 290.134 318.666z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 559.2 318.4L 560 319.2L 559.2 318.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 560.534 318.666C 560.178 319.022 561.022 318.978 561.066 318.934C 561.422 318.578 560.578 318.622 560.534 318.666z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 586.4 318.4L 587.2 319.2L 586.4 318.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 22.1334 319.466C 21.7778 319.822 22.6222 319.778 22.6666 319.734C 23.0222 319.378 22.1778 319.422 22.1334 319.466z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 78.4 319.2L 79.2 320L 78.4 319.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 175.2 319.2L 176 320L 175.2 319.2M 182.134 319.466C 181.778 319.822 182.622 319.778 182.666 319.734C 183.022 319.378 182.178 319.422 182.134 319.466z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 200.8 319.2L 201.6 320L 200.8 319.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 459.466 319.734C 459.422 319.778 459.378 320.622 459.734 320.266C 459.778 320.222 459.822 319.378 459.466 319.734M 556.534 319.466C 556.178 319.822 557.022 319.778 557.066 319.734C 557.422 319.378 556.578 319.422 556.534 319.466z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 584.8 319.2L 584.8 321.6L 585.6 321.6C 585.399 320.438 585.348 320.199 584.8 319.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 588.8 319.2C 588.011 320.383 588 320.162 588 321.6C 589.031 320.446 589.121 320.613 588.8 319.2M 21.0666 320.534C 21.0222 320.578 20.9778 321.422 21.3334 321.066C 21.3778 321.022 21.4222 320.178 21.0666 320.534z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 78.9334 320.266C 78.5778 320.622 79.4222 320.578 79.4666 320.534C 79.8222 320.178 78.9778 320.222 78.9334 320.266z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 167.2 326.4L 168 326.4L 171.2 320C 168.24 321.492 167.446 323.129 167.2 326.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 189.6 320C 190.664 321.402 191.398 322.136 192.8 323.2C 192.024 321.206 191.62 320.683 189.6 320z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 201.6 320L 202.4 320.8L 201.6 320z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 78.4 320.8C 79.2828 321.966 79.6346 322.318 80.8 323.2C 80.4144 321.309 80.2912 321.186 78.4 320.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 202.4 320.8L 203.2 321.6L 202.4 320.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 228.8 320.8L 228.8 323.2L 229.6 323.2C 229.399 322.038 229.348 321.798 228.8 320.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 400 320.8L 400.8 321.6L 400 320.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 565.6 320.8L 565.6 324.8L 569.6 324.8L 569.6 324L 566.4 324C 566.261 322.652 566.146 322.005 565.6 320.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 184.8 321.6L 184.8 322.4L 188 322.4C 186.795 321.854 186.148 321.739 184.8 321.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 202.4 321.6L 203.2 322.4L 202.4 321.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 400 321.6L 400.8 322.4L 400 321.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 460.266 322.134C 460.222 322.178 460.178 323.022 460.534 322.666C 460.578 322.622 460.622 321.778 460.266 322.134M 564.8 321.6L 564.8 324.8L 565.6 324.8C 565.461 323.452 565.346 322.805 564.8 321.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 571.734 321.866C 571.378 322.222 572.222 322.178 572.266 322.134C 572.622 321.778 571.778 321.822 571.734 321.866z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 572.8 321.6L 572.8 322.4L 576 322.4C 574.795 321.854 574.148 321.739 572.8 321.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 584.266 322.134C 584.222 322.178 584.178 323.022 584.534 322.666C 584.578 322.622 584.622 321.778 584.266 322.134z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 587.2 321.6L 588 322.4L 587.2 321.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 22.4 322.4L 22.4 324.8L 23.2 324.8C 22.999 323.638 22.9478 323.398 22.4 322.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 81.0664 322.934C 81.0224 322.978 80.9776 323.822 81.3336 323.466C 81.3776 323.422 81.4224 322.578 81.0664 322.934z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 144.8 322.4L 145.6 323.2L 144.8 322.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 184 322.4L 184 323.2L 188 323.2C 186.585 322.577 185.571 322.47 184 322.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 203.2 322.4L 204 323.2L 203.2 322.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 577.334 322.666C 576.978 323.022 577.822 322.978 577.866 322.934C 578.222 322.578 577.378 322.622 577.334 322.666z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 148 323.2L 148.8 324L 148 323.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 192 323.2L 192.8 324L 192 323.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 203.2 323.2L 204 324L 203.2 323.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 226.4 323.2L 226.4 325.6L 227.2 325.6C 226.999 324.438 226.948 324.198 226.4 323.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 288 323.2L 288 325.6L 288.8 325.6C 288.599 324.438 288.548 324.198 288 323.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 400.8 323.2L 401.6 324L 400.8 323.2M 464.8 323.2L 464.8 324L 467.2 324C 466.202 323.452 465.962 323.401 464.8 323.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 578.134 323.466C 577.778 323.822 578.622 323.778 578.666 323.734C 579.022 323.378 578.178 323.422 578.134 323.466z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 584 323.2L 584 325.6L 584.8 325.6C 584.599 324.438 584.548 324.198 584 323.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 23.4666 324.534C 23.4222 324.578 23.3778 325.422 23.7334 325.066C 23.7778 325.022 23.8222 324.178 23.4666 324.534z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 81.6 324L 82.4 324.8L 81.6 324z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 149.066 324.534C 149.022 324.578 148.978 325.422 149.334 325.066C 149.378 325.022 149.422 324.178 149.066 324.534z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 168.8 324C 168.011 325.183 168 324.962 168 326.4C 169.031 325.246 169.121 325.413 168.8 324z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 192.8 324L 193.6 324.8L 192.8 324z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 204 324L 204.8 324.8L 204 324z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 401.866 324.534C 401.822 324.578 401.778 325.422 402.134 325.066C 402.178 325.022 402.222 324.178 401.866 324.534z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 462.4 324L 463.2 324.8L 462.4 324z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 466.4 324L 466.4 324.8L 469.6 325.6L 469.6 324.8L 466.4 324z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 468.8 324C 469.682 325.166 470.034 325.518 471.2 326.4C 470.481 324.701 470.499 324.719 468.8 324z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 579.2 324L 580 324.8L 579.2 324z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 580.534 324.266C 580.178 324.622 581.022 324.578 581.066 324.534C 581.422 324.178 580.578 324.222 580.534 324.266z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 22.4 324.8L 22.4 340.8L 23.2 340.8C 23.2 335.865 24.3184 329.372 22.4 324.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 146.4 324.8L 147.2 325.6L 146.4 324.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 204.266 325.334C 204.222 325.378 204.178 326.222 204.534 325.866C 204.578 325.822 204.622 324.978 204.266 325.334M 227.466 325.334C 227.422 325.378 227.378 326.222 227.734 325.866C 227.778 325.822 227.822 324.978 227.466 325.334z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 229.6 324.8L 230.4 325.6L 229.6 324.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 580.8 324.8L 581.6 325.6L 580.8 324.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 583.2 324.8L 584 325.6L 583.2 324.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 84 325.6L 84.8 326.4L 84 325.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 163.2 325.6L 164 326.4L 163.2 325.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 164 325.6L 164 329.6L 164.8 329.6L 165.6 325.6L 164 325.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 230.934 325.866C 230.578 326.222 231.422 326.178 231.466 326.134C 231.822 325.778 230.978 325.822 230.934 325.866z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 402.4 325.6L 403.2 326.4L 402.4 325.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 471.466 326.134C 471.422 326.178 471.378 327.022 471.734 326.666C 471.778 326.622 471.822 325.778 471.466 326.134z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 581.6 325.6L 582.4 326.4L 581.6 325.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 583.466 326.134C 583.422 326.178 583.378 327.022 583.734 326.666C 583.778 326.622 583.822 325.778 583.466 326.134z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 84.8 326.4L 85.6 327.2L 84.8 326.4M 163.2 326.4L 163.2 329.6L 164 329.6C 163.861 328.252 163.746 327.605 163.2 326.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 204.266 326.934C 204.222 326.978 204.178 327.822 204.534 327.466C 204.578 327.422 204.622 326.578 204.266 326.934z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 232.534 326.666C 232.178 327.022 233.022 326.978 233.066 326.934C 233.422 326.578 232.578 326.622 232.534 326.666M 470.4 326.4L 471.2 327.2L 470.4 326.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 20 327.2L 20 330.4L 20.8 330.4C 20.6607 329.052 20.5465 328.405 20 327.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 85.6 327.2L 86.4 328L 85.6 327.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 234.4 327.2L 235.2 328L 234.4 327.2M 285.6 327.2L 285.6 329.6L 286.4 329.6C 286.199 328.438 286.148 328.198 285.6 327.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 471.2 327.2L 471.2 330.4L 472 330.4C 471.861 329.052 471.746 328.405 471.2 327.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 86.4 328L 87.2 328.8L 86.4 328z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 89.6 328L 90.4 328.8L 89.6 328z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 203.2 328L 204 328.8L 203.2 328z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 236 328L 236.8 328.8L 236 328z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 194.4 328.8L 195.2 329.6L 194.4 328.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 236.8 328.8L 236.8 329.6L 239.2 329.6C 238.202 329.052 237.962 329.001 236.8 328.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 582.666 329.334C 582.622 329.378 582.578 330.222 582.934 329.866C 582.978 329.822 583.022 328.978 582.666 329.334z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 584.8 328.8L 584.8 332L 585.6 332C 585.461 330.652 585.346 330.005 584.8 328.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 92 329.6L 92.8 330.4L 92 329.6M 147.2 329.6L 148 330.4L 147.2 329.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 163.2 329.6L 164 330.4L 163.2 329.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 164.266 330.134C 164.222 330.178 164.178 331.022 164.534 330.666C 164.578 330.622 164.622 329.778 164.266 330.134z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 166.4 329.6L 167.2 330.4L 166.4 329.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 195.2 329.6C 195.636 330.908 195.492 330.764 196.8 331.2L 196.8 329.6L 195.2 329.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 239.2 329.6C 240.178 330.556 240.336 330.653 241.6 331.2C 240.816 329.774 240.874 329.925 239.2 329.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 284.8 329.6L 284.8 331.2C 286.108 330.764 285.964 330.908 286.4 329.6L 284.8 329.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 402.4 329.6L 402.4 332L 403.2 332C 402.999 330.838 402.948 330.598 402.4 329.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 468.8 329.6L 468.8 332.8L 469.6 332.8C 469.461 331.452 469.346 330.805 468.8 329.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 146.4 330.4L 147.2 331.2L 146.4 330.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 167.2 330.4L 168 331.2L 167.2 330.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 196.8 330.4L 196.8 331.2L 199.2 331.2C 198.202 330.652 197.962 330.601 196.8 330.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 199.734 330.666C 199.378 331.022 200.222 330.978 200.266 330.934C 200.622 330.578 199.778 330.622 199.734 330.666z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 284.266 330.934C 284.222 330.978 284.178 331.822 284.534 331.466C 284.578 331.422 284.622 330.578 284.266 330.934z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 334.4 331.2L 334.4 332L 337.6 331.2C 336.273 330.875 335.806 330.953 334.4 331.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 468 330.4C 468.141 331.902 468.35 332.959 468.8 334.4L 469.6 334.4C 469.216 332.832 468.85 331.754 468 330.4M 471.2 330.4L 471.2 332.8L 472 332.8C 471.799 331.638 471.748 331.398 471.2 330.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 145.334 331.466C 144.978 331.822 145.822 331.778 145.866 331.734C 146.222 331.378 145.378 331.422 145.334 331.466z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 164.8 331.2L 165.6 332L 164.8 331.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 198.934 331.466C 198.578 331.822 199.422 331.778 199.466 331.734C 199.822 331.378 198.978 331.422 198.934 331.466z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 240 331.2L 240.8 332L 240 331.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 241.066 331.734C 241.022 331.778 240.978 332.622 241.334 332.266C 241.378 332.222 241.422 331.378 241.066 331.734z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 580.8 331.2L 581.6 332L 580.8 331.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 92 332L 92.8 332.8L 92 332z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 143.2 334.4C 144.366 333.518 144.718 333.166 145.6 332C 143.901 332.719 143.919 332.701 143.2 334.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 283.2 332L 284 332.8L 283.2 332z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 578.134 332.266C 577.778 332.622 578.622 332.578 578.666 332.534C 579.022 332.178 578.178 332.222 578.134 332.266z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 579.2 332L 579.2 333.6C 580.508 333.164 580.364 333.308 580.8 332L 579.2 332z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 23.2 332.8C 23.1973 336.324 22.8617 339.107 21.6 342.4C 24.244 339.81 24.6297 336.207 23.2 332.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 92 334.4L 94.4 334.4L 93.6 332.8C 92.292 333.236 92.436 333.092 92 334.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 93.6 332.8L 94.4 333.6L 93.6 332.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 102.934 333.066C 102.578 333.422 103.422 333.378 103.466 333.334C 103.822 332.978 102.978 333.022 102.934 333.066z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 282.4 332.8L 283.2 333.6L 282.4 332.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 326.4 333.6L 326.4 334.4L 329.6 333.6C 328.273 333.275 327.806 333.353 326.4 333.6M 400.534 333.066C 400.178 333.422 401.022 333.378 401.066 333.334C 401.422 332.978 400.578 333.022 400.534 333.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 404 332.8L 404 335.2L 404.8 335.2C 404.599 334.038 404.548 333.798 404 332.8M 572 334.4L 572 335.2C 573.5 334.762 574.604 334.312 576 333.6C 574.288 333.272 573.63 333.626 572 334.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 576 332.8L 576 333.6L 579.2 333.6C 577.995 333.054 577.348 332.939 576 332.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 583.2 332.8L 584 333.6L 583.2 332.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 97.6 333.6L 98.4 334.4L 97.6 333.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 98.9336 333.866C 98.5776 334.222 99.4224 334.178 99.4664 334.134C 99.8224 333.778 98.9776 333.822 98.9336 333.866z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 104 333.6C 104.436 334.908 104.292 334.764 105.6 335.2L 105.6 333.6L 104 333.6M 142.666 334.134C 142.622 334.178 142.578 335.022 142.934 334.666C 142.978 334.622 143.022 333.778 142.666 334.134z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 471.2 333.6L 468.8 339.2C 471.267 337.906 472.245 336.283 471.2 333.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 472 333.6L 472 337.6L 472.8 337.6C 472.73 336.029 472.623 335.015 472 333.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 20 334.4L 20 336.8L 20.8 336.8C 20.599 335.638 20.5478 335.398 20 334.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 166.4 334.4C 165.329 337.762 163.21 340.554 162.4 344C 165.312 341.807 167.866 338.024 166.4 334.4M 402.934 334.666C 402.578 335.022 403.422 334.978 403.466 334.934C 403.822 334.578 402.978 334.622 402.934 334.666z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 140.8 335.2L 141.6 336L 140.8 335.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 141.6 335.2L 142.4 336L 141.6 335.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 165.866 335.734C 165.822 335.778 165.778 336.622 166.134 336.266C 166.178 336.222 166.222 335.378 165.866 335.734z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 278.4 335.2L 279.2 336L 278.4 335.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 282.4 335.2L 283.2 336L 282.4 335.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 394.4 335.2L 394.4 336L 396.8 336C 395.802 335.452 395.562 335.401 394.4 335.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 396.8 335.2L 396.8 336L 402.4 336C 400.534 335.212 398.834 335.215 396.8 335.2z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 470.4 335.2L 471.2 336L 470.4 335.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 576.8 335.2L 576.8 336L 579.2 336C 578.202 335.452 577.962 335.401 576.8 335.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 140.8 336L 141.6 336.8L 140.8 336z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 164.8 336L 164.8 338.4L 165.6 338.4C 165.399 337.238 165.348 336.998 164.8 336z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 238.666 336.534C 238.622 336.578 238.578 337.422 238.934 337.066C 238.978 337.022 239.022 336.178 238.666 336.534z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 244.534 336.266C 244.178 336.622 245.022 336.578 245.066 336.534C 245.422 336.178 244.578 336.222 244.534 336.266z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 245.6 336L 246.4 336.8L 245.6 336z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 246.4 336L 246.4 339.2L 247.2 339.2C 247.061 337.852 246.946 337.205 246.4 336z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 276.8 336L 276.8 337.6C 278.108 337.164 277.964 337.308 278.4 336L 276.8 336z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 280.8 336L 281.6 336.8L 280.8 336z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 393.6 336L 393.6 338.4L 394.4 338.4C 394.199 337.238 394.148 336.998 393.6 336z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 571.2 336L 572 336.8L 571.2 336z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 575.734 336.266C 575.378 336.622 576.222 336.578 576.266 336.534C 576.622 336.178 575.778 336.222 575.734 336.266z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 577.334 336.266C 576.978 336.622 577.822 336.578 577.866 336.534C 578.222 336.178 577.378 336.222 577.334 336.266z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 239.466 337.334C 239.422 337.378 239.378 338.222 239.734 337.866C 239.778 337.822 239.822 336.978 239.466 337.334z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 242.4 336.8L 243.2 337.6L 242.4 336.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 243.2 336.8L 243.2 337.6C 244.899 338.319 244.881 338.301 245.6 340L 246.4 340L 246.4 336.8L 243.2 336.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 108 337.6L 108 338.4L 114.4 340.8C 112.478 338.49 110.993 337.824 108 337.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 277.066 338.134C 277.022 338.178 276.978 339.022 277.334 338.666C 277.378 338.622 277.422 337.778 277.066 338.134z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 470.4 337.6L 470.4 339.2C 471.708 338.764 471.564 338.908 472 337.6L 470.4 337.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 164 338.4L 164.8 339.2L 164 338.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 240 338.4L 240.8 339.2L 240 338.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 374.4 338.4L 374.4 339.2L 377.6 339.2C 376.395 338.654 375.748 338.539 374.4 338.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 377.6 338.4L 378.4 339.2L 377.6 338.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 572.8 338.4L 573.6 339.2L 572.8 338.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 140.534 339.466C 140.178 339.822 141.022 339.778 141.066 339.734C 141.422 339.378 140.578 339.422 140.534 339.466z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 373.6 339.2L 374.4 340L 373.6 339.2M 378.4 339.2L 379.2 340L 378.4 339.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 467.2 340.8C 468.464 340.254 468.622 340.156 469.6 339.2C 468.336 339.747 468.178 339.844 467.2 340.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 570.4 339.2L 569.6 342.4L 570.4 342.4C 570.647 340.994 570.725 340.527 570.4 339.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 138.4 340L 139.2 340.8L 138.4 340M 163.2 340L 164 340.8L 163.2 340z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 243.2 340L 243.2 344.8L 244 344.8C 243.962 342.998 243.899 341.642 243.2 340z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 278.4 340L 279.2 340.8L 278.4 340M 372.8 340L 373.6 340.8L 372.8 340M 379.2 340L 380 340.8L 379.2 340z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 393.066 340.534C 393.022 340.578 392.978 341.422 393.334 341.066C 393.378 341.022 393.422 340.178 393.066 340.534M 23.2 340.8L 24 341.6L 23.2 340.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 114.4 340.8L 115.2 341.6L 114.4 340.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 137.6 340.8L 138.4 341.6L 137.6 340.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 162.4 340.8L 163.2 341.6L 162.4 340.8z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 376 340.8C 366.594 350.471 359.896 356.107 347.064 360.818C 340.582 363.198 334.958 358.707 328.411 364.478C 324.534 367.896 309.19 378.596 318.4 384L 317.6 381.6C 320.201 380.959 323.734 379.74 326.388 380.554C 330.232 381.734 331.965 386.13 336.001 387.354C 342.376 389.286 355.932 382.946 359.31 391.215C 361.574 396.756 354.679 407.104 354.4 413.6C 357.295 411.181 357.427 409.209 356.8 405.6C 360.999 406.814 362.052 412.292 366.381 412.635C 370.293 412.946 374.714 404.578 377.918 407.002C 381.618 409.799 375.95 420.248 380.986 421.21C 385.254 422.026 399.626 420.905 402.342 417.01C 405.657 412.256 396.514 405.225 408 406.4L 408 411.2C 412.93 411.186 419.742 410.167 423.542 406.638C 430.004 400.639 427.196 393.936 438.4 395.2C 437.354 391.578 433.487 377.769 429.779 380.498C 427.162 382.424 427.642 390.234 423.923 390.234C 421.546 390.234 419.762 386.446 418.627 384.8C 414.454 378.749 405.942 372.583 404 365.6C 396.412 365.715 398.409 359.278 394.422 354.882C 392.69 352.974 389.653 354.005 387.706 352.318C 383.363 348.55 381.322 343.864 376 340.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 380 340.8L 380.8 341.6L 380 340.8M 392 340.8L 392.8 341.6L 392 340.8M 15.2 341.6L 14.4 345.6C 16.2626 346.546 18.009 347.378 20 348C 18.4338 345.827 17.222 344.274 16.8 341.6L 15.2 341.6M 18.4 342.4L 18.4 343.2L 21.6 342.4C 20.2726 342.075 19.8066 342.153 18.4 342.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 22.4 341.6C 21.0042 342.312 19.9 342.762 18.4 343.2L 18.4 344C 20.1362 343.81 23.2289 343.682 22.4 341.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 115.2 341.6L 116 342.4L 115.2 341.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 136.534 341.866C 136.178 342.222 137.022 342.178 137.066 342.134C 137.422 341.778 136.578 341.822 136.534 341.866M 161.6 341.6L 161.6 344.8L 162.4 344.8C 162.261 343.452 162.146 342.805 161.6 341.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 380.8 341.6L 381.6 342.4L 380.8 341.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 392 341.6L 392.8 342.4L 392 341.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 392.8 341.6L 393.6 342.4L 392.8 341.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 466.4 341.6L 467.2 342.4L 466.4 341.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 14.4 342.4L 14.4 344.8L 15.2 344.8C 14.999 343.638 14.9478 343.398 14.4 342.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 116 342.4L 116.8 343.2L 116 342.4M 128.266 342.934C 128.222 342.978 128.178 343.822 128.534 343.466C 128.578 343.422 128.622 342.578 128.266 342.934z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 134.934 342.666C 134.578 343.022 135.422 342.978 135.466 342.934C 135.822 342.578 134.978 342.622 134.934 342.666z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 276.8 342.4L 277.6 343.2L 276.8 342.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 392.266 342.934C 392.222 342.978 392.178 343.822 392.534 343.466C 392.578 343.422 392.622 342.578 392.266 342.934z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 568.8 342.4C 567.851 343.349 567.533 343.622 566.4 344L 566.4 344.8C 568.278 344.565 569.561 344.406 568.8 342.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 574.4 342.4L 574.4 343.2L 576.8 343.2C 575.802 342.652 575.562 342.601 574.4 342.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 13.6 343.2L 13.6 346.4L 14.4 346.4C 14.2607 345.052 14.1465 344.405 13.6 343.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 20.8 343.2L 21.6 344L 20.8 343.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 116.8 343.2L 116.8 344L 120.8 345.6C 120.277 343.157 119.194 343.251 116.8 343.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 276 343.2L 275.2 344.8C 276.21 344.023 276.314 344.245 276 343.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 373.066 343.734C 373.022 343.778 372.978 344.622 373.334 344.266C 373.378 344.222 373.422 343.378 373.066 343.734z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 465.6 343.2L 466.4 344L 465.6 343.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 536 343.2L 536 344L 540 344C 538.585 343.377 537.571 343.27 536 343.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 576.534 343.466C 576.178 343.822 577.022 343.778 577.066 343.734C 577.422 343.378 576.578 343.422 576.534 343.466z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 162.4 344L 163.2 344.8L 162.4 344z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 165.6 344L 165.6 348L 166.4 348C 166.33 346.429 166.223 345.415 165.6 344z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 245.6 344L 246.4 344.8L 245.6 344z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 269.6 344L 270.4 344.8L 269.6 344z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 274.4 344L 275.2 344.8L 274.4 344z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 276 344L 276.8 344.8L 276 344z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 464.8 344L 464 347.2C 465.286 346.04 465.651 345.558 466.4 344L 464.8 344z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 536 344L 536 348L 536.8 348C 537.339 346.162 537.572 345.781 539.2 344.8C 537.995 344.254 537.348 344.139 536 344z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 541.334 344.266C 540.978 344.622 541.822 344.578 541.866 344.534C 542.222 344.178 541.378 344.222 541.334 344.266z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 561.6 344L 561.6 344.8L 566.4 344.8C 564.758 344.101 563.402 344.038 561.6 344z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 577.6 344L 578.4 344.8L 577.6 344z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 164.8 344.8L 164.8 349.6L 165.6 349.6C 165.562 347.798 165.499 346.442 164.8 344.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 166.4 344.8L 166.4 347.2L 167.2 347.2C 166.999 346.038 166.948 345.798 166.4 344.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 246.4 344.8L 247.2 345.6L 246.4 344.8M 268 344.8L 268 346.4C 269.308 345.964 269.164 346.108 269.6 344.8L 268 344.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 272.8 344.8L 273.6 345.6L 272.8 344.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 372 344.8L 372.8 345.6L 372 344.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 560.534 345.066C 560.178 345.422 561.022 345.378 561.066 345.334C 561.422 344.978 560.578 345.022 560.534 345.066z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 572 344.8L 572 345.6L 574.4 345.6C 573.402 345.052 573.162 345.001 572 344.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 578.4 344.8L 579.2 345.6L 578.4 344.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 14.4 345.6C 15.3782 346.556 15.536 346.653 16.8 347.2C 15.8218 346.244 15.664 346.147 14.4 345.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 271.2 345.6L 272 346.4L 271.2 345.6z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 568 354.4C 569.799 355.323 570.277 355.801 571.2 357.6C 564.276 358.695 566.956 364.868 563.288 369.021C 560.398 372.294 555.662 371.063 552.004 370.153C 549.674 369.573 548.467 369.223 547.2 367.2C 538.385 369.581 542.539 372.863 545.614 377.706C 547.061 379.986 547.316 383.514 550.392 384.402C 553.198 385.212 559.298 378.217 563.2 377.6C 561.755 380.178 560.295 382.525 558.4 384.8C 562.971 386.044 568.721 383.558 572.717 381.155C 574.349 380.173 576.233 377.164 578.365 377.534C 581.907 378.148 580.046 383.88 582.082 385.918C 585.162 388.995 592.434 386.522 596 385.6C 594.225 381.865 590.378 378.429 589.45 374.404C 586.36 361.014 607.46 369.451 612 370.4C 608.128 366.658 601.669 365.51 596.8 363.28C 591.967 361.066 587.683 357.367 583.271 354.465C 580.094 352.374 577.67 346.842 573.634 346.337C 569.89 345.868 568.477 351.728 568 354.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 21.6 346.4L 22.4 347.2L 21.6 346.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 247.2 346.4L 248 347.2L 247.2 346.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 270.4 346.4L 271.2 347.2L 270.4 346.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 383.2 346.4L 384 347.2L 383.2 346.4M 388.8 346.4L 389.6 347.2L 388.8 346.4z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 539.2 346.4C 541.078 349.358 543.137 350.777 546.4 352C 545.066 355.13 544.428 358.234 544 361.6C 546.149 361.199 548.216 360.894 550.4 360.8L 550.4 366.4C 556.786 369.147 563.453 368.546 561.6 360C 566.463 357.322 566.366 351.146 568.8 346.4C 566.559 346.406 563.829 346.098 561.839 347.342C 559.55 348.774 559.058 351.993 555.985 352.311C 550.204 352.91 544.922 346.99 539.2 346.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 542.4 346.4L 543.2 347.2L 542.4 346.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 16 347.2L 16 348L 18.4 348C 17.4014 347.452 17.1612 347.401 16 347.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 21.6 347.2L 22.4 348L 21.6 347.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 22.4 347.2L 22.4 348.8L 24 348.8C 23.564 347.492 23.7081 347.636 22.4 347.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 267.2 347.2L 267.2 353.6L 268 353.6C 267.994 351.331 268.078 349.29 267.2 347.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 366.134 347.466C 365.778 347.822 366.622 347.778 366.666 347.734C 367.022 347.378 366.178 347.422 366.134 347.466z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 384 347.2L 384.8 348L 384 347.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 460 347.2L 460.8 348L 460 347.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 544 347.2L 544.8 348L 544 347.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 544.8 347.2C 545.96 348.486 546.441 348.851 548 349.6C 546.84 348.314 546.359 347.949 544.8 347.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 19.2 348L 20 348.8L 19.2 348z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 119.2 348L 120 348.8L 119.2 348z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 125.866 348.534C 125.822 348.578 125.778 349.422 126.134 349.066C 126.178 349.022 126.222 348.178 125.866 348.534z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 162.4 348L 162.4 351.2L 163.2 351.2C 163.061 349.852 162.946 349.205 162.4 348z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 266.4 348L 266.4 352L 267.2 352C 267.13 350.429 267.023 349.415 266.4 348z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 364 348L 364.8 348.8L 364 348z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 384.8 348L 385.6 348.8L 384.8 348z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 457.6 349.6C 458.864 349.054 459.022 348.956 460 348C 458.736 348.547 458.578 348.644 457.6 349.6M 536.8 348L 537.6 348.8L 536.8 348z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 547.2 348L 548 348.8L 547.2 348z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 548 348L 548 349.6L 549.6 349.6C 549.164 348.292 549.308 348.436 548 348z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 559.466 348.534C 559.422 348.578 559.378 349.422 559.734 349.066C 559.778 349.022 559.822 348.178 559.466 348.534M 567.2 348L 568 348.8L 567.2 348z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 22.4 348.8L 23.2 355.2L 24 355.2C 24.275 352.902 24.4918 351.06 24 348.8L 22.4 348.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 24 348.8L 24.8 349.6L 24 348.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 120 348.8L 120 349.6L 122.4 349.6C 121.402 349.052 121.162 349.001 120 348.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 249.066 349.334C 249.022 349.378 248.978 350.222 249.334 349.866C 249.378 349.822 249.422 348.978 249.066 349.334z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 368.8 348.8C 367.851 349.749 367.578 350.067 367.2 351.2C 368.795 350.522 369.359 350.394 368.8 348.8M 385.866 349.334C 385.822 349.378 385.778 350.222 386.134 349.866C 386.178 349.822 386.222 348.978 385.866 349.334z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 463.734 349.066C 463.378 349.422 464.222 349.378 464.266 349.334C 464.622 348.978 463.778 349.022 463.734 349.066z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 465.066 349.334C 465.022 349.378 464.978 350.222 465.334 349.866C 465.378 349.822 465.422 348.978 465.066 349.334z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 537.6 348.8L 538.4 349.6L 537.6 348.8M 549.6 348.8C 548.417 349.589 548.638 349.6 547.2 349.6L 547.2 350.4C 548.755 350.287 550.272 350.428 549.6 348.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 122.4 349.6L 123.2 350.4L 122.4 349.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 249.6 349.6L 249.6 354.4L 250.4 354.4C 250.362 352.598 250.299 351.242 249.6 349.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 366.4 349.6L 366.4 351.2C 367.708 350.764 367.564 350.908 368 349.6L 366.4 349.6M 388.266 350.134C 388.222 350.178 388.178 351.022 388.534 350.666C 388.578 350.622 388.622 349.778 388.266 350.134z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 388.8 349.6L 388.8 352L 389.6 352C 389.399 350.838 389.348 350.598 388.8 349.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 456.8 349.6L 457.6 350.4L 456.8 349.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 538.4 349.6L 539.2 350.4L 538.4 349.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 550.4 349.6L 550.4 351.2L 552 351.2L 552 349.6L 550.4 349.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 559.466 350.134C 559.422 350.178 559.378 351.022 559.734 350.666C 559.778 350.622 559.822 349.778 559.466 350.134z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 566.4 349.6L 567.2 350.4L 566.4 349.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 21.6 350.4L 21.6 355.2L 22.4 355.2C 22.5278 353.195 22.5996 352.103 21.6 350.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 124 350.4C 120.683 357.29 116.391 366.962 123.2 372.8C 113.371 375.688 119.19 380.827 117.075 388C 114.058 398.236 98.7216 420.269 111.2 429.6C 111.32 425.474 112.786 421.778 112.8 417.6L 112 417.6C 111.077 418.43 111.323 418.43 110.4 417.6L 109.6 417.6C 109.858 419.667 110.378 421.282 111.2 423.2C 106.336 418.513 110.947 409.613 112.567 404C 114.034 398.919 117.744 394.6 118.885 389.6C 119.705 386.004 118.063 381.873 119.222 378.447C 120.161 375.674 124.444 375.446 124.863 372.754C 125.246 370.302 121.932 368.991 122.203 366.491C 122.547 363.313 125.507 361.439 125.6 357.6L 124.8 357.6C 124.253 358.864 124.156 359.022 123.2 360C 123.274 356.843 124.826 353.366 124 350.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 248.8 350.4L 248.8 353.6L 249.6 353.6C 249.461 352.252 249.346 351.605 248.8 350.4M 365.6 350.4L 366.4 351.2L 365.6 350.4z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 458.4 356C 447.65 356.038 452.674 365.13 444.8 368L 444.8 374.4L 437.6 376C 437.846 374.11 438.264 372.86 439.2 371.2L 438.4 370.4C 432.855 378.517 446.441 398.409 432.8 396C 431.616 398.498 430.178 399.895 428 401.6C 429.058 412.748 413.828 414.399 405.6 414.4L 407.2 417.6C 409.426 417.244 411.36 417.362 413.6 417.6C 412.922 426.261 420.211 425.793 420.8 433.6L 417.6 434.4L 417.6 435.2C 424.046 440.156 426.359 445.926 428.157 453.6C 428.867 456.634 428.723 462.778 430.994 465.003C 432.427 466.408 434.8 466.327 436.436 465.342C 439.209 463.674 440.574 460.246 443.539 458.726C 449.129 455.86 455.586 460.923 456 466.4C 461.843 462.466 467.533 452.786 476 459.2L 476.8 459.2C 486.574 452.761 494.93 456.44 505.597 457.325C 508.959 457.603 511.192 455.014 514.412 454.933C 519.166 454.814 523.888 457.498 528.8 457.6C 530.861 452.454 533.83 453.633 538.4 452.282C 545.145 450.288 555.076 448.402 560.537 443.757C 563.793 440.986 565.08 434.245 567.002 430.4C 569.082 426.243 576.065 422.025 576.682 418.356C 578.674 406.504 570.451 409.583 564.364 403.746C 556.882 396.572 551.144 388.54 544.268 380.887C 541.398 377.693 537.374 377.478 535.2 373.6L 538.4 372.8C 538.306 370.616 538.001 368.549 537.6 366.4C 529.294 369.387 524.765 382.424 513.6 381.842C 508.65 381.585 506.938 374.959 503.186 372.597C 500.437 370.867 497.293 372.371 494.582 370.914C 489.383 368.12 487.216 361.137 480.8 358.345C 477.104 356.736 474.119 358.615 470.483 358.01C 466.523 357.35 459.245 344.928 458.4 356z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 461.6 350.4L 462.4 351.2L 461.6 350.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 539.2 350.4L 540 351.2L 539.2 350.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 552 350.4L 552 352L 553.6 352C 553.164 350.692 553.308 350.836 552 350.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 558.4 350.4L 559.2 351.2L 558.4 350.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 162.4 351.2L 163.2 352L 162.4 351.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 165.066 351.734C 165.022 351.778 164.978 352.622 165.334 352.266C 165.378 352.222 165.422 351.378 165.066 351.734z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 268 351.2C 267.55 353.62 267.251 355.938 267.2 358.4L 268 358.4C 268.61 355.834 269.026 353.666 268 351.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 389.6 351.2L 389.6 352L 392.8 352C 391.595 351.454 390.948 351.339 389.6 351.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 540 351.2L 540.8 352L 540 351.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 544.534 351.466C 544.178 351.822 545.022 351.778 545.066 351.734C 545.422 351.378 544.578 351.422 544.534 351.466z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 553.6 351.2L 554.4 352L 553.6 351.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 554.4 351.2L 554.4 352L 558.4 352C 556.985 351.377 555.971 351.27 554.4 351.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 558.4 351.2L 559.2 352L 558.4 351.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 22.4 352L 21.6 360L 22.4 360C 23.0624 357.217 23.522 354.68 22.4 352z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 24.2666 352.534C 24.2222 352.578 24.1778 353.422 24.5334 353.066C 24.5778 353.022 24.6222 352.178 24.2666 352.534z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 163.2 352L 164 352.8L 163.2 352z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 396 352L 396.8 352.8L 396 352z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 457.6 352C 456.696 353.12 455.826 353.933 455.2 355.2C 456.914 354.295 457.679 353.946 457.6 352z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 467.2 352L 468 352.8L 467.2 352z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 540.8 352L 541.6 352.8L 540.8 352z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 545.066 352.534C 545.022 352.578 544.978 353.422 545.334 353.066C 545.378 353.022 545.422 352.178 545.066 352.534z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 545.866 352.534C 545.822 352.578 545.778 353.422 546.134 353.066C 546.178 353.022 546.222 352.178 545.866 352.534z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 554.4 352L 554.4 352.8L 557.6 352.8C 556.395 352.254 555.748 352.139 554.4 352M 565.6 352L 565.6 355.2L 566.4 355.2C 566.261 353.852 566.146 353.205 565.6 352z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 580.8 352C 581.723 353.799 582.201 354.277 584 355.2C 582.936 353.798 582.202 353.064 580.8 352z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 21.0666 353.334C 21.0223 353.378 20.9778 354.222 21.3334 353.866C 21.3778 353.822 21.4222 352.978 21.0666 353.334z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 163.2 352.8L 164 353.6L 163.2 352.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 246.666 353.334C 246.622 353.378 246.578 354.222 246.934 353.866C 246.978 353.822 247.022 352.978 246.666 353.334z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 360 352.8L 360.8 353.6L 360 352.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 396.8 352.8L 397.6 353.6L 396.8 352.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 456 352.8L 456.8 353.6L 456 352.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 555.734 353.066C 555.378 353.422 556.222 353.378 556.266 353.334C 556.622 352.978 555.778 353.022 555.734 353.066z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 565.066 353.334C 565.022 353.378 564.978 354.222 565.334 353.866C 565.378 353.822 565.422 352.978 565.066 353.334z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 121.6 353.6L 121.6 358.4L 122.4 358.4C 122.362 356.598 122.299 355.242 121.6 353.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 163.2 353.6L 164 354.4L 163.2 353.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 164 353.6L 164 356L 164.8 356C 164.599 354.838 164.548 354.598 164 353.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 248.8 353.6L 249.6 354.4L 248.8 353.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 359.2 353.6L 360 354.4L 359.2 353.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 450.934 353.866C 450.578 354.222 451.422 354.178 451.466 354.134C 451.822 353.778 450.978 353.822 450.934 353.866M 457.6 353.6C 456.651 354.549 456.378 354.867 456 356C 457.801 355.622 458.494 355.312 457.6 353.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 541.866 354.134C 541.822 354.178 541.778 355.022 542.134 354.666C 542.178 354.622 542.222 353.778 541.866 354.134z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 542.4 353.6L 542.4 356L 543.2 356C 542.999 354.838 542.948 354.598 542.4 353.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 544.8 353.6L 545.6 354.4L 544.8 353.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 583.2 353.6L 584 354.4L 583.2 353.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 587.734 353.866C 587.378 354.222 588.222 354.178 588.266 354.134C 588.622 353.778 587.778 353.822 587.734 353.866M 120.8 354.4L 120.8 357.6L 121.6 357.6C 121.461 356.252 121.346 355.605 120.8 354.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 246.4 354.4L 246.4 359.2L 247.2 359.2C 247.162 357.398 247.099 356.042 246.4 354.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 356.8 354.4L 356.8 355.2L 359.2 355.2C 358.202 354.652 357.962 354.601 356.8 354.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 395.2 354.4L 396 355.2L 395.2 354.4M 449.6 354.4L 450.4 355.2L 449.6 354.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 478.4 354.4L 478.4 355.2L 480.8 355.2C 479.802 354.652 479.562 354.601 478.4 354.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 568 354.4L 568 355.2L 570.4 356C 569.616 354.574 569.674 354.725 568 354.4M 588.8 354.4L 589.6 355.2L 588.8 354.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 23.4666 355.734C 23.4222 355.778 23.3778 356.622 23.7334 356.266C 23.7778 356.222 23.8222 355.378 23.4666 355.734z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 245.6 355.2L 245.6 357.6L 246.4 357.6C 246.199 356.438 246.148 356.198 245.6 355.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 350.4 355.2L 350.4 356L 352.8 356C 351.802 355.452 351.562 355.401 350.4 355.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 395.2 355.2C 395.341 356.702 395.55 357.759 396 359.2L 396.8 359.2C 396.416 357.633 396.05 356.554 395.2 355.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 453.6 355.2L 453.6 356L 456 356C 455.002 355.452 454.762 355.401 453.6 355.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 467.466 355.734C 467.422 355.778 467.378 356.622 467.734 356.266C 467.778 356.222 467.822 355.378 467.466 355.734z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 479.734 355.466C 479.378 355.822 480.222 355.778 480.266 355.734C 480.622 355.378 479.778 355.422 479.734 355.466z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 568 355.2C 568.882 356.366 569.234 356.718 570.4 357.6C 569.681 355.901 569.699 355.919 568 355.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 570.4 355.2L 570.4 357.6L 571.2 357.6C 570.999 356.438 570.948 356.198 570.4 355.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 585.6 355.2L 586.4 356L 585.6 355.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 164 356L 164.8 356.8L 164 356z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 349.334 356.266C 348.978 356.622 349.822 356.578 349.866 356.534C 350.222 356.178 349.378 356.222 349.334 356.266z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 468 356L 468 356.8C 470.433 357.52 472.665 357.594 475.2 357.6L 475.2 356.8C 472.738 356.749 470.42 356.45 468 356z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 481.6 356L 482.4 356.8L 481.6 356z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 568 356L 568 357.6L 569.6 357.6C 569.164 356.292 569.308 356.436 568 356M 587.2 356L 588 356.8L 587.2 356z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 23.4666 357.334C 23.4222 357.378 23.3778 358.222 23.7334 357.866C 23.7778 357.822 23.8222 356.978 23.4666 357.334z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 338.4 356.8L 338.4 357.6L 341.6 357.6C 340.395 357.054 339.748 356.939 338.4 356.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 347.734 357.066C 347.378 357.422 348.222 357.378 348.266 357.334C 348.622 356.978 347.778 357.022 347.734 357.066z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 450.4 356.8L 451.2 357.6L 450.4 356.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 468.266 357.334C 468.222 357.378 468.178 358.222 468.534 357.866C 468.578 357.822 468.622 356.978 468.266 357.334z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 475.734 357.066C 475.378 357.422 476.222 357.378 476.266 357.334C 476.622 356.978 475.778 357.022 475.734 357.066z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 588 356.8L 588.8 357.6L 588 356.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 125.6 357.6L 125.6 360L 126.4 360C 126.199 358.838 126.148 358.598 125.6 357.6M 168 357.6L 168.8 358.4L 168 357.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 336.8 357.6L 337.6 358.4L 336.8 357.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 449.866 358.134C 449.822 358.178 449.778 359.022 450.134 358.666C 450.178 358.622 450.222 357.778 449.866 358.134z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 469.334 357.866C 468.978 358.222 469.822 358.178 469.866 358.134C 470.222 357.778 469.378 357.822 469.334 357.866z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 470.4 357.6L 470.4 358.4L 472.8 358.4C 471.802 357.852 471.561 357.801 470.4 357.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 544.266 358.134C 544.222 358.178 544.178 359.022 544.534 358.666C 544.578 358.622 544.622 357.778 544.266 358.134z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 567.2 357.6L 568 358.4L 567.2 357.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 588.8 357.6L 589.6 358.4L 588.8 357.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 589.6 357.6C 590.036 358.908 589.892 358.764 591.2 359.2C 590.764 357.892 590.908 358.036 589.6 357.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 22.6666 358.934C 22.6222 358.978 22.5778 359.822 22.9334 359.466C 22.9778 359.422 23.0222 358.578 22.6666 358.934z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 168.8 358.4L 169.6 359.2L 168.8 358.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 260 358.4L 260 359.2L 262.4 359.2C 261.402 358.652 261.162 358.601 260 358.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 269.6 358.4L 270.4 359.2L 269.6 358.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 334.4 358.4L 334.4 359.2L 336.8 359.2C 335.802 358.652 335.562 358.601 334.4 358.4M 345.334 358.666C 344.978 359.022 345.822 358.978 345.866 358.934C 346.222 358.578 345.378 358.622 345.334 358.666z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 398.4 358.4L 399.2 359.2L 398.4 358.4M 541.866 358.934C 541.822 358.978 541.778 359.822 542.134 359.466C 542.178 359.422 542.222 358.578 541.866 358.934M 564 358.4L 564.8 359.2L 564 358.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 589.6 358.4L 589.6 360L 591.2 360C 590.764 358.692 590.908 358.836 589.6 358.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 166.4 359.2L 167.2 360L 166.4 359.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 169.6 359.2L 170.4 360L 169.6 359.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 258.134 359.466C 257.778 359.822 258.622 359.778 258.666 359.734C 259.022 359.378 258.178 359.422 258.134 359.466z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 259.734 359.466C 259.378 359.822 260.222 359.778 260.266 359.734C 260.622 359.378 259.778 359.422 259.734 359.466z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 260.8 359.2L 260.8 360L 264.8 360.8L 264.8 360L 260.8 359.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 262.934 359.466C 262.578 359.822 263.422 359.778 263.466 359.734C 263.822 359.378 262.978 359.422 262.934 359.466z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 264.534 359.466C 264.178 359.822 265.022 359.778 265.066 359.734C 265.422 359.378 264.578 359.422 264.534 359.466z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 265.6 359.2L 266.4 360L 265.6 359.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 330.934 359.466C 330.578 359.822 331.422 359.778 331.466 359.734C 331.822 359.378 330.978 359.422 330.934 359.466z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 332.534 359.466C 332.178 359.822 333.022 359.778 333.066 359.734C 333.422 359.378 332.578 359.422 332.534 359.466z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 348 359.2L 348.8 360L 348 359.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 399.2 359.2L 400 360L 399.2 359.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 448.8 359.2C 448.399 361.349 448.094 363.416 448 365.6L 448.8 365.6C 449.491 363.248 449.75 361.482 448.8 359.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 562.4 359.2L 562.4 363.2L 563.2 363.2L 564 359.2L 562.4 359.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 591.2 359.2L 592 360L 591.2 359.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 19.2 360C 19.4721 363.492 20.5082 364.528 24 364.8L 24 364C 21.5076 363.254 20.6227 362.129 19.2 360z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 26.4 360L 26.4 360.8L 29.6 361.6C 28.5488 360.306 28.0982 360.246 26.4 360z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 169.6 360L 170.4 360.8L 169.6 360z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 256.8 360L 256 361.6C 257.01 360.823 257.114 361.045 256.8 360z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 257.6 360L 257.6 360.8L 260 360.8C 259.002 360.252 258.762 360.201 257.6 360z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 328.534 360.266C 328.178 360.622 329.022 360.578 329.066 360.534C 329.422 360.178 328.578 360.222 328.534 360.266z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 330.134 360.266C 329.778 360.622 330.622 360.578 330.666 360.534C 331.022 360.178 330.178 360.222 330.134 360.266z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 347.2 360L 347.2 361.6C 348.508 361.164 348.364 361.308 348.8 360L 347.2 360z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 400 360L 400.8 360.8L 400 360M 540.8 360L 540.8 363.2L 541.6 363.2C 541.461 361.852 541.346 361.205 540.8 360z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 541.6 360L 542.4 360.8L 541.6 360z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 561.866 360.534C 561.822 360.578 561.778 361.422 562.134 361.066C 562.178 361.022 562.222 360.178 561.866 360.534z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 563.466 360.534C 563.422 360.578 563.378 361.422 563.734 361.066C 563.778 361.022 563.822 360.178 563.466 360.534z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 591.2 360L 591.2 360.8L 593.6 361.6C 592.622 360.644 592.464 360.547 591.2 360z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 592.8 360L 593.6 360.8L 592.8 360z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 18.4 360.8L 18.4 364L 19.2 364C 19.0607 362.652 18.9465 362.005 18.4 360.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 170.4 360.8L 171.2 361.6L 170.4 360.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 256.8 360.8L 257.6 361.6L 256.8 360.8M 328.534 361.066C 328.178 361.422 329.022 361.378 329.066 361.334C 329.422 360.978 328.578 361.022 328.534 361.066z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 343.2 360.8L 343.2 361.6L 347.2 361.6C 345.785 360.977 344.771 360.87 343.2 360.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 489.6 360.8L 490.4 361.6L 489.6 360.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 541.6 360.8L 541.6 363.2L 542.4 363.2C 542.199 362.038 542.148 361.798 541.6 360.8M 544 362.4C 545.83 363.889 547.525 365.283 549.6 366.4L 548 360.8C 546.286 361.109 545.401 361.396 544 362.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 548 360.8L 548 361.6L 550.4 361.6C 549.402 361.052 549.161 361.001 548 360.8M 599.2 360.8L 599.2 361.6L 602.4 361.6C 601.195 361.054 600.548 360.939 599.2 360.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 20 361.6C 21.8184 363.681 24.5555 363.198 27.2 363.2C 24.9365 362.183 22.467 361.914 20 361.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 170.4 361.6C 170.947 362.864 171.044 363.022 172 364C 171.447 362.89 171.212 362.511 170.4 361.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 266.4 361.6L 267.2 362.4L 266.4 361.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 326.934 361.866C 326.578 362.222 327.422 362.178 327.466 362.134C 327.822 361.778 326.978 361.822 326.934 361.866z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 397.6 361.6L 397.6 364L 398.4 364C 398.199 362.838 398.148 362.598 397.6 361.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 490.4 361.6C 491.282 362.766 491.634 363.118 492.8 364C 492.081 362.301 492.099 362.319 490.4 361.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 548 363.2C 550.118 363.2 549.6 364.431 549.6 366.4L 550.4 366.4L 550.4 361.6C 548.726 361.925 548.784 361.774 548 363.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 593.6 361.6L 594.4 362.4L 593.6 361.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 594.4 361.6L 595.2 362.4L 594.4 361.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 600.8 361.6C 601.778 362.556 601.936 362.653 603.2 363.2C 602.416 361.774 602.474 361.925 600.8 361.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 171.2 362.4L 172 363.2L 171.2 362.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 325.866 362.934C 325.822 362.978 325.778 363.822 326.134 363.466C 326.178 363.422 326.222 362.578 325.866 362.934z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 398.4 362.4L 398.4 365.6L 399.2 365.6C 399.061 364.252 398.946 363.605 398.4 362.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 548.8 362.4L 548.8 365.6L 549.6 365.6C 549.461 364.252 549.346 363.605 548.8 362.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 595.2 362.4L 596 363.2L 595.2 362.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 20.8 363.2L 20.8 364L 25.6 364C 23.9583 363.301 22.6022 363.238 20.8 363.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 26.1334 363.466C 25.7778 363.822 26.6222 363.778 26.6666 363.734C 27.0222 363.378 26.1778 363.422 26.1334 363.466z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 27.7334 363.466C 27.3778 363.822 28.2222 363.778 28.2666 363.734C 28.6222 363.378 27.7778 363.422 27.7334 363.466M 172 363.2L 172.8 364L 172 363.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 248 363.2C 248.801 364.739 248.862 364.878 250.4 365.6C 249.681 363.901 249.699 363.919 248 363.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 545.6 363.2L 546.4 364L 545.6 363.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 565.066 363.734C 565.022 363.778 564.978 364.622 565.334 364.266C 565.378 364.222 565.422 363.378 565.066 363.734M 596.8 363.2L 597.6 364L 596.8 363.2M 603.734 363.466C 603.378 363.822 604.222 363.778 604.266 363.734C 604.622 363.378 603.778 363.422 603.734 363.466z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 24 364L 24 364.8L 27.2 364.8C 25.9951 364.254 25.3482 364.139 24 364z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 28.8 364L 29.6 364.8L 28.8 364M 122.4 364L 123.2 364.8L 122.4 364z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 172 364C 172.436 365.308 172.292 365.164 173.6 365.6C 173.164 364.292 173.308 364.436 172 364z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 172.8 364L 173.6 364.8L 172.8 364M 324.8 364L 325.6 364.8L 324.8 364z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 493.066 364.534C 493.022 364.578 492.978 365.422 493.334 365.066C 493.378 365.022 493.422 364.178 493.066 364.534M 536 364L 536.8 364.8L 536 364z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 550.666 364.534C 550.622 364.578 550.578 365.422 550.934 365.066C 550.978 365.022 551.022 364.178 550.666 364.534z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 605.6 364L 606.4 364.8L 605.6 364z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 31.2 364.8L 32 365.6L 31.2 364.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 121.6 364.8L 122.4 365.6L 121.6 364.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 172 364.8L 172.8 365.6L 172 364.8M 271.2 364.8C 270.436 368.142 268.612 371.006 268 374.4L 268.8 374.4C 270.282 371.347 272.474 368.174 271.2 364.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 546.4 364.8L 547.2 365.6L 546.4 364.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 564.266 365.334C 564.222 365.378 564.178 366.222 564.534 365.866C 564.578 365.822 564.622 364.978 564.266 365.334z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 607.2 364.8L 607.2 365.6L 610.4 366.4L 610.4 365.6L 607.2 364.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 31.2 365.6L 31.2 368.8L 32 368.8C 31.8607 367.452 31.7465 366.805 31.2 365.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 121.066 366.134C 121.022 366.178 120.978 367.022 121.334 366.666C 121.378 366.622 121.422 365.778 121.066 366.134z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 172.8 365.6L 173.6 366.4L 172.8 365.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 173.6 365.6C 174.036 366.908 173.892 366.764 175.2 367.2C 174.764 365.892 174.908 366.036 173.6 365.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 250.134 365.866C 249.778 366.222 250.622 366.178 250.666 366.134C 251.022 365.778 250.178 365.822 250.134 365.866z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 251.734 365.866C 251.378 366.222 252.222 366.178 252.266 366.134C 252.622 365.778 251.778 365.822 251.734 365.866z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 253.334 365.866C 252.978 366.222 253.822 366.178 253.866 366.134C 254.222 365.778 253.378 365.822 253.334 365.866M 400.534 365.866C 400.178 366.222 401.022 366.178 401.066 366.134C 401.422 365.778 400.578 365.822 400.534 365.866M 448 365.6L 447.2 367.2L 448.8 367.2C 448.8 365.718 449.04 366.12 448 365.6M 532 365.6L 532.8 366.4L 532 365.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 603.2 365.6L 604 366.4L 603.2 365.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 608.8 365.6L 609.6 366.4L 608.8 365.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 173.6 366.4L 174.4 367.2L 173.6 366.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 404 366.4C 404.521 368.347 404.928 369.026 406.4 370.4C 405.879 368.453 405.472 367.774 404 366.4M 493.866 366.934C 493.822 366.978 493.778 367.822 494.134 367.466C 494.178 367.422 494.222 366.578 493.866 366.934z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 531.2 366.4L 530.4 368.8C 531.431 367.646 531.521 367.813 531.2 366.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 535.2 366.4L 536 367.2L 535.2 366.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 563.2 366.4L 564 367.2L 563.2 366.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 564 366.4L 564 368.8L 564.8 368.8C 564.599 367.638 564.548 367.398 564 366.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 604 366.4L 604.8 367.2L 604 366.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 32 367.2L 32 369.6L 32.8 369.6C 32.599 368.438 32.5478 368.198 32 367.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 118.4 367.2C 118.725 368.874 118.574 368.816 120 369.6C 119.447 368.489 119.213 368.111 118.4 367.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 174.4 367.2C 174.836 368.508 174.692 368.364 176 368.8C 175.564 367.492 175.708 367.636 174.4 367.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 175.2 367.2L 176 368L 175.2 367.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 325.6 367.2L 326.4 368L 325.6 367.2M 436.8 367.2L 437.6 368L 436.8 367.2M 441.6 367.2L 441.6 370.4L 442.4 370.4C 442.261 369.052 442.146 368.405 441.6 367.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 446.4 367.2L 447.2 368L 446.4 367.2M 529.6 367.2L 529.6 368.8C 530.908 368.364 530.764 368.508 531.2 367.2L 529.6 367.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 563.2 367.2L 564 368L 563.2 367.2M 607.2 367.2L 608 368L 607.2 367.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 612.8 367.2L 613.6 368L 612.8 367.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 176 368L 176.8 368.8L 176 368z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 324 368L 324.8 368.8L 324 368z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 436 368L 436.8 368.8L 436 368z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 440.266 368.534C 440.222 368.578 440.178 369.422 440.534 369.066C 440.578 369.022 440.622 368.178 440.266 368.534z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 538.134 368.266C 537.778 368.622 538.622 368.578 538.666 368.534C 539.022 368.178 538.178 368.222 538.134 368.266z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 547.734 368.266C 547.378 368.622 548.222 368.578 548.266 368.534C 548.622 368.178 547.778 368.222 547.734 368.266z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 548.8 368L 549.6 368.8L 548.8 368z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 549.6 368L 550.4 368.8L 549.6 368z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 562.4 368C 559.719 370.531 557.158 370.398 553.6 370.4L 553.6 371.2C 557.763 371.2 561.6 371.912 564 368L 562.4 368z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 176 368.8C 176.436 370.108 176.292 369.964 177.6 370.4C 177.164 369.092 177.308 369.236 176 368.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 176.8 368.8L 177.6 369.6L 176.8 368.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 435.2 368.8L 435.2 371.2L 436 371.2C 435.799 370.038 435.748 369.798 435.2 368.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 444 368.8L 444 372.8L 444.8 372.8C 444.73 371.229 444.623 370.215 444 368.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 529.866 369.334C 529.822 369.378 529.778 370.222 530.134 369.866C 530.178 369.822 530.222 368.978 529.866 369.334M 538.4 368.8L 538.4 371.2L 539.2 371.2C 538.999 370.038 538.948 369.798 538.4 368.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 540.8 370.4C 542.064 369.854 542.222 369.756 543.2 368.8C 541.936 369.347 541.778 369.444 540.8 370.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 547.2 368.8L 547.2 369.6L 549.6 369.6C 548.602 369.052 548.361 369.001 547.2 368.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 549.6 368.8L 549.6 369.6L 552 369.6C 551.002 369.052 550.762 369.001 549.6 368.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 601.334 369.066C 600.978 369.422 601.822 369.378 601.866 369.334C 602.222 368.978 601.378 369.022 601.334 369.066z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 611.2 368.8L 612 369.6L 611.2 368.8M 32 369.6L 32 372.8L 32.8 372.8C 32.6607 371.452 32.5465 370.805 32 369.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 32.8 369.6L 32.8 374.4L 33.6 374.4C 33.5622 372.598 33.4994 371.242 32.8 369.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 123.2 369.6L 124 370.4L 123.2 369.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 316.8 369.6C 316.011 370.783 316 370.562 316 372C 317.031 370.846 317.121 371.013 316.8 369.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 317.6 369.6L 318.4 370.4L 317.6 369.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 408.8 369.6L 409.6 370.4L 408.8 369.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 550.134 369.866C 549.778 370.222 550.622 370.178 550.666 370.134C 551.022 369.778 550.178 369.822 550.134 369.866z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 552.534 369.866C 552.178 370.222 553.022 370.178 553.066 370.134C 553.422 369.778 552.578 369.822 552.534 369.866z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 553.6 369.6L 554.4 370.4L 553.6 369.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 554.934 369.866C 554.578 370.222 555.422 370.178 555.466 370.134C 555.822 369.778 554.978 369.822 554.934 369.866M 560 369.6L 560.8 370.4L 560 369.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 560.8 369.6L 561.6 370.4L 560.8 369.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 589.6 369.6L 589.6 372.8L 590.4 372.8L 591.2 369.6L 589.6 369.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 596 369.6L 596.8 370.4L 596 369.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 602.134 369.866C 601.778 370.222 602.622 370.178 602.666 370.134C 603.022 369.778 602.178 369.822 602.134 369.866z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 603.2 369.6L 604 370.4L 603.2 369.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 609.6 369.6L 610.4 370.4L 609.6 369.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 612.266 370.134C 612.222 370.178 612.178 371.022 612.534 370.666C 612.578 370.622 612.622 369.778 612.266 370.134z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 612.8 369.6C 613.313 372.168 614.034 373.475 616 375.2C 615.784 373.05 615.346 371.544 614.4 369.6L 612.8 369.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 124.8 370.4L 125.6 371.2L 124.8 370.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 177.6 370.4L 178.4 371.2L 177.6 370.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 492.8 370.4L 492.8 371.2L 495.2 371.2C 494.202 370.652 493.962 370.601 492.8 370.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 532 370.4L 531.2 373.6L 532 373.6C 532.372 372.055 532.459 371.847 532 370.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 594.934 370.666C 594.578 371.022 595.422 370.978 595.466 370.934C 595.822 370.578 594.978 370.622 594.934 370.666z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 604.8 370.4L 605.6 371.2L 604.8 370.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 611.2 370.4L 612 371.2L 611.2 370.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 178.4 371.2L 179.2 372L 178.4 371.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 409.6 371.2C 410.578 372.156 410.736 372.253 412 372.8C 411.022 371.844 410.864 371.747 409.6 371.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 434.4 371.2L 432.8 377.6C 435.127 375.956 435.461 373.806 434.4 371.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 495.2 371.2L 495.2 372L 498.4 372C 497.195 371.454 496.548 371.339 495.2 371.2M 589.066 371.734C 589.022 371.778 588.978 372.622 589.334 372.266C 589.378 372.222 589.422 371.378 589.066 371.734z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 590.4 371.2L 589.6 374.4L 590.4 374.4C 590.647 372.994 590.725 372.527 590.4 371.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 594.934 371.466C 594.578 371.822 595.422 371.778 595.466 371.734C 595.822 371.378 594.978 371.422 594.934 371.466M 606.934 371.466C 606.578 371.822 607.422 371.778 607.466 371.734C 607.822 371.378 606.978 371.422 606.934 371.466z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 612 371.2L 612.8 372L 612 371.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 179.2 372L 180 372.8L 179.2 372z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 437.6 372L 437.6 376L 438.4 376L 439.2 372L 437.6 372z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 528.534 372.266C 528.178 372.622 529.022 372.578 529.066 372.534C 529.422 372.178 528.578 372.222 528.534 372.266z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 593.334 372.266C 592.978 372.622 593.822 372.578 593.866 372.534C 594.222 372.178 593.378 372.222 593.334 372.266z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 612.8 372L 613.6 372.8L 612.8 372z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 32 372.8L 32 375.2L 32.8 375.2C 32.599 374.038 32.5478 373.798 32 372.8M 180 372.8L 180.8 373.6L 180 372.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 265.6 372.8L 266.4 373.6L 265.6 372.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 317.6 372.8L 318.4 373.6L 317.6 372.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 411.2 372.8L 411.2 373.6L 413.6 374.4C 412.816 372.974 412.874 373.125 411.2 372.8M 438.4 372.8L 438.4 376L 441.6 375.2L 441.6 374.4C 439.733 374.438 439.558 374.158 438.4 372.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 444 372.8L 443.2 374.4L 444.8 374.4C 444.8 372.918 445.04 373.32 444 372.8M 535.2 375.2C 536.739 374.399 536.879 374.338 537.6 372.8C 535.901 373.519 535.919 373.501 535.2 375.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 540 372.8L 540.8 373.6L 540 372.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 588.8 372.8L 589.6 376.8L 590.4 376.8C 590.091 375.086 589.804 374.2 588.8 372.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 590.666 373.334C 590.622 373.378 590.578 374.222 590.934 373.866C 590.978 373.822 591.022 372.978 590.666 373.334z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 124.8 373.6L 124 375.2L 125.6 375.2C 125.6 373.718 125.84 374.12 124.8 373.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 180.8 373.6L 181.6 374.4L 180.8 373.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 264 373.6L 264.8 374.4L 264 373.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 265.334 373.866C 264.978 374.222 265.822 374.178 265.866 374.134C 266.222 373.778 265.378 373.822 265.334 373.866z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 317.066 374.134C 317.022 374.178 316.978 375.022 317.334 374.666C 317.378 374.622 317.422 373.778 317.066 374.134z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 413.6 373.6C 414.482 374.766 414.834 375.118 416 376C 415.281 374.301 415.299 374.319 413.6 373.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 507.2 373.6L 508 374.4L 507.2 373.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 31.2 374.4L 29.6 379.2C 31.2589 377.586 31.93 376.651 31.2 374.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 181.6 374.4L 182.4 375.2L 181.6 374.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 258.4 374.4L 258.4 375.2L 261.6 375.2C 260.395 374.654 259.748 374.539 258.4 374.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 261.6 374.4L 261.6 375.2L 264 375.2C 263.002 374.652 262.762 374.601 261.6 374.4M 525.866 374.934C 525.822 374.978 525.778 375.822 526.134 375.466C 526.178 375.422 526.222 374.578 525.866 374.934z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 536 374.4L 536.8 377.6L 537.6 377.6L 537.6 374.4L 536 374.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 590.4 374.4C 590.742 376.516 591.057 377.169 592.8 378.4C 592.15 376.868 591.451 375.69 590.4 374.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 611.2 374.4L 612 375.2L 611.2 374.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 32.2666 375.734C 32.2222 375.778 32.1778 376.622 32.5334 376.266C 32.5778 376.222 32.6222 375.378 32.2666 375.734z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 120 375.2L 120 376L 123.2 376C 121.995 375.454 121.348 375.339 120 375.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 123.2 375.2L 124 376L 123.2 375.2M 183.2 375.2L 184 376L 183.2 375.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 257.6 375.2L 257.6 376L 260 376C 259.002 375.452 258.762 375.401 257.6 375.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 260 375.2L 260 376L 262.4 376C 261.402 375.452 261.162 375.401 260 375.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 316.266 375.734C 316.222 375.778 316.178 376.622 316.534 376.266C 316.578 376.222 316.622 375.378 316.266 375.734M 536.8 375.2L 537.6 376L 536.8 375.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 542.4 375.2L 542.4 376L 546.4 379.2C 545.653 376.698 544.902 375.947 542.4 375.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 591.466 375.734C 591.422 375.778 591.378 376.622 591.734 376.266C 591.778 376.222 591.822 375.378 591.466 375.734M 612 375.2L 612.8 376L 612 375.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 116.266 376.534C 116.222 376.578 116.178 377.422 116.534 377.066C 116.578 377.022 116.622 376.178 116.266 376.534z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 120.534 376.266C 120.178 376.622 121.022 376.578 121.066 376.534C 121.422 376.178 120.578 376.222 120.534 376.266z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 184.8 376L 185.6 376.8L 184.8 376z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 258.934 376.266C 258.578 376.622 259.422 376.578 259.466 376.534C 259.822 376.178 258.978 376.222 258.934 376.266z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 220.8 387.2L 222.4 383.2C 216.317 384.438 210.014 384.168 204 385.6C 203.762 391.194 197.998 393.345 195.082 397.612C 192.303 401.679 193.593 408.207 190.606 411.589C 187.567 415.03 182.206 412.644 178.431 414.082C 173.915 415.804 172.324 420.572 167.2 421.6C 169.08 426.183 172.415 431.188 173.378 436C 174.527 441.747 172.119 447.83 172 453.6C 179.631 454.717 187.797 456.737 195.2 453.6C 198.105 456.924 204.794 454.718 208.8 457.6L 209.6 457.6C 212.762 453.897 215.484 452.669 220 451.2C 220.138 449.422 220.235 449.117 221.6 448L 220.8 449.6L 221.6 449.6C 234.45 448.752 248.469 453.278 257.806 440.54C 259.954 437.61 259.248 433.568 261.576 430.582C 263.406 428.235 266.328 428.474 268.389 426.61C 270.658 424.556 270.45 420.402 271.2 417.6L 262.4 417.6C 263.17 412.031 267.45 409.151 268.8 404L 268 404L 267.2 407.2C 267.129 402.91 270.694 405.02 273.318 402.842C 275.694 400.869 276.27 396.495 276.423 393.6C 276.66 389.094 270.868 376.492 265.596 376.649C 261.274 376.778 257.093 380.23 252.8 380.936C 248.466 381.649 244.302 380.69 240.034 382.515C 237.213 383.723 236.202 387.294 233.43 388.182C 230.011 389.276 224.276 387.846 220.8 387.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 267.2 376C 268.178 376.956 268.336 377.053 269.6 377.6C 268.816 376.174 268.874 376.325 267.2 376z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 271.2 376L 271.2 376.8L 273.6 376.8C 272.602 376.252 272.362 376.201 271.2 376z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 536.8 376L 537.6 376.8L 536.8 376z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 542.934 376.266C 542.578 376.622 543.422 376.578 543.466 376.534C 543.822 376.178 542.978 376.222 542.934 376.266z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 612.8 376L 613.6 376.8L 612.8 376M 257.334 377.066C 256.978 377.422 257.822 377.378 257.866 377.334C 258.222 376.978 257.378 377.022 257.334 377.066z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 272 376.8C 273.975 385.111 281.722 390.925 278.014 400C 275.349 406.521 267.814 408.762 265.6 415.2C 273.355 416.666 281.13 421.162 282.4 429.6C 286.729 430.947 291.139 433.511 293.38 437.631C 294.778 440.202 294.662 444.73 297.242 446.488C 299.564 448.069 305.177 441.351 309.6 442.503C 315.969 444.162 316.65 450.39 321.104 453.918C 323.738 456.002 328.059 455.014 331.2 455.2L 331.2 454.4L 329.6 454.4L 329.6 453.6L 333.6 455.2C 335.186 450.678 336.223 447.691 341.6 448.8C 342.521 445.714 342.052 441.362 344.451 438.922C 346.743 436.592 350.035 437.562 352.581 435.978C 357.013 433.221 361.112 426.506 362.4 421.6L 359.2 420.8C 362.677 416.674 361.92 414.314 360 409.6L 359.2 409.6C 358.348 415.099 354.63 416.38 349.6 415.2C 352.043 409.71 352.654 403.859 354.796 398.4C 355.715 396.056 358.314 393.198 356.19 390.729C 354.208 388.423 350.414 390.385 348 390.769C 343.88 391.423 338.337 391.264 334.432 389.801C 330.734 388.414 329.692 383.889 326.264 382.698C 319.912 380.49 317.125 390.53 312.8 380C 303.158 381.79 293.556 383.298 284 385.6L 280.8 380C 276.893 380.433 275.262 378.495 272 376.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 273.6 376.8L 274.4 377.6L 273.6 376.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 315.2 376.8L 316 377.6L 315.2 376.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 316 376.8C 315.211 377.983 315.2 377.762 315.2 379.2C 316.231 378.046 316.321 378.213 316 376.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 507.2 376.8C 507.747 378.064 507.844 378.222 508.8 379.2C 508.253 377.936 508.156 377.778 507.2 376.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 521.6 376.8L 522.4 377.6L 521.6 376.8M 576 378.4L 578.4 377.6C 576.978 376.836 576.783 376.987 576 378.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 578.4 376.8C 579.193 378.965 579.77 380.906 580 383.2L 580.8 383.2C 580.767 380.371 580.871 378.402 578.4 376.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 26.4 377.6L 27.2 378.4L 26.4 377.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 116.266 378.134C 116.222 378.178 116.178 379.022 116.534 378.666C 116.578 378.622 116.622 377.778 116.266 378.134z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 244.8 378.4L 244.8 379.2L 249.6 378.4C 247.809 377.751 246.682 377.977 244.8 378.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 249.6 377.6L 250.4 378.4L 249.6 377.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 254.4 377.6L 255.2 378.4L 254.4 377.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 269.6 377.6L 270.4 378.4L 269.6 377.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 274.4 377.6C 275.658 379.775 276.74 380.298 279.2 380.8L 279.2 380L 274.4 377.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 281.6 377.6L 282.4 378.4L 281.6 377.6M 308 377.6L 308 378.4L 312 378.4C 310.585 377.777 309.571 377.67 308 377.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 414.4 377.6L 415.2 378.4L 414.4 377.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 436 377.6C 436.242 379.435 436.462 380.17 437.6 381.6C 437.574 379.571 437.378 379.098 436 377.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 576.8 377.6L 576.8 378.4L 579.2 378.4C 578.202 377.852 577.962 377.801 576.8 377.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 591.466 378.134C 591.422 378.178 591.378 379.022 591.734 378.666C 591.778 378.622 591.822 377.778 591.466 378.134z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 25.6 378.4L 26.4 379.2L 25.6 378.4M 30.4 378.4L 31.2 379.2L 30.4 378.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 115.2 378.4L 115.2 380.8L 116 380.8C 115.799 379.638 115.748 379.398 115.2 378.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 246.934 378.666C 246.578 379.022 247.422 378.978 247.466 378.934C 247.822 378.578 246.978 378.622 246.934 378.666z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 259.734 378.666C 259.378 379.022 260.222 378.978 260.266 378.934C 260.622 378.578 259.778 378.622 259.734 378.666z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 305.6 378.4L 305.6 379.2L 308.8 379.2C 307.595 378.654 306.948 378.539 305.6 378.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 309.334 378.666C 308.978 379.022 309.822 378.978 309.866 378.934C 310.222 378.578 309.378 378.622 309.334 378.666z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 427.2 378.4L 428 379.2L 427.2 378.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 508.8 378.4C 510.292 381.36 511.929 382.154 515.2 382.4L 515.2 381.6C 512.76 380.941 510.938 379.75 508.8 378.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 557.6 378.4L 558.4 379.2L 557.6 378.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 575.2 378.4L 576 379.2L 575.2 378.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 592 378.4C 592.648 380.178 593.391 381.592 594.4 383.2L 595.2 383.2C 594.455 381.007 593.745 379.917 592 378.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 592.8 378.4L 593.6 379.2L 592.8 378.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 28.8 379.2L 29.6 380L 28.8 379.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 185.6 379.2L 186.4 380L 185.6 379.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 242.4 379.2L 242.4 380L 244.8 380C 243.802 379.452 243.562 379.401 242.4 379.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 270.666 379.734C 270.622 379.778 270.578 380.622 270.934 380.266C 270.978 380.222 271.022 379.378 270.666 379.734M 276.8 379.2L 276.8 380L 280 380C 278.795 379.454 278.148 379.339 276.8 379.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 415.466 379.734C 415.422 379.778 415.378 380.622 415.734 380.266C 415.778 380.222 415.822 379.378 415.466 379.734z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 545.6 379.2L 546.4 380L 545.6 379.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 556.8 379.2L 557.6 380L 556.8 379.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 28 380L 28.8 380.8L 28 380z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 186.4 380L 186.4 380.8L 188.8 380.8C 187.802 380.252 187.562 380.201 186.4 380z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 193.6 380L 194.4 380.8L 193.6 380M 240 380L 240.8 380.8L 240 380z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 249.6 380L 249.6 380.8L 254.4 380.8C 252.758 380.101 251.402 380.038 249.6 380z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 254.4 380L 255.2 380.8L 254.4 380z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 276 380L 276.8 380.8L 276 380z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 312.8 380L 313.6 380.8L 312.8 380z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 327.2 380L 328 380.8L 327.2 380M 558.4 384L 559.2 384L 561.6 380C 559.562 381.098 559.05 381.774 558.4 384z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 573.6 380L 574.4 380.8L 573.6 380z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 577.866 380.534C 577.822 380.578 577.778 381.422 578.134 381.066C 578.178 381.022 578.222 380.178 577.866 380.534z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 24.8 383.2C 26.3589 382.451 26.8402 382.086 28 380.8C 26.4412 381.549 25.9598 381.914 24.8 383.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 115.466 381.334C 115.422 381.378 115.378 382.222 115.734 381.866C 115.778 381.822 115.822 380.978 115.466 381.334z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 116 380.8C 116.325 382.474 116.174 382.416 117.6 383.2C 117.047 382.089 116.813 381.711 116 380.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 119.466 381.334C 119.422 381.378 119.378 382.222 119.734 381.866C 119.778 381.822 119.822 380.978 119.466 381.334z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 195.2 380.8L 196 381.6L 195.2 380.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 196.534 381.066C 196.178 381.422 197.022 381.378 197.066 381.334C 197.422 380.978 196.578 381.022 196.534 381.066z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 221.334 381.066C 220.978 381.422 221.822 381.378 221.866 381.334C 222.222 380.978 221.378 381.022 221.334 381.066z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 222.4 380.8L 222.4 381.6L 224.8 381.6C 223.802 381.052 223.562 381.001 222.4 380.8M 237.334 381.066C 236.978 381.422 237.822 381.378 237.866 381.334C 238.222 380.978 237.378 381.022 237.334 381.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 251.2 380.8L 251.2 381.6L 254.4 381.6C 253.195 381.054 252.548 380.939 251.2 380.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 280.8 380.8L 281.6 381.6L 280.8 380.8M 301.334 381.066C 300.978 381.422 301.822 381.378 301.866 381.334C 302.222 380.978 301.378 381.022 301.334 381.066z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 302.934 381.066C 302.578 381.422 303.422 381.378 303.466 381.334C 303.822 380.978 302.978 381.022 302.934 381.066z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 317.6 383.2L 318.4 383.2C 319.378 382.244 319.536 382.147 320.8 381.6C 318.954 381.154 318.595 381.603 317.6 383.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 320.8 380.8L 321.6 381.6L 320.8 380.8M 416 380.8C 416.547 382.064 416.644 382.222 417.6 383.2C 417.053 381.936 416.956 381.778 416 380.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 512 380.8L 512 381.6L 515.2 381.6C 513.995 381.054 513.348 380.939 512 380.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 515.734 381.066C 515.378 381.422 516.222 381.378 516.266 381.334C 516.622 380.978 515.778 381.022 515.734 381.066z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 553.6 383.2C 554.766 382.318 555.118 381.966 556 380.8C 554.301 381.519 554.319 381.501 553.6 383.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 560.8 380.8C 560.034 382.014 559.69 382.67 559.2 384C 560.504 382.788 560.93 382.516 560.8 380.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 233.6 384L 236.8 382.4C 234.954 381.954 234.595 382.403 233.6 384z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 298.934 381.866C 298.578 382.222 299.422 382.178 299.466 382.134C 299.822 381.778 298.978 381.822 298.934 381.866z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 318.934 381.866C 318.578 382.222 319.422 382.178 319.466 382.134C 319.822 381.778 318.978 381.822 318.934 381.866z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 320.266 382.134C 320.222 382.178 320.178 383.022 320.534 382.666C 320.578 382.622 320.622 381.778 320.266 382.134z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 324.8 381.6L 325.6 382.4L 324.8 381.6M 20 382.4L 16.8 384C 17.6999 388.923 15.815 392.074 15.2 396.8L 19.9691 396.579C 29.1289 396.819 20.26 407.73 23.2228 411.518C 27.3364 416.777 31.9456 409.338 29.6 404.8L 33.6 404.8L 33.6 404C 31.6464 404.088 29.9018 404.342 28 404.8C 29.0609 408.163 28.485 410.002 24.8 410.4C 28.1122 402.466 27.8286 390.715 16.8 395.2C 18.8906 392.294 20.9798 385.928 20 382.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 119.2 382.4L 119.2 388L 120 388C 119.985 385.966 119.988 384.266 119.2 382.4M 224.8 382.4L 224.8 385.6L 225.6 385.6C 225.461 384.252 225.346 383.605 224.8 382.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 281.866 382.934C 281.822 382.978 281.778 383.822 282.134 383.466C 282.178 383.422 282.222 382.578 281.866 382.934z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 293.6 382.4L 293.6 383.2L 296 383.2C 295.002 382.652 294.762 382.601 293.6 382.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 298.134 382.666C 297.778 383.022 298.622 382.978 298.666 382.934C 299.022 382.578 298.178 382.622 298.134 382.666z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 318.934 382.666C 318.578 383.022 319.422 382.978 319.466 382.934C 319.822 382.578 318.978 382.622 318.934 382.666z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 425.066 382.934C 425.022 382.978 424.978 383.822 425.334 383.466C 425.378 383.422 425.422 382.578 425.066 382.934z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 434.4 382.4C 433.95 383.841 433.741 384.898 433.6 386.4L 434.4 386.4C 434.641 384.855 434.774 383.877 434.4 382.4M 568 382.4L 568 383.2L 570.4 383.2C 569.402 382.652 569.161 382.601 568 382.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 595.2 382.4L 595.2 384.8L 596 384.8C 595.799 383.638 595.748 383.398 595.2 382.4z\" />\r\n            <path style=\"stroke:none; fill:#92c2d5\"\r\n                d=\"M 16.8 383.2L 17.6 384L 16.8 383.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 24.2666 383.734C 24.2222 383.778 24.1778 384.622 24.5334 384.266C 24.5778 384.222 24.6222 383.378 24.2666 383.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 216.8 383.2L 216.8 384L 220 384C 218.795 383.454 218.148 383.339 216.8 383.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 220 383.2L 220.8 384L 220 383.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 222.4 383.2L 221.6 384.8L 223.2 384.8C 223.2 383.318 223.44 383.72 222.4 383.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 232.8 383.2L 233.6 384L 232.8 383.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 282.4 383.2L 283.2 384L 282.4 383.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 289.6 383.2L 289.6 384L 292.8 384C 291.595 383.454 290.948 383.339 289.6 383.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 292.8 383.2L 293.6 384L 292.8 383.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 313.6 383.2L 314.4 384L 313.6 383.2M 318.934 383.466C 318.578 383.822 319.422 383.778 319.466 383.734C 319.822 383.378 318.978 383.422 318.934 383.466z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 566.934 383.466C 566.578 383.822 567.422 383.778 567.466 383.734C 567.822 383.378 566.978 383.422 566.934 383.466z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 568.266 383.734C 568.222 383.778 568.178 384.622 568.534 384.266C 568.578 384.222 568.622 383.378 568.266 383.734z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 573.334 383.466C 572.978 383.822 573.822 383.778 573.866 383.734C 574.222 383.378 573.378 383.422 573.334 383.466z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 580.266 383.734C 580.222 383.778 580.178 384.622 580.534 384.266C 580.578 384.222 580.622 383.378 580.266 383.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 21.6 385.6C 22.864 385.053 23.0218 384.956 24 384C 22.736 384.547 22.5782 384.644 21.6 385.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 197.6 384L 198.4 384.8L 197.6 384z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 210.134 384.266C 209.778 384.622 210.622 384.578 210.666 384.534C 211.022 384.178 210.178 384.222 210.134 384.266z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 211.2 384L 211.2 384.8L 213.6 384.8C 212.602 384.252 212.362 384.201 211.2 384z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 215.2 384L 215.2 384.8L 217.6 384.8C 216.602 384.252 216.362 384.201 215.2 384z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 232.8 384L 232.8 385.6L 234.4 385.6L 234.4 384L 232.8 384z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 284 384L 284 384.8L 289.6 384.8C 287.734 384.012 286.034 384.015 284 384z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 290.134 384.266C 289.778 384.622 290.622 384.578 290.666 384.534C 291.022 384.178 290.178 384.222 290.134 384.266z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 328 384L 328.8 384.8L 328 384z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 434.4 384L 435.2 384.8L 434.4 384z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 546.4 384L 547.2 384.8L 546.4 384z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 564.8 385.6L 568 384.8C 566.363 384.199 565.923 384.275 564.8 385.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 596 384L 596.8 384.8L 596 384z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 19.2 384.8L 19.2 385.6L 21.6 385.6C 20.6014 385.052 20.3612 385.001 19.2 384.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 199.2 384.8L 200 385.6L 199.2 384.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 221.334 385.066C 220.978 385.422 221.822 385.378 221.866 385.334C 222.222 384.978 221.378 385.022 221.334 385.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 275.2 384.8L 276 385.6L 275.2 384.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 284.534 385.066C 284.178 385.422 285.022 385.378 285.066 385.334C 285.422 384.978 284.578 385.022 284.534 385.066z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 314.4 384.8L 315.2 385.6L 314.4 384.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 420.8 384.8L 421.6 385.6L 420.8 384.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 550.666 385.334C 550.622 385.378 550.578 386.222 550.934 385.866C 550.978 385.822 551.022 384.978 550.666 385.334z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 554.4 386.4C 555.664 385.854 555.822 385.756 556.8 384.8C 555.536 385.347 555.378 385.444 554.4 386.4M 558.4 384.8L 559.2 385.6L 558.4 384.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 563.734 385.066C 563.378 385.422 564.222 385.378 564.266 385.334C 564.622 384.978 563.778 385.022 563.734 385.066z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 565.6 384.8L 565.6 385.6L 568 385.6C 567.002 385.052 566.762 385.001 565.6 384.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 580.266 385.334C 580.222 385.378 580.178 386.222 580.534 385.866C 580.578 385.822 580.622 384.978 580.266 385.334z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 597.866 385.334C 597.822 385.378 597.778 386.222 598.134 385.866C 598.178 385.822 598.222 384.978 597.866 385.334z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 16.8 385.6L 17.6 386.4L 16.8 385.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 19.2 385.6C 19.7469 386.864 19.8438 387.022 20.8 388L 21.6 387.2L 20.8 385.6L 19.2 385.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 200.534 385.866C 200.178 386.222 201.022 386.178 201.066 386.134C 201.422 385.778 200.578 385.822 200.534 385.866z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 221.066 386.134C 221.022 386.178 220.978 387.022 221.334 386.666C 221.378 386.622 221.422 385.778 221.066 386.134z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 221.6 385.6C 222.319 387.299 222.301 387.281 224 388C 223.118 386.834 222.766 386.482 221.6 385.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 316 385.6L 316 386.4L 318.4 386.4C 317.402 385.852 317.162 385.801 316 385.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 332 385.6L 332.8 386.4L 332 385.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 426.666 386.134C 426.622 386.178 426.578 387.022 426.934 386.666C 426.978 386.622 427.022 385.778 426.666 386.134z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 556 385.6L 556.8 386.4L 556 385.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 580.8 385.6L 580.8 387.2L 582.4 387.2C 581.964 385.892 582.108 386.036 580.8 385.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 594.934 385.866C 594.578 386.222 595.422 386.178 595.466 386.134C 595.822 385.778 594.978 385.822 594.934 385.866z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 204 386.4L 204.8 387.2L 204 386.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 329.6 386.4L 330.4 387.2L 329.6 386.4M 333.6 386.4L 334.4 387.2L 333.6 386.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 433.866 386.934C 433.822 386.978 433.778 387.822 434.134 387.466C 434.178 387.422 434.222 386.578 433.866 386.934z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 434.4 386.4L 435.2 387.2L 434.4 386.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 553.6 386.4L 554.4 387.2L 553.6 386.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 556.534 386.666C 556.178 387.022 557.022 386.978 557.066 386.934C 557.422 386.578 556.578 386.622 556.534 386.666z\" />\r\n            <path style=\"stroke:none; fill:#92c2d5\"\r\n                d=\"M 19.2 387.2L 20 388L 19.2 387.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 204.266 387.734C 204.222 387.778 204.178 388.622 204.534 388.266C 204.578 388.222 204.622 387.378 204.266 387.734z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 224 387.2L 224 388L 228 388C 226.585 387.377 225.571 387.27 224 387.2M 229.6 387.2L 229.6 388L 233.6 388C 232.185 387.377 231.171 387.27 229.6 387.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 233.6 387.2L 233.6 388.8L 235.2 388.8L 235.2 387.2L 233.6 387.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 276.8 387.2L 277.6 388L 276.8 387.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 330.4 387.2L 331.2 388L 330.4 387.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 356.8 387.2L 357.6 388L 356.8 387.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 426.666 387.734C 426.622 387.778 426.578 388.622 426.934 388.266C 426.978 388.222 427.022 387.378 426.666 387.734z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 434.4 387.2L 435.2 388L 434.4 387.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 437.6 387.2L 438.4 390.4L 439.2 390.4C 438.791 388.838 438.614 388.434 437.6 387.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 552.8 387.2L 553.6 388L 552.8 387.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 556 387.2L 556 388L 560 388.8L 560 388L 556 387.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 558.4 387.2L 559.2 388L 558.4 387.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 559.2 387.2L 559.2 388L 564 388C 562.358 387.301 561.002 387.238 559.2 387.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 564 387.2L 564 388L 566.4 388C 565.402 387.452 565.162 387.401 564 387.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 582.134 387.466C 581.778 387.822 582.622 387.778 582.666 387.734C 583.022 387.378 582.178 387.422 582.134 387.466M 231.2 388L 231.2 388.8L 233.6 388.8C 232.602 388.252 232.362 388.201 231.2 388z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 331.466 388.534C 331.422 388.578 331.378 389.422 331.734 389.066C 331.778 389.022 331.822 388.178 331.466 388.534M 357.6 388L 358.4 388.8L 357.6 388z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 425.866 388.534C 425.822 388.578 425.778 389.422 426.134 389.066C 426.178 389.022 426.222 388.178 425.866 388.534z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 552 388L 552.8 388.8L 552 388z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 560 388L 560 388.8L 563.2 388.8C 561.995 388.254 561.348 388.139 560 388z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 582.4 388L 583.2 388.8L 582.4 388M 591.2 388L 591.2 388.8L 593.6 388.8C 592.602 388.252 592.361 388.201 591.2 388z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 593.6 388L 594.4 388.8L 593.6 388z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 203.2 388.8L 204 389.6L 203.2 388.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 277.6 388.8L 278.4 389.6L 277.6 388.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 332 388.8L 332 389.6L 336 389.6C 334.585 388.977 333.571 388.87 332 388.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 342.4 388.8L 342.4 389.6L 348.8 389.6C 346.71 388.722 344.669 388.806 342.4 388.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 348.8 388.8L 348.8 389.6L 352 389.6C 350.795 389.054 350.148 388.939 348.8 388.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 352 388.8L 352 389.6L 354.4 389.6C 353.402 389.052 353.162 389.001 352 388.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 421.6 388.8C 422.757 390.626 423.448 390.866 425.6 391.2L 425.6 390.4C 424.042 390.037 422.985 389.605 421.6 388.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 422.4 388.8C 423.451 390.094 423.902 390.154 425.6 390.4L 425.6 389.6L 422.4 388.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 552.8 388.8L 553.6 389.6L 552.8 388.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 586.934 389.066C 586.578 389.422 587.422 389.378 587.466 389.334C 587.822 388.978 586.978 389.022 586.934 389.066z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 588.534 389.066C 588.178 389.422 589.022 389.378 589.066 389.334C 589.422 388.978 588.578 389.022 588.534 389.066z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 202.4 389.6L 203.2 390.4L 202.4 389.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 278.4 389.6L 278.4 392L 279.2 392C 278.999 390.838 278.948 390.598 278.4 389.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 335.2 389.6L 335.2 390.4L 352 390.4C 347.233 388.4 340.349 389.6 335.2 389.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 358.4 389.6L 359.2 390.4L 358.4 389.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 550.666 390.134C 550.622 390.178 550.578 391.022 550.934 390.666C 550.978 390.622 551.022 389.778 550.666 390.134z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 553.866 390.134C 553.822 390.178 553.778 391.022 554.134 390.666C 554.178 390.622 554.222 389.778 553.866 390.134M 118.4 390.4L 117.6 393.6L 118.4 393.6C 118.772 392.055 118.859 391.847 118.4 390.4M 336.8 390.4L 336.8 391.2C 338.414 391.472 339.174 391.458 340.8 391.2C 339.385 390.577 338.371 390.47 336.8 390.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 344 390.4L 344 391.2L 348 391.2C 346.585 390.577 345.571 390.47 344 390.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 359.466 390.934C 359.422 390.978 359.378 391.822 359.734 391.466C 359.778 391.422 359.822 390.578 359.466 390.934z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 438.4 390.4L 439.2 391.2L 438.4 390.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 115.2 391.2L 116 392L 115.2 391.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 346.134 391.466C 345.778 391.822 346.622 391.778 346.666 391.734C 347.022 391.378 346.178 391.422 346.134 391.466z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 439.2 391.2L 440 392L 439.2 391.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 551.2 391.2L 552 392L 551.2 391.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 554.4 391.2L 555.2 392L 554.4 391.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 114.4 392L 115.2 392.8L 114.4 392z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 196.8 392L 197.6 392.8L 196.8 392z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 440 392L 440.8 392.8L 440 392z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 556 392L 556.8 392.8L 556 392z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 113.6 392.8L 114.4 393.6L 113.6 392.8M 195.2 392.8L 196 393.6L 195.2 392.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 556.8 392.8L 557.6 393.6L 556.8 392.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 17.6 393.6L 16.8 395.2L 18.4 395.2C 18.4 393.718 18.6398 394.12 17.6 393.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 194.4 393.6L 195.2 394.4L 194.4 393.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 276.8 393.6L 277.6 394.4L 276.8 393.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 357.866 394.134C 357.822 394.178 357.778 395.022 358.134 394.666C 358.178 394.622 358.222 393.778 357.866 394.134z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 432 393.6L 432 394.4L 434.4 394.4C 433.402 393.852 433.162 393.801 432 393.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 557.6 393.6L 558.4 394.4L 557.6 393.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 193.6 394.4L 194.4 395.2L 193.6 394.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 275.2 396.8C 276.738 396.078 276.799 395.939 277.6 394.4C 275.901 395.119 275.919 395.101 275.2 396.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 356.8 394.4L 357.6 395.2L 356.8 394.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 558.4 394.4L 559.2 395.2L 558.4 394.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 559.2 394.4C 560.264 395.802 560.998 396.536 562.4 397.6C 561.477 395.801 560.999 395.323 559.2 394.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 192 395.2C 190.892 397.581 190.046 399.811 189.6 402.4L 190.4 402.4C 191.517 399.997 192.723 397.806 192 395.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 193.066 395.734C 193.022 395.778 192.978 396.622 193.334 396.266C 193.378 396.222 193.422 395.378 193.066 395.734z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 276.8 395.2L 276.8 397.6L 277.6 397.6C 277.399 396.438 277.348 396.198 276.8 395.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 356 395.2L 356 397.6L 356.8 397.6C 356.599 396.438 356.548 396.198 356 395.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 357.066 395.734C 357.022 395.778 356.978 396.622 357.334 396.266C 357.378 396.222 357.422 395.378 357.066 395.734z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 440 395.2L 440.8 396L 440 395.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 355.2 396C 354.75 397.441 354.541 398.498 354.4 400L 355.2 400C 355.674 398.276 355.819 397.635 355.2 396z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 432 396C 431.178 397.542 431.098 397.718 432 399.2C 432.372 397.655 432.459 397.447 432 396z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 114.4 396.8L 115.2 397.6L 114.4 396.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 276 396.8L 276.8 397.6L 276 396.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 25.6 397.6L 26.4 398.4L 25.6 397.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 276.266 398.134C 276.222 398.178 276.178 399.022 276.534 398.666C 276.578 398.622 276.622 397.778 276.266 398.134z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 430.4 397.6C 429.611 398.783 429.6 398.562 429.6 400C 431.013 399.217 431.164 399.022 430.4 397.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 559.2 397.6L 560 398.4L 559.2 397.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 562.4 397.6L 563.2 398.4L 562.4 397.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 113.6 398.4L 114.4 399.2L 113.6 398.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 563.2 398.4L 564 399.2L 563.2 398.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 111.466 399.734C 111.422 399.778 111.378 400.622 111.734 400.266C 111.778 400.222 111.822 399.378 111.466 399.734M 275.2 399.2L 276 400L 275.2 399.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 426.666 399.734C 426.622 399.778 426.578 400.622 426.934 400.266C 426.978 400.222 427.022 399.378 426.666 399.734z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 193.066 400.534C 193.022 400.578 192.978 401.422 193.334 401.066C 193.378 401.022 193.422 400.178 193.066 400.534z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 274.4 400L 275.2 400.8L 274.4 400z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 275.2 400L 276 400.8L 275.2 400z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 354.666 400.534C 354.622 400.578 354.578 401.422 354.934 401.066C 354.978 401.022 355.022 400.178 354.666 400.534z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 429.334 400.266C 428.978 400.622 429.822 400.578 429.866 400.534C 430.222 400.178 429.378 400.222 429.334 400.266z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 26.4 400.8L 27.2 401.6L 26.4 400.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 110.4 400.8L 110.4 403.2L 111.2 403.2C 110.999 402.038 110.948 401.798 110.4 400.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 353.6 400.8L 353.6 403.2L 354.4 403.2C 354.199 402.038 354.148 401.798 353.6 400.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 425.866 401.334C 425.822 401.378 425.778 402.222 426.134 401.866C 426.178 401.822 426.222 400.978 425.866 401.334z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 274.4 401.6L 275.2 402.4L 274.4 401.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 27.2 402.4C 27.3407 403.902 27.5506 404.959 28 406.4L 28.8 406.4C 28.6339 405.071 28.4037 405.168 29.6 404.8C 28.822 403.784 28.2159 403.178 27.2 402.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 192.266 402.934C 192.222 402.978 192.178 403.822 192.534 403.466C 192.578 403.422 192.622 402.578 192.266 402.934z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 273.6 402.4C 272.811 403.583 272.8 403.362 272.8 404.8C 273.831 403.646 273.921 403.813 273.6 402.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 563.2 402.4C 564.123 404.199 564.601 404.677 566.4 405.6C 565.336 404.198 564.602 403.464 563.2 402.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 266.4 404L 266.4 404.8C 268.03 404.656 268.358 404.669 269.6 405.6C 269.6 403.21 268.598 403.337 266.4 404z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 428 403.2L 428 405.6L 428.8 405.6C 428.599 404.438 428.548 404.198 428 403.2M 34.1334 404.266C 33.7778 404.622 34.6222 404.578 34.6666 404.534C 35.0222 404.178 34.1778 404.222 34.1334 404.266M 109.866 404.534C 109.822 404.578 109.778 405.422 110.134 405.066C 110.178 405.022 110.222 404.178 109.866 404.534z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 266.4 408.8C 269.313 407.809 270.967 406.462 272.8 404C 269.996 405.087 268.239 406.423 266.4 408.8M 565.6 404L 565.6 404.8C 567.285 405.315 568.636 405.525 570.4 405.6L 570.4 404.8L 565.6 404z\" />\r\n            <path style=\"stroke:none; fill:#010101\"\r\n                d=\"M 29.6 404.8C 32.823 409.91 31.555 417.33 36.087 421.377C 38.3345 423.384 46.842 423.407 46.955 426.518C 47.2212 433.849 36.1011 432.356 34.0982 437.051C 32.1034 441.727 38.9196 443.439 39.2278 447.271C 39.4684 450.263 36.2397 453.499 36 456.8L 41.6 457.6C 39.511 466.819 38.7909 473.354 51.2 470.4C 52.5966 473.365 54.6085 475.698 54.2815 479.2C 53.92 483.071 49.408 487.599 53.6 490.4C 53.9852 484.594 59.5766 475.145 53.4173 470.426C 50.0626 467.857 44.588 471.053 42.1889 467.081C 39.2066 462.143 46.9588 456.704 37.6 455.2C 45.4254 446.205 39.6608 445.808 35.2 437.6C 42.2826 435.747 49.3274 433.433 51.2 425.6C 57.2333 427.037 67.519 428.946 73.6 427.78C 78.9893 426.747 83.016 422.379 88.8 422.504C 95.2256 422.642 95.8808 427.044 100.815 429.577C 103.516 430.964 106.766 429.958 109.6 429.6L 109.6 428C 100.931 428.148 98.1944 420.982 89.6 420.812C 82.7752 420.678 78.3056 424.694 72 425.929C 64.5021 427.398 48.7152 424.531 41.6 421.806C 32.852 418.455 37.4282 405.424 29.6 404.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 33.6 404.8L 35.2 408L 36 408C 35.4612 406.162 35.2278 405.781 33.6 404.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 35.2 404.8L 36 405.6L 35.2 404.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 266.4 404.8L 266.4 407.2L 267.2 407.2C 266.999 406.038 266.948 405.798 266.4 404.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 269.6 404.8L 270.4 405.6L 269.6 404.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 424.8 404.8L 425.6 405.6L 424.8 404.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 26.9334 405.866C 26.5778 406.222 27.4222 406.178 27.4666 406.134C 27.8222 405.778 26.9778 405.822 26.9334 405.866z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 356.8 407.2L 360 406.4C 358.363 405.799 357.923 405.875 356.8 407.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 375.2 405.6L 375.2 406.4L 378.4 406.4C 377.195 405.854 376.548 405.739 375.2 405.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 402.4 405.6L 402.4 406.4L 405.6 406.4C 404.395 405.854 403.748 405.739 402.4 405.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 424 405.6L 424.8 406.4L 424 405.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 569.6 405.6L 569.6 406.4L 572 406.4C 571.002 405.852 570.761 405.801 569.6 405.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 25.6 406.4L 26.4 407.2L 25.6 406.4z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 24.8 410.4C 27.5796 409.938 28.3388 409.179 28.8 406.4C 26.405 407.163 25.7702 408.088 24.8 410.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 28.8 406.4L 28.8 408.8L 29.6 408.8C 29.399 407.638 29.3478 407.398 28.8 406.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 31.4666 406.934C 31.4222 406.978 31.3778 407.822 31.7334 407.466C 31.7778 407.422 31.8222 406.578 31.4666 406.934z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 34.4 406.4L 34.4 410.4L 35.2 410.4C 35.1299 408.829 35.0231 407.815 34.4 406.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 36.2666 406.934C 36.2222 406.978 36.1778 407.822 36.5334 407.466C 36.5778 407.422 36.6222 406.578 36.2666 406.934z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 357.6 406.4L 357.6 407.2L 360 407.2C 359.002 406.652 358.762 406.601 357.6 406.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 360 406.4L 360.8 407.2L 360 406.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 374.4 406.4C 373.451 407.349 373.178 407.667 372.8 408.8C 374.038 407.79 374.246 407.845 374.4 406.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 373.6 408.8L 376.8 408.8L 376.8 420.8L 378.4 420.8L 378.4 406.4C 376.126 406.737 375.19 407.151 373.6 408.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 378.666 406.934C 378.622 406.978 378.578 407.822 378.934 407.466C 378.978 407.422 379.022 406.578 378.666 406.934z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 400.8 406.4L 400.8 412L 401.6 412C 401.688 410.046 401.942 408.302 402.4 406.4L 400.8 406.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 406.134 406.666C 405.778 407.022 406.622 406.978 406.666 406.934C 407.022 406.578 406.178 406.622 406.134 406.666z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 407.2 406.4L 407.2 408.8L 408 408.8C 407.799 407.638 407.748 407.398 407.2 406.4M 427.2 406.4C 426.434 407.614 426.09 408.27 425.6 409.6C 426.904 408.388 427.33 408.116 427.2 406.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 571.734 406.666C 571.378 407.022 572.222 406.978 572.266 406.934C 572.622 406.578 571.778 406.622 571.734 406.666z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 572.8 406.4L 573.6 407.2L 572.8 406.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 576.8 406.4L 577.6 407.2L 576.8 406.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 109.066 407.734C 109.022 407.778 108.978 408.622 109.334 408.266C 109.378 408.222 109.422 407.378 109.066 407.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 356.8 407.2L 357.6 408L 356.8 407.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 360.8 407.2L 361.6 408L 360.8 407.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 573.6 407.2L 574.4 408L 573.6 407.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 577.6 407.2L 578.4 408L 577.6 407.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 35.2 408L 35.2 410.4L 36 410.4C 35.799 409.238 35.7478 408.998 35.2 408M 354.666 408.534C 354.622 408.578 354.578 409.422 354.934 409.066C 354.978 409.022 355.022 408.178 354.666 408.534z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 360.8 408L 361.6 408.8L 360.8 408z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 378.4 408L 378.4 412.8L 379.2 412.8C 379.162 410.998 379.099 409.642 378.4 408z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 404 408L 403.2 411.2L 406.4 412.8C 405.833 410.87 405.258 409.559 404 408z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 578.4 408L 578.4 411.2L 579.2 411.2C 579.061 409.852 578.946 409.205 578.4 408M 353.6 408.8L 352.8 413.6L 353.6 413.6C 354.15 411.665 354.338 410.658 353.6 408.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 372 408.8L 372.8 409.6L 372 408.8z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 375.2 408.8C 373.834 411.038 372.882 412.578 372.8 415.2C 370.664 416.498 369.775 418.822 367.2 419.2C 367.2 423.37 357.71 435.887 353.6 438C 351.327 439.168 347.616 438.25 345.734 440.134C 341.105 444.762 346.668 450.379 336.8 449.6L 336.8 450.4C 338.332 451.422 337.668 451.422 339.2 450.4C 335.666 454.482 337.192 459.174 334.482 462.95C 333.184 464.758 330.704 464.972 329.271 466.65C 327.224 469.05 327.43 472.586 325.265 475.03C 323.478 477.047 320.054 477.822 318.882 480.312C 317.106 484.093 319.091 489.63 319.188 493.6C 319.437 503.758 315.498 512.679 319.2 522.4C 329.97 522.49 336.702 534.522 337.6 544.8C 340.963 542.229 343.866 539.08 345.6 535.2C 351.45 536.406 362.37 536.513 366.937 540.411C 374.638 546.986 367.98 556.457 381.599 556.566C 389.031 556.625 386.512 548.823 390.082 545.282C 392.163 543.218 396.532 544 399.2 544C 399.19 540.235 398.477 536.504 399.2 532.8C 404.665 533.862 409.03 530.678 414.4 530.4C 413.632 520.673 415.752 512.051 415.988 502.4C 416.221 492.895 414.43 482.157 416.182 472.812C 417.192 467.43 423.177 464.25 428 465.6C 426.524 457.991 425.666 448.311 421.59 441.612C 419.345 437.922 415.139 436.478 412.8 432.8C 414.867 432.542 416.482 432.022 418.4 431.2C 417.531 429.541 408.278 420.021 407.153 419.99C 400.671 419.812 392.526 422.907 385.6 423.232C 383.463 423.333 379.943 424.727 378.082 423.258C 375.235 421.01 376.8 412.101 376.8 408.8L 375.2 408.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 407.466 409.334C 407.422 409.378 407.378 410.222 407.734 409.866C 407.778 409.822 407.822 408.978 407.466 409.334z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 422.4 410.4L 424.8 410.4L 424 408.8C 422.692 409.236 422.836 409.092 422.4 410.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 424.534 409.066C 424.178 409.422 425.022 409.378 425.066 409.334C 425.422 408.978 424.578 409.022 424.534 409.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 28 409.6L 28.8 410.4L 28 409.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 108 409.6L 107.2 414.4L 108 414.4C 108.31 412.586 108.541 411.331 108 409.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 191.466 410.134C 191.422 410.178 191.378 411.022 191.734 410.666C 191.778 410.622 191.822 409.778 191.466 410.134z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 420.8 409.6L 420.8 411.2L 422.4 411.2L 422.4 409.6L 420.8 409.6M 26.1334 410.666C 25.7778 411.022 26.6222 410.978 26.6666 410.934C 27.0222 410.578 26.1778 410.622 26.1334 410.666z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 32 410.4L 32.8 411.2L 32 410.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 34.4 410.4L 35.2 411.2L 34.4 410.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 267.2 410.4L 268 411.2L 267.2 410.4M 370.4 410.4L 369.6 412C 370.61 411.223 370.714 411.445 370.4 410.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 419.2 410.4L 419.2 412.8C 420.156 411.822 420.253 411.664 420.8 410.4L 419.2 410.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 31.2 411.2L 31.2 416.8L 32 416.8C 31.985 414.766 31.9876 413.066 31.2 411.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 32 411.2C 31.9491 413.662 31.6497 415.98 31.2 418.4C 34.9642 421.85 36.477 427.163 42.4 425.6C 36.16 420.875 34.8738 417.983 32 411.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 266.4 411.2L 267.2 412L 266.4 411.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 370.4 411.2L 371.2 412L 370.4 411.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 404.266 411.734C 404.222 411.778 404.178 412.622 404.534 412.266C 404.578 412.222 404.622 411.378 404.266 411.734z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 417.6 411.2L 417.6 412.8L 419.2 412.8L 419.2 411.2L 417.6 411.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 22.4 412L 23.2 412.8L 22.4 412z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 190.4 412L 191.2 412.8L 190.4 412z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 265.866 412.534C 265.822 412.578 265.778 413.422 266.134 413.066C 266.178 413.022 266.222 412.178 265.866 412.534z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 358.4 412L 359.2 412.8L 358.4 412M 360.8 412L 361.6 412.8L 360.8 412z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 406.4 412L 405.6 413.6L 407.2 413.6C 407.2 412.118 407.44 412.52 406.4 412z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 113.6 413.6L 113.6 414.4L 118.4 414.4C 116.621 413.145 115.765 413.213 113.6 413.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 117.6 412.8L 117.6 413.6L 120.8 414.4L 120.8 413.6L 117.6 412.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 119.734 413.066C 119.378 413.422 120.222 413.378 120.266 413.334C 120.622 412.978 119.778 413.022 119.734 413.066z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 173.6 412.8L 173.6 414.4C 174.908 413.964 174.764 414.108 175.2 412.8L 173.6 412.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 265.066 413.334C 265.022 413.378 264.978 414.222 265.334 413.866C 265.378 413.822 265.422 412.978 265.066 413.334z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 350.4 412.8L 351.2 413.6L 350.4 412.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 353.6 412.8L 354.4 413.6L 353.6 412.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 358.4 412.8L 359.2 413.6L 358.4 412.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 364 412.8L 364 413.6L 368 413.6C 366.585 412.977 365.571 412.87 364 412.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 368 412.8L 368.8 413.6L 368 412.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 407.2 412.8L 405.6 413.6L 405.6 414.4C 407.09 414.114 407.795 414.18 407.2 412.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 418.134 413.066C 417.778 413.422 418.622 413.378 418.666 413.334C 419.022 412.978 418.178 413.022 418.134 413.066z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 576.8 412.8L 576.8 417.6L 577.6 417.6C 577.562 415.798 577.499 414.442 576.8 412.8M 349.866 414.134C 349.822 414.178 349.778 415.022 350.134 414.666C 350.178 414.622 350.222 413.778 349.866 414.134M 357.6 413.6L 358.4 414.4L 357.6 413.6M 361.6 413.6L 362.4 414.4L 361.6 413.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 364.8 413.6L 364.8 414.4L 368 414.4C 366.795 413.854 366.148 413.739 364.8 413.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 371.466 414.134C 371.422 414.178 371.378 415.022 371.734 414.666C 371.778 414.622 371.822 413.778 371.466 414.134z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 372.266 414.134C 372.222 414.178 372.178 415.022 372.534 414.666C 372.578 414.622 372.622 413.778 372.266 414.134z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 408 413.6L 408 414.4L 414.4 414.4C 412.31 413.522 410.269 413.606 408 413.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 112.8 414.4L 113.6 415.2L 112.8 414.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 120.8 414.4L 121.6 415.2L 120.8 414.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 176 414.4L 176.8 415.2L 176 414.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 262.4 414.4C 262.725 416.074 262.574 416.016 264 416.8C 263.447 415.69 263.212 415.311 262.4 414.4M 356.8 414.4L 357.6 415.2L 356.8 414.4z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 364.8 414.4L 364.8 415.2L 367.2 415.2C 366.202 414.652 365.962 414.601 364.8 414.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 370.134 414.666C 369.778 415.022 370.622 414.978 370.666 414.934C 371.022 414.578 370.178 414.622 370.134 414.666z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 111.2 415.2L 112 416L 111.2 415.2M 350.4 415.2L 350.4 416L 356.8 416C 354.71 415.122 352.668 415.206 350.4 415.2M 362.4 415.2C 361.947 417.675 361.205 419.83 363.2 421.6L 363.2 422.4C 360.183 426.365 358.227 430.872 354.369 434.282C 351.519 436.799 347.818 436.014 345.023 438.194C 341.98 440.566 342.416 445.382 341.6 448.8C 334.233 446.703 335.111 455.111 328 455.196C 318.601 455.308 317.351 444.675 308.001 442.812C 304.233 442.062 299.7 447.473 297.641 446.352C 294.252 444.506 294.892 439.005 292.914 436.167C 290.601 432.849 286.358 431.58 283.454 428.961C 279.21 425.134 279.815 421.755 273.6 419.2C 276.324 427.861 286.669 431.302 291.314 438.472C 293.52 441.878 292.942 447.47 297.631 448.959C 301.815 450.288 303.094 444.506 307.212 444.83C 314.514 445.405 314.859 451.769 319.583 455.518C 324.941 459.768 333.274 453.167 333.6 463.2C 326.044 463.615 327.863 468.652 324.097 473.38C 321.96 476.063 318.068 476.385 317.051 480.034C 315.181 486.746 317.688 492.614 317.496 499.2C 317.34 504.565 315.291 509.888 314.692 515.2C 313.917 522.076 318.103 525.638 309.6 528.8C 309.573 536.509 306.2 534.045 302.4 538.4C 312.506 537.314 310.99 529.288 320 524.8C 315.106 514.768 319.616 507.314 319.169 496.8C 318.959 491.875 316.783 485.776 318.882 480.97C 320.045 478.31 323.363 477.674 325.265 475.688C 327.551 473.299 327.328 469.842 329.271 467.318C 330.782 465.354 333.67 465.05 334.934 462.95C 336.779 459.886 336.085 453.288 336.8 449.6C 345.466 451.107 341.894 444.679 346.623 440.347C 349.272 437.92 353.137 438.796 355.928 436.546C 361.059 432.409 363.875 425.523 367.2 420L 364.8 419.2C 364.364 420.508 364.508 420.364 363.2 420.8C 363.081 418.822 363.115 417.03 362.4 415.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 364.8 415.2L 364.8 416L 367.2 416.8C 366.222 415.844 366.064 415.747 364.8 415.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 366.4 415.2L 367.2 416L 366.4 415.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 369.6 415.2L 368 420C 369.934 418.655 370.467 417.442 371.2 415.2L 369.6 415.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 378.4 415.2L 378.4 418.4L 379.2 418.4C 379.061 417.052 378.946 416.405 378.4 415.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 403.2 415.2L 403.2 417.6L 404 417.6C 403.799 416.439 403.748 416.198 403.2 415.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 115.2 416L 116 416.8L 115.2 416z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 111.2 426.4C 111.038 431.955 102.657 430.874 98.4 432C 96.0064 414.454 79.5333 428.486 69.6 428.782C 64.8015 428.924 55.8643 425.378 51.6543 427.17C 49.5494 428.066 48.379 431.255 46.5821 432.729C 42.903 435.745 39.5575 436.297 35.2 437.6C 36.5594 441.25 44.8259 445.369 43.6055 449.35C 42.9827 451.381 40.1006 452.146 39.2 454.4C 45.917 459.017 38.8278 463.109 42.1864 467.714C 44.8395 471.352 50.0443 466.583 53.2852 468.17C 62.8062 472.831 54.4045 485.252 54.4 492C 60.0998 491.035 70.3619 489.018 68.8 481.6C 70.064 481.053 70.2218 480.956 71.2 480C 76.3622 483.014 80.776 472.566 83.2 468.8C 88.708 470.542 92.9128 468.77 98.4 469.176C 104.849 469.653 111.066 471.662 117.6 470.4C 118.238 473.19 119.624 476.334 118.718 479.2C 117.27 483.775 112.315 486.358 116 491.2C 123.106 484.466 137.739 485.776 145.6 489.6C 153.269 476.119 159.923 492.96 161.6 500C 169.047 498.678 175.971 494.726 178.4 504.8C 183.59 502.992 182.922 499.143 186.05 495.512C 187.778 493.506 190.674 492.792 191.91 490.316C 193.089 487.955 192.225 485.725 194.53 483.842C 196.824 481.97 205.138 479.724 205.663 476.665C 206.228 473.369 198.961 473.364 197.926 470.313C 196.841 467.118 199.199 460.498 199.2 456.8C 191.159 456.966 177.542 460.418 170.666 454.526C 167.45 451.77 171.115 444.498 171.188 440.8C 171.312 434.474 167.702 426.895 164.062 421.771C 156.09 410.548 139.11 424.796 129.615 423.018C 124.722 422.101 121.765 415.407 116.047 416.545C 111.598 417.43 113.394 423.504 111.2 426.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 118.934 416.266C 118.578 416.622 119.422 416.578 119.466 416.534C 119.822 416.178 118.978 416.222 118.934 416.266z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 144.534 416.266C 144.178 416.622 145.022 416.578 145.066 416.534C 145.422 416.178 144.578 416.222 144.534 416.266z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 365.866 416.534C 365.822 416.578 365.778 417.422 366.134 417.066C 366.178 417.022 366.222 416.178 365.866 416.534z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 368.8 416L 369.6 416.8L 368.8 416z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 120 416.8L 120.8 417.6L 120 416.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 124.8 416.8L 124.8 417.6L 128 419.2C 127.019 417.572 126.638 417.339 124.8 416.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 174.4 416.8L 175.2 417.6L 174.4 416.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 262.4 416.8L 262.4 417.6L 264.8 417.6C 263.802 417.052 263.562 417.001 262.4 416.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 265.334 417.066C 264.978 417.422 265.822 417.378 265.866 417.334C 266.222 416.978 265.378 417.022 265.334 417.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 408 416.8L 408 417.6L 411.2 417.6L 412 421.6C 412.826 418.494 410.866 417.267 408 416.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 108.266 418.134C 108.222 418.178 108.178 419.022 108.534 418.666C 108.578 418.622 108.622 417.778 108.266 418.134z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 120.8 417.6L 121.6 418.4L 120.8 417.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 121.6 417.6L 122.4 418.4L 121.6 417.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 147.734 417.866C 147.378 418.222 148.222 418.178 148.266 418.134C 148.622 417.778 147.778 417.822 147.734 417.866z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 148.8 417.6L 148.8 418.4L 159.2 418.4C 156.033 417.071 152.21 417.6 148.8 417.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 173.6 417.6L 174.4 418.4L 173.6 417.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 273.866 418.134C 273.822 418.178 273.778 419.022 274.134 418.666C 274.178 418.622 274.222 417.778 273.866 418.134z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 274.4 417.6C 274.947 418.864 275.044 419.022 276 420C 275.453 418.736 275.356 418.578 274.4 417.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 400 418.4L 400 419.2C 401.698 418.954 402.149 418.894 403.2 417.6L 400 418.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 408.8 417.6L 408.8 418.4L 411.2 419.2C 410.416 417.774 410.474 417.925 408.8 417.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 412.266 418.134C 412.222 418.178 412.178 419.022 412.534 418.666C 412.578 418.622 412.622 417.778 412.266 418.134z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 412.8 417.6L 412.8 421.6L 413.6 421.6C 413.53 420.029 413.423 419.015 412.8 417.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 576.8 417.6L 576.8 420.8L 577.6 420.8C 577.461 419.452 577.346 418.805 576.8 417.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 32 418.4L 32.8 419.2L 32 418.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 160 418.4L 160.8 419.2L 160 418.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 172 418.4L 172.8 419.2L 172 418.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 271.2 418.4L 270.4 420L 272 420C 272 418.518 272.24 418.92 271.2 418.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 360.8 418.4L 361.6 419.2L 360.8 418.4M 364.8 418.4L 365.6 419.2L 364.8 418.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 394.4 420L 394.4 420.8L 400 419.2C 397.862 418.561 396.454 419.138 394.4 420z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 94.4 419.2L 94.4 420L 96.8 420C 95.8016 419.452 95.5608 419.401 94.4 419.2M 105.6 419.2L 106.4 420L 105.6 419.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 161.6 419.2L 162.4 420L 161.6 419.2M 165.6 419.2L 166.4 420L 165.6 419.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 171.2 419.2L 171.2 420.8C 172.508 420.364 172.364 420.508 172.8 419.2L 171.2 419.2M 274.4 419.2L 275.2 420L 274.4 419.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 359.2 420L 359.2 420.8C 360.383 421.589 360.162 421.6 361.6 421.6L 361.6 419.2C 360.162 419.2 360.383 419.211 359.2 420z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 398.934 419.466C 398.578 419.822 399.422 419.778 399.466 419.734C 399.822 419.378 398.978 419.422 398.934 419.466z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 400 419.2L 400 420L 402.4 420C 401.402 419.452 401.162 419.401 400 419.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 404.8 419.2L 404.8 420L 407.2 420C 406.202 419.452 405.962 419.401 404.8 419.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 89.6 420L 89.6 420.8L 92 420.8C 91.0016 420.252 90.7608 420.201 89.6 420z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 93.6 420L 93.6 420.8L 96 420.8C 95.0016 420.252 94.7608 420.201 93.6 420z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 96 420C 94.8176 420.789 95.0376 420.8 93.6 420.8L 93.6 421.6C 95.1552 421.487 96.672 421.628 96 420M 125.6 420L 126.4 420.8L 125.6 420z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 170.4 420L 171.2 420.8L 170.4 420z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 270.134 420.266C 269.778 420.622 270.622 420.578 270.666 420.534C 271.022 420.178 270.178 420.222 270.134 420.266z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 367.2 420L 368 420.8L 367.2 420z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 378.666 420.534C 378.622 420.578 378.578 421.422 378.934 421.066C 378.978 421.022 379.022 420.178 378.666 420.534z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 387.2 420L 387.2 420.8L 390.4 420.8C 389.195 420.254 388.548 420.139 387.2 420z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 396 420L 396.8 420.8L 396 420z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 396.8 420L 397.6 420.8L 396.8 420z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 397.6 420L 397.6 420.8L 400.8 420.8C 399.595 420.254 398.948 420.139 397.6 420z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 33.8666 421.334C 33.8222 421.378 33.7778 422.222 34.1334 421.866C 34.1778 421.822 34.2222 420.978 33.8666 421.334z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 106.666 421.334C 106.622 421.378 106.578 422.222 106.934 421.866C 106.978 421.822 107.022 420.978 106.666 421.334z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 125.6 420.8C 126.036 422.108 125.892 421.964 127.2 422.4L 127.2 420.8L 125.6 420.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 140.8 420.8L 141.6 421.6L 140.8 420.8M 169.334 421.066C 168.978 421.422 169.822 421.378 169.866 421.334C 170.222 420.978 169.378 421.022 169.334 421.066z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 382.934 421.066C 382.578 421.422 383.422 421.378 383.466 421.334C 383.822 420.978 382.978 421.022 382.934 421.066z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 384 420.8L 384 421.6L 394.4 421.6C 391.233 420.271 387.41 420.8 384 420.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 125.6 421.6L 126.4 422.4L 125.6 421.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 127.734 421.866C 127.378 422.222 128.222 422.178 128.266 422.134C 128.622 421.778 127.778 421.822 127.734 421.866M 136.8 423.2C 138.064 422.653 138.222 422.556 139.2 421.6C 137.526 421.925 137.584 421.774 136.8 423.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 139.2 421.6L 140 422.4L 139.2 421.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 140 421.6L 140.8 422.4L 140 421.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 272.8 421.6L 273.6 422.4L 272.8 421.6z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 279.2 515.2C 287.721 507.898 294.4 524.154 294.4 530.4C 298.922 530.266 301.02 527.531 305.028 526.442C 309.63 525.191 312.183 527.003 316.8 524C 314.166 514.345 316.676 505.917 316.785 496C 316.842 490.826 315.285 485.074 317.282 480.034C 318.542 476.854 321.976 476.476 323.9 474.002C 327.698 469.117 327.082 464.368 333.6 461.6C 332.972 453.542 325.586 459.3 320.939 456.194C 315.212 452.366 315.258 445.571 307.212 444.58C 302.917 444.05 301.058 450.635 296.883 448.159C 292.742 445.702 293.541 440.397 290.789 437.04C 288.242 433.934 283.867 433.059 281.39 430.068C 279.293 427.534 279.196 422.145 274.515 422.594C 271.618 422.87 272.043 427.29 270.053 428.85C 267.939 430.505 264.853 429.992 263.086 432.251C 261.024 434.889 262.22 438.63 260.206 441.3C 257.776 444.523 252.77 446.802 252.31 451.336C 251.665 457.677 260.886 461.258 263.363 466.403C 267.202 474.375 269.447 481.713 271.009 490.4C 271.503 493.15 269.686 495.69 270.238 498.329C 271.394 503.846 275.322 511.026 279.2 515.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 362.4 421.6L 363.2 422.4L 362.4 421.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 34.4 422.4L 35.2 423.2L 34.4 422.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 77.6 422.4L 77.6 423.2L 80 423.2C 79.0014 422.652 78.7612 422.601 77.6 422.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 82.4 424.8L 87.2 423.2C 85.0232 422.554 83.7664 423 82.4 424.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 87.7336 422.666C 87.3776 423.022 88.2224 422.978 88.2664 422.934C 88.6224 422.578 87.7776 422.622 87.7336 422.666M 90.9336 422.666C 90.5776 423.022 91.4224 422.978 91.4664 422.934C 91.8224 422.578 90.9776 422.622 90.9336 422.666z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 127.2 422.4L 127.2 423.2L 129.6 423.2C 128.602 422.652 128.362 422.601 127.2 422.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 129.6 422.4L 129.6 423.2L 136.8 423.2C 134.488 422.23 132.101 422.402 129.6 422.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 138.4 422.4L 139.2 423.2L 138.4 422.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 164.8 422.4C 165.141 424.375 165.706 426.116 166.4 428L 167.2 428C 166.934 425.545 166.493 424.195 164.8 422.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 272 422.4L 272.8 423.2L 272 422.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 361.866 422.934C 361.822 422.978 361.778 423.822 362.134 423.466C 362.178 423.422 362.222 422.578 361.866 422.934z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 570.4 422.4L 571.2 423.2L 570.4 422.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 577.6 422.4L 578.4 423.2L 577.6 422.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 578.4 422.4L 579.2 423.2L 578.4 422.4M 35.2 423.2L 36 424L 35.2 423.2z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 39.2 423.2L 40 424L 39.2 423.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 74.4 423.2L 74.4 424L 76.8 424C 75.8014 423.452 75.5612 423.401 74.4 423.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 76.8 423.2L 77.6 424L 76.8 423.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 86.4 423.2L 87.2 424L 86.4 423.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 95.2 423.2L 96 424L 95.2 423.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 277.6 423.2L 278.4 424L 277.6 423.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 376.8 423.2L 376.8 424L 379.2 424C 378.202 423.452 377.962 423.401 376.8 423.2M 381.6 423.2L 382.4 424L 381.6 423.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 410.4 423.2L 410.4 425.6L 411.2 425.6C 410.999 424.438 410.948 424.198 410.4 423.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 575.2 423.2L 576 424L 575.2 423.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 576 423.2L 576 424L 578.4 424C 577.401 423.452 577.162 423.401 576 423.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 40 424L 40 424.8L 43.2 424.8C 41.9952 424.254 41.3482 424.139 40 424z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 43.2 424L 43.2 424.8C 45.2378 425.898 45.75 426.574 46.4 428.8C 48.4971 425.563 46.5313 424.26 43.2 424z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 72.8 424L 73.6 424.8L 72.8 424z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 71.2 425.6L 71.2 426.4C 72.9378 426.029 74.3666 425.516 76 424.8C 74.1038 424.329 73.0346 424.836 71.2 425.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 81.3336 424.266C 80.9776 424.622 81.8224 424.578 81.8664 424.534C 82.2224 424.178 81.3776 424.222 81.3336 424.266z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 83.2 424L 83.2 424.8L 85.6 424.8C 84.6016 424.252 84.3608 424.201 83.2 424M 96 424L 96.8 424.8L 96 424z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 111.2 424L 111.2 426.4L 112 426.4C 111.799 425.238 111.748 424.998 111.2 424z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 112 424L 112 426.4L 112.8 426.4C 112.599 425.238 112.548 424.998 112 424z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 378.934 424.266C 378.578 424.622 379.422 424.578 379.466 424.534C 379.822 424.178 378.978 424.222 378.934 424.266M 572.8 424L 572.8 424.8L 577.6 424.8C 575.958 424.101 574.602 424.038 572.8 424z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 42.4 424.8L 43.2 425.6L 42.4 424.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 572 424.8L 572.8 425.6L 572 424.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 51.2 425.6L 52 426.4L 51.2 425.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 52 425.6L 52.8 426.4L 52 425.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 271.2 425.6L 268.8 429.6C 270.999 428.834 271.841 427.926 271.2 425.6M 571.2 425.6L 572 426.4L 571.2 425.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 53.6 426.4L 54.4 427.2L 53.6 426.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 54.4 426.4L 54.4 427.2L 58.4 428C 56.9692 426.862 56.2354 426.642 54.4 426.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 57.6 426.4L 57.6 427.2C 59.7832 427.848 61.7204 427.983 64 428L 64 426.4L 57.6 426.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 281.6 426.4L 281.6 428.8L 282.4 428.8C 282.199 427.638 282.148 427.398 281.6 426.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 411.734 426.666C 411.378 427.022 412.222 426.978 412.266 426.934C 412.622 426.578 411.778 426.622 411.734 426.666z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 417.6 426.4L 418.4 427.2L 417.6 426.4M 55.7334 427.466C 55.3778 427.822 56.2222 427.778 56.2666 427.734C 56.6222 427.378 55.7778 427.422 55.7334 427.466z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 64 427.2L 64 428L 67.2 428C 65.9952 427.454 65.3482 427.339 64 427.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 107.2 427.2L 107.2 428L 109.6 428C 108.602 427.452 108.362 427.401 107.2 427.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 111.2 427.2L 112 428L 111.2 427.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 167.2 427.2L 167.2 429.6L 168 429.6C 167.799 428.438 167.748 428.198 167.2 427.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 412.8 427.2L 412.8 428L 415.2 428C 414.202 427.452 413.962 427.401 412.8 427.2M 570.4 427.2L 571.2 428L 570.4 427.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 64 428L 64 428.8L 73.6 428.8C 70.642 427.558 67.1866 428 64 428z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 73.6 428L 74.4 428.8L 73.6 428z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 97.6 428L 97.6 430.4L 98.4 430.4C 98.1992 429.239 98.148 428.998 97.6 428z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 98.4 428C 98.5688 430.191 98.6424 430.738 100.8 431.2C 100.051 429.641 99.6864 429.16 98.4 428M 263.2 428L 263.2 428.8L 266.4 428.8C 265.195 428.254 264.548 428.139 263.2 428z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 354.4 434.4C 356.53 432.76 357.85 431.127 359.2 428.8C 356.499 430.13 355.376 431.556 354.4 434.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 416.8 428.8L 417.6 429.6L 416.8 428.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 44.5334 429.866C 44.1778 430.222 45.0222 430.178 45.0666 430.134C 45.4222 429.778 44.5778 429.822 44.5334 429.866z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 106.4 429.6L 106.4 430.4L 111.2 430.4C 109.558 429.701 108.202 429.638 106.4 429.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 168 429.6L 168.8 430.4L 168 429.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 43.2 430.4L 43.2 432C 44.5081 431.564 44.3639 431.708 44.8 430.4L 43.2 430.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 44.8 430.4L 45.6 431.2L 44.8 430.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 101.334 430.666C 100.978 431.022 101.822 430.978 101.866 430.934C 102.222 430.578 101.378 430.622 101.334 430.666z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 107.2 430.4L 107.2 431.2L 109.6 431.2C 108.602 430.652 108.362 430.601 107.2 430.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 263.2 430.4L 264 431.2L 263.2 430.4M 566.666 430.934C 566.622 430.978 566.578 431.822 566.934 431.466C 566.978 431.422 567.022 430.578 566.666 430.934z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 44 431.2L 44.8 432L 44 431.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 98.4 431.2L 98.4 432L 100.8 432C 99.8016 431.452 99.5608 431.401 98.4 431.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 171.2 431.2L 172 432L 171.2 431.2M 282.4 431.2L 283.2 432L 282.4 431.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 42.4 432L 43.2 432.8L 42.4 432z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 288 432C 288.436 433.308 288.292 433.164 289.6 433.6L 289.6 432L 288 432M 420 432L 419.2 433.6L 420.8 433.6C 420.8 432.118 421.04 432.52 420 432z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 565.6 432L 566.4 432.8L 565.6 432z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 566.666 432.534C 566.622 432.578 566.578 433.422 566.934 433.066C 566.978 433.022 567.022 432.178 566.666 432.534z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 33.6 433.6L 33.6 434.4L 36.8 433.6C 35.3526 433.141 35.145 433.228 33.6 433.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 172 432.8L 172.8 433.6L 172 432.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 413.066 433.334C 413.022 433.378 412.978 434.222 413.334 433.866C 413.378 433.822 413.422 432.978 413.066 433.334z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 413.866 433.334C 413.822 433.378 413.778 434.222 414.134 433.866C 414.178 433.822 414.222 432.978 413.866 433.334z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 414.4 432.8C 414.451 435.194 414.357 436.277 416.8 436.8L 416.8 436C 415.956 434.621 415.971 434.463 416 432.8L 414.4 432.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 418.4 432.8L 419.2 433.6L 418.4 432.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 565.6 432.8L 566.4 433.6L 565.6 432.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 34.4 433.6L 35.2 434.4L 34.4 433.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 33.6 436L 38.4 435.2L 38.4 433.6C 36.0983 433.854 34.9325 434.096 33.6 436z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 38.4 433.6L 39.2 434.4L 38.4 433.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 39.2 433.6L 40 434.4L 39.2 433.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 44.8 433.6L 45.6 434.4L 44.8 433.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 173.066 434.134C 173.022 434.178 172.978 435.022 173.334 434.666C 173.378 434.622 173.422 433.778 173.066 434.134M 261.6 433.6L 262.4 434.4L 261.6 433.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 417.6 433.6L 418.4 434.4L 417.6 433.6M 564.8 433.6L 565.6 434.4L 564.8 433.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 565.6 433.6L 565.6 436L 566.4 436C 566.199 434.838 566.148 434.598 565.6 433.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 43.2 434.4L 44 435.2L 43.2 434.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 564.8 434.4L 564.8 436.8L 565.6 436.8C 565.399 435.639 565.348 435.398 564.8 434.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 42.1334 435.466C 41.7778 435.822 42.6222 435.778 42.6666 435.734C 43.0222 435.378 42.1778 435.422 42.1334 435.466z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 172.8 435.2L 172.8 441.6L 173.6 441.6C 173.594 439.332 173.678 437.29 172.8 435.2M 260.8 435.2L 260.8 437.6L 261.6 437.6C 261.399 436.438 261.348 436.198 260.8 435.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 564.266 435.734C 564.222 435.778 564.178 436.622 564.534 436.266C 564.578 436.222 564.622 435.378 564.266 435.734z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 40 436L 40.8 436.8L 40 436z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 41.3334 436.266C 40.9778 436.622 41.8222 436.578 41.8666 436.534C 42.2222 436.178 41.3778 436.222 41.3334 436.266z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 419.2 436L 420 436.8L 419.2 436z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 416.8 436.8L 417.6 437.6L 416.8 436.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 563.2 436.8L 563.2 439.2L 564 439.2C 563.799 438.038 563.748 437.798 563.2 436.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 564 436.8L 564.8 437.6L 564 436.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 260.8 437.6L 261.6 438.4L 260.8 437.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 260.8 438.4L 260.8 440.8L 261.6 440.8C 261.399 439.638 261.348 439.398 260.8 438.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 343.2 438.4L 344 439.2L 343.2 438.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 348 438.4L 348 439.2L 350.4 439.2C 349.402 438.652 349.162 438.601 348 438.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 563.2 439.2L 564 440L 563.2 439.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 562.666 440.534C 562.622 440.578 562.578 441.422 562.934 441.066C 562.978 441.022 563.022 440.178 562.666 440.534z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 36.8 440.8L 37.6 441.6L 36.8 440.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 260 440.8L 260.8 441.6L 260 440.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 294.666 441.334C 294.622 441.378 294.578 442.222 294.934 441.866C 294.978 441.822 295.022 440.978 294.666 441.334z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 172.8 441.6L 172.8 444L 173.6 444C 173.399 442.838 173.348 442.598 172.8 441.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 256 441.6L 256.8 442.4L 256 441.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 260 441.6L 260.8 442.4L 260 441.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 308 443.2C 309.264 442.653 309.422 442.556 310.4 441.6C 308.726 441.925 308.784 441.774 308 443.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 39.2 442.4L 40 443.2L 39.2 442.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 258.4 442.4L 259.2 443.2L 258.4 442.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 309.6 442.4L 309.6 443.2L 312.8 444L 312.8 443.2L 309.6 442.4M 344.266 443.734C 344.222 443.778 344.178 444.622 344.534 444.266C 344.578 444.222 344.622 443.378 344.266 443.734M 301.066 444.534C 301.022 444.578 300.978 445.422 301.334 445.066C 301.378 445.022 301.422 444.178 301.066 444.534z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 425.866 444.534C 425.822 444.578 425.778 445.422 426.134 445.066C 426.178 445.022 426.222 444.178 425.866 444.534z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 563.2 444C 562.051 445.16 561.508 445.778 560.8 447.2C 562.515 446.295 563.279 445.946 563.2 444z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 38.4 444.8L 39.2 445.6L 38.4 444.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 41.6 444.8L 42.4 445.6L 41.6 444.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 170.4 444.8L 170.4 448L 171.2 448C 171.061 446.652 170.946 446.005 170.4 444.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 255.2 444.8L 256 445.6L 255.2 444.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 344 444.8L 344 447.2L 344.8 447.2C 344.599 446.038 344.548 445.798 344 444.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 423.2 444.8L 424 450.4L 424.8 450.4C 424.686 448.152 424.473 446.651 423.2 444.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 564.266 445.334C 564.222 445.378 564.178 446.222 564.534 445.866C 564.578 445.822 564.622 444.978 564.266 445.334z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 39.2 445.6C 39.7469 446.864 39.8438 447.022 40.8 448C 40.2531 446.736 40.1562 446.578 39.2 445.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 42.4 445.6L 43.2 446.4L 42.4 445.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 254.4 445.6C 253.611 446.783 253.6 446.562 253.6 448C 254.631 446.846 254.721 447.013 254.4 445.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 426.666 446.134C 426.622 446.178 426.578 447.022 426.934 446.666C 426.978 446.622 427.022 445.778 426.666 446.134z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 563.2 445.6L 564 446.4L 563.2 445.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 42.4 446.4L 43.2 447.2L 42.4 446.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 43.2 446.4L 41.6 450.4C 44.0099 449.883 44.3984 448.49 43.2 446.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 422.666 446.934C 422.622 446.978 422.578 447.822 422.934 447.466C 422.978 447.422 423.022 446.578 422.666 446.934z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 562.4 446.4L 563.2 447.2L 562.4 446.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 563.2 446.4L 564 447.2L 563.2 446.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 44 447.2L 44 449.6L 44.8 449.6C 44.599 448.438 44.5478 448.198 44 447.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 210.4 457.6C 208.512 456.55 206.887 455.727 204.8 455.2C 208.986 463.498 217.011 453.14 222.972 451.62C 225.877 450.879 228.934 453.47 232 453.286C 238.647 452.883 245.366 450.457 252 449.6L 251.2 447.2C 245.151 448.801 238.295 450.875 232 450.989C 224.787 451.118 213.884 447.914 210.4 457.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 552.8 447.2L 553.6 448L 552.8 447.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 559.2 447.2L 560 448L 559.2 447.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 561.6 447.2L 561.6 450.4L 562.4 450.4C 562.429 448.737 562.444 448.579 561.6 447.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 562.4 447.2L 563.2 448L 562.4 447.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 169.6 448C 169.118 450.627 168.889 452.615 169.6 455.2L 170.4 455.2C 170.139 452.771 170.441 450.269 169.6 448z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 219.2 449.6C 220.464 449.053 220.622 448.956 221.6 448C 220.336 448.547 220.178 448.644 219.2 449.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 423.2 448L 424 448.8L 423.2 448z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 557.334 448.266C 556.978 448.622 557.822 448.578 557.866 448.534C 558.222 448.178 557.378 448.222 557.334 448.266z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 252 448.8L 252.8 449.6L 252 448.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 252.8 448.8L 253.6 449.6L 252.8 448.8M 315.2 448.8L 316 449.6L 315.2 448.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 555.2 448.8L 556 449.6L 555.2 448.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 237.334 449.866C 236.978 450.222 237.822 450.178 237.866 450.134C 238.222 449.778 237.378 449.822 237.334 449.866z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 223.2 450.4C 220.634 452.994 218.016 454.037 214.4 454.4C 213.543 456.306 212.546 457.98 212 460C 209.851 459.599 207.784 459.294 205.6 459.2L 205.6 456.8L 201.6 456.8C 201.68 460.485 199.692 465.241 200.338 468.618C 200.978 471.963 206.176 470.95 207.853 473.782C 211.706 480.292 198.172 484.33 194.4 486.4C 195.154 491.978 191.702 492.83 188.407 496.376C 186.235 498.714 186.021 502.2 183.685 504.465C 178.631 509.364 174.6 508.238 174.4 516.8L 178.4 515.2L 181.6 522.4C 193.912 519.866 197.372 527.64 204.8 536L 205.6 536C 209.179 525.501 216.158 525.895 224 530.4C 224.689 527.5 225.61 523.35 228.312 521.622C 232.248 519.106 238.022 521.831 242.264 520.086C 252.167 516.01 259.444 505.815 271.2 506.4C 268.926 498.67 267.606 491.694 266.118 483.969C 265.61 481.328 267.156 478.635 266.122 476.071C 262.586 467.31 249.258 459.019 250.4 449.6C 240.807 451.46 232.401 454.505 223.2 450.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 551.2 449.6L 551.2 450.4L 553.6 450.4C 552.602 449.852 552.362 449.801 551.2 449.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 554.134 449.866C 553.778 450.222 554.622 450.178 554.666 450.134C 555.022 449.778 554.178 449.822 554.134 449.866z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 37.6 450.4L 38.4 451.2L 37.6 450.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 40.8 450.4L 41.6 451.2L 40.8 450.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 41.6 450.4L 41.6 451.2L 44 451.2C 43.0013 450.652 42.7613 450.601 41.6 450.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 318.4 450.4L 319.2 451.2L 318.4 450.4M 336.8 450.4L 336 453.6L 336.8 453.6C 337.778 452.644 337.936 452.547 339.2 452C 338.289 451.187 337.911 450.953 336.8 450.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 338.4 450.4L 339.2 451.2L 338.4 450.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 424.8 450.4L 425.6 451.2L 424.8 450.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 427.2 450.4L 428 451.2L 427.2 450.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 546.4 450.4L 546.4 451.2L 548.8 451.2C 547.802 450.652 547.562 450.601 546.4 450.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 548.8 450.4L 548.8 451.2L 552.8 451.2C 551.385 450.577 550.371 450.47 548.8 450.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 36.8 451.2L 37.6 452L 36.8 451.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 221.866 451.734C 221.822 451.778 221.778 452.622 222.134 452.266C 222.178 452.222 222.222 451.378 221.866 451.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 249.6 451.2L 249.6 454.4L 250.4 454.4C 250.261 453.052 250.146 452.405 249.6 451.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 544 451.2L 544.8 452L 544 451.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 34.9334 452.266C 34.5778 452.622 35.4222 452.578 35.4666 452.534C 35.8222 452.178 34.9778 452.222 34.9334 452.266z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 36 452L 36.8 452.8L 36 452z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 214.934 452.266C 214.578 452.622 215.422 452.578 215.466 452.534C 215.822 452.178 214.978 452.222 214.934 452.266z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 216.534 452.266C 216.178 452.622 217.022 452.578 217.066 452.534C 217.422 452.178 216.578 452.222 216.534 452.266z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 220.8 452L 221.6 452.8L 220.8 452z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 226.4 452L 227.2 452.8L 226.4 452M 425.6 452L 425.6 455.2L 426.4 455.2C 426.261 453.852 426.146 453.205 425.6 452z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 541.6 453.6C 542.864 453.053 543.022 452.956 544 452C 542.736 452.547 542.578 452.644 541.6 453.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 33.6 452.8L 33.6 454.4C 34.9082 453.964 34.764 454.108 35.2 452.8L 33.6 452.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 35.2 452.8C 34.7506 454.241 34.5407 455.298 34.4 456.8L 36 456.8C 35.9299 455.229 35.8231 454.215 35.2 452.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 532.8 452.8L 532.8 453.6L 536.8 453.6C 535.385 452.977 534.371 452.87 532.8 452.8M 32.8 453.6L 32.8 456.8L 33.6 456.8C 33.4607 455.452 33.3465 454.805 32.8 453.6M 37.6 455.2L 40 455.2L 39.2 453.6C 37.8918 454.036 38.036 453.892 37.6 455.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 172.8 453.6L 172.8 454.4L 175.2 454.4C 174.202 453.852 173.962 453.801 172.8 453.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 194.134 453.866C 193.778 454.222 194.622 454.178 194.666 454.134C 195.022 453.778 194.178 453.822 194.134 453.866z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 330.134 453.866C 329.778 454.222 330.622 454.178 330.666 454.134C 331.022 453.778 330.178 453.822 330.134 453.866z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 331.466 454.134C 331.422 454.178 331.378 455.022 331.734 454.666C 331.778 454.622 331.822 453.778 331.466 454.134z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 540 453.6L 540 455.2C 541.308 454.764 541.164 454.908 541.6 453.6L 540 453.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 541.6 453.6C 540.387 454.366 539.729 454.71 538.4 455.2L 538.4 456C 540.29 455.78 541.95 455.694 541.6 453.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 33.6 454.4L 33.6 456.8L 34.4 456.8C 34.199 455.639 34.1478 455.398 33.6 454.4M 176.534 454.666C 176.178 455.022 177.022 454.978 177.066 454.934C 177.422 454.578 176.578 454.622 176.534 454.666z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 179.2 454.4L 179.2 455.2L 181.6 455.2C 180.602 454.652 180.362 454.601 179.2 454.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 192.8 454.4L 192.8 455.2L 195.2 455.2C 194.202 454.652 193.962 454.601 192.8 454.4M 328.534 454.666C 328.178 455.022 329.022 454.978 329.066 454.934C 329.422 454.578 328.578 454.622 328.534 454.666z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 512.8 454.4L 512.8 455.2L 516 455.2C 514.795 454.654 514.148 454.539 512.8 454.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 529.6 454.4C 528.811 455.583 528.8 455.362 528.8 456.8C 529.831 455.646 529.921 455.813 529.6 454.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 532 455.2L 532 456C 534.535 455.994 536.767 455.92 539.2 455.2C 536.885 454.644 534.409 455.151 532 455.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 539.2 454.4L 540 455.2L 539.2 454.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 40.5334 455.466C 40.1778 455.822 41.0222 455.778 41.0666 455.734C 41.4222 455.378 40.5778 455.422 40.5334 455.466z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 180 455.2L 180 456L 193.6 456C 189.621 454.33 184.29 455.2 180 455.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 213.6 455.2L 214.4 456L 213.6 455.2M 252.8 455.2L 253.6 456L 252.8 455.2M 335.2 455.2L 336 456L 335.2 455.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 490.4 455.2L 490.4 456L 496.8 456C 494.71 455.122 492.669 455.206 490.4 455.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 42.4 456L 43.2 456.8L 42.4 456z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 213.334 456.266C 212.978 456.622 213.822 456.578 213.866 456.534C 214.222 456.178 213.378 456.222 213.334 456.266z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 253.6 456L 254.4 456.8L 253.6 456z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 426.4 456C 426.487 457.954 426.742 459.698 427.2 461.6L 428 461.6C 427.722 459.542 427.377 457.826 426.4 456z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 496 456L 496 456.8L 499.2 456.8C 497.995 456.254 497.348 456.139 496 456M 529.6 456L 530.4 456.8L 529.6 456z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 532 456L 532 459.2L 532.8 459.2C 532.661 457.852 532.546 457.205 532 456z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 33.6 456.8L 33.6 457.6L 38.4 457.6C 36.7583 456.901 35.4022 456.838 33.6 456.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 200.8 456.8L 200.8 464L 201.6 464C 201.598 461.499 201.77 459.112 200.8 456.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 209.6 456.8L 210.4 457.6L 209.6 456.8M 254.4 456.8L 255.2 457.6L 254.4 456.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 321.6 456.8L 321.6 457.6L 325.6 457.6C 324.185 456.977 323.171 456.87 321.6 456.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 484 456.8L 484 457.6L 489.6 457.6C 487.734 456.812 486.034 456.815 484 456.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 503.734 457.066C 503.378 457.422 504.222 457.378 504.266 457.334C 504.622 456.978 503.778 457.022 503.734 457.066z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 512 458.4L 514.4 457.6C 512.978 456.836 512.783 456.987 512 458.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 515.734 457.066C 515.378 457.422 516.222 457.378 516.266 457.334C 516.622 456.978 515.778 457.022 515.734 457.066z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 528.8 456.8L 529.6 457.6L 528.8 456.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 205.6 457.6L 205.6 459.2L 207.2 459.2C 206.764 457.892 206.908 458.036 205.6 457.6M 443.734 457.866C 443.378 458.222 444.222 458.178 444.266 458.134C 444.622 457.778 443.778 457.822 443.734 457.866z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 445.334 457.866C 444.978 458.222 445.822 458.178 445.866 458.134C 446.222 457.778 445.378 457.822 445.334 457.866z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 464 457.6L 464 459.2L 465.6 459.2L 465.6 457.6L 464 457.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 465.6 457.6L 465.6 458.4L 468.8 458.4C 467.595 457.854 466.948 457.739 465.6 457.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 468.8 457.6L 468.8 458.4L 471.2 458.4C 470.202 457.852 469.962 457.801 468.8 457.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 471.2 457.6L 471.2 458.4L 476 459.2L 476 458.4L 471.2 457.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 473.6 457.6L 473.6 458.4L 476 458.4C 475.002 457.852 474.762 457.801 473.6 457.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 481.6 458.4L 481.6 459.2C 483.298 458.954 483.749 458.894 484.8 457.6L 481.6 458.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 484.8 457.6L 484.8 458.4L 487.2 458.4C 486.202 457.852 485.962 457.801 484.8 457.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 518.134 457.866C 517.778 458.222 518.622 458.178 518.666 458.134C 519.022 457.778 518.178 457.822 518.134 457.866z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 211.2 458.4L 209.6 459.2L 209.6 460C 211.09 459.714 211.795 459.78 211.2 458.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 256 458.4L 256.8 459.2L 256 458.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 465.6 458.4L 464.8 460L 466.4 460C 466.4 458.518 466.64 458.92 465.6 458.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 472.534 458.666C 472.178 459.022 473.022 458.978 473.066 458.934C 473.422 458.578 472.578 458.622 472.534 458.666z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 480.8 458.4L 480 460C 481.01 459.223 481.114 459.445 480.8 458.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 498.4 458.4L 498.4 459.2L 501.6 459.2C 500.395 458.654 499.748 458.539 498.4 458.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 501.6 458.4L 502.4 459.2L 501.6 458.4M 518.4 458.4L 518.4 459.2C 521.786 460.82 524.368 460.457 528 460C 525.082 458.742 521.575 458.536 518.4 458.4M 530.4 458.4L 531.2 459.2L 530.4 458.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 531.2 458.4L 528 459.2L 528 460C 529.502 459.859 530.559 459.65 532 459.2L 531.2 458.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 256.8 459.2L 257.6 460L 256.8 459.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 463.734 459.466C 463.378 459.822 464.222 459.778 464.266 459.734C 464.622 459.378 463.778 459.422 463.734 459.466z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 480.8 460.8L 484 460C 482.362 459.399 481.923 459.475 480.8 460.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 503.2 459.2L 503.2 460L 508.8 460C 506.934 459.212 505.234 459.215 503.2 459.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 508.8 459.2L 509.6 460L 508.8 459.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 518.4 459.2L 519.2 460L 518.4 459.2M 531.2 459.2L 532 460L 531.2 459.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 557.6 460.8C 558.864 460.253 559.022 460.156 560 459.2C 558.736 459.747 558.578 459.844 557.6 460.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 444 460L 444.8 460.8L 444 460z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 446.934 460.266C 446.578 460.622 447.422 460.578 447.466 460.534C 447.822 460.178 446.978 460.222 446.934 460.266z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 460.8 460L 461.6 460.8L 460.8 460z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 478.934 460.266C 478.578 460.622 479.422 460.578 479.466 460.534C 479.822 460.178 478.978 460.222 478.934 460.266z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 507.734 460.266C 507.378 460.622 508.222 460.578 508.266 460.534C 508.622 460.178 507.778 460.222 507.734 460.266M 201.866 461.334C 201.822 461.378 201.778 462.222 202.134 461.866C 202.178 461.822 202.222 460.978 201.866 461.334z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 440 460.8C 438.922 462.214 438.302 463.186 437.6 464.8C 439.388 463.654 440.326 462.954 440 460.8M 443.2 460.8C 442.411 461.983 442.4 461.762 442.4 463.2C 443.431 462.046 443.521 462.213 443.2 460.8M 446.4 460.8L 446.4 461.6L 449.6 462.4L 449.6 461.6L 446.4 460.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 448 460.8L 448 461.6L 451.2 461.6C 449.995 461.054 449.348 460.939 448 460.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 460 460.8L 460.8 461.6L 460 460.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 42.4 461.6L 43.2 462.4L 42.4 461.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 261.066 462.134C 261.022 462.178 260.978 463.022 261.334 462.666C 261.378 462.622 261.422 461.778 261.066 462.134z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 331.2 461.6L 331.2 462.4L 333.6 462.4C 332.602 461.852 332.362 461.801 331.2 461.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 451.2 461.6L 452.8 465.6L 453.6 465.6C 453.179 463.566 452.898 462.772 451.2 461.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 459.2 461.6L 460 462.4L 459.2 461.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 330.4 462.4L 330.4 463.2L 333.6 463.2C 332.395 462.654 331.748 462.539 330.4 462.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 452.8 462.4L 453.6 463.2L 452.8 462.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 458.4 462.4L 458.4 464C 459.708 463.564 459.564 463.708 460 462.4L 458.4 462.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 38.4 463.2L 38.4 465.6L 39.2 465.6C 38.999 464.439 38.9478 464.198 38.4 463.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 41.8666 463.734C 41.8222 463.778 41.7778 464.622 42.1334 464.266C 42.1778 464.222 42.2222 463.378 41.8666 463.734z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 261.866 463.734C 261.822 463.778 261.778 464.622 262.134 464.266C 262.178 464.222 262.222 463.378 261.866 463.734z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 441.866 463.734C 441.822 463.778 441.778 464.622 442.134 464.266C 442.178 464.222 442.222 463.378 441.866 463.734z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 453.6 463.2L 453.6 468.8L 454.4 468.8C 454.385 466.766 454.388 465.066 453.6 463.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 37.6 464L 37.6 468L 38.4 468C 38.3299 466.429 38.2231 465.415 37.6 464z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 40.8 464L 41.6 464.8L 40.8 464z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 200.8 464L 201.6 464.8L 200.8 464z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 422.4 464L 422.4 464.8L 425.6 464.8C 424.395 464.254 423.748 464.139 422.4 464z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 438.4 464L 439.2 464.8L 438.4 464z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 36.8 464.8L 36.8 467.2L 37.6 467.2C 37.399 466.038 37.3478 465.798 36.8 464.8M 40.8 464.8L 41.6 465.6L 40.8 464.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 262.666 465.334C 262.622 465.378 262.578 466.222 262.934 465.866C 262.978 465.822 263.022 464.978 262.666 465.334M 421.6 464.8L 421.6 465.6L 424 465.6C 423.002 465.052 422.762 465.001 421.6 464.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 424.534 465.066C 424.178 465.422 425.022 465.378 425.066 465.334C 425.422 464.978 424.578 465.022 424.534 465.066z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 425.6 464.8L 426.4 465.6L 425.6 464.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 200 465.6L 200.8 466.4L 200 465.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 420.8 465.6L 420.8 467.2L 422.4 467.2L 422.4 465.6L 420.8 465.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 420.8 467.2L 420.8 468L 425.6 466.4C 423.656 465.714 422.624 466.254 420.8 467.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 425.6 465.6L 425.6 466.4L 428 466.4C 427.002 465.852 426.762 465.801 425.6 465.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 428 465.6L 428.8 466.4L 428 465.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 452 465.6L 452 468L 452.8 468C 452.599 466.838 452.548 466.598 452 465.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 452.8 465.6L 452.8 468L 453.6 468C 453.399 466.838 453.348 466.598 452.8 465.6M 263.2 466.4L 264 469.6L 264.8 469.6C 264.349 468.198 264.065 467.566 263.2 466.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 423.2 466.4L 423.2 467.2L 427.2 467.2C 425.785 466.577 424.771 466.47 423.2 466.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 456 466.4L 456.8 467.2L 456 466.4M 459.2 466.4L 460 467.2L 459.2 466.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 38.6666 467.734C 38.6222 467.778 38.5778 468.622 38.9334 468.266C 38.9778 468.222 39.0222 467.378 38.6666 467.734z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 51.2 467.2L 51.2 468L 54.4 468C 53.1952 467.454 52.5482 467.339 51.2 467.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 197.6 467.2L 197.6 472L 198.4 472C 198.362 470.198 198.299 468.842 197.6 467.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 422.4 467.2L 423.2 468L 422.4 467.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 436.8 467.2L 436.8 468L 439.2 468C 438.202 467.452 437.962 467.401 436.8 467.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 48.8 468L 49.6 468.8L 48.8 468z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 50.1334 468.266C 49.7778 468.622 50.6222 468.578 50.6666 468.534C 51.0222 468.178 50.1778 468.222 50.1334 468.266z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 51.2 468C 52.499 469.635 53.3142 470.317 55.2 471.2C 54.0258 469.355 53.2535 468.759 51.2 468z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 53.3334 468.266C 52.9778 468.622 53.8222 468.578 53.8666 468.534C 54.2222 468.178 53.3778 468.222 53.3334 468.266z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 96 468.8L 96 469.6L 99.2 469.6C 97.752 468.608 97.7784 468.653 96 468.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 432 468L 432 468.8L 438.4 468.8C 436.31 467.922 434.269 468.006 432 468M 39.2 468.8C 39.9194 470.499 39.9011 470.481 41.6 471.2C 40.7173 470.034 40.3654 469.682 39.2 468.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 44.8 468.8L 44.8 469.6L 48 469.6C 46.7952 469.054 46.1482 468.939 44.8 468.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 54.6666 469.334C 54.6222 469.378 54.5778 470.222 54.9334 469.866C 54.9778 469.822 55.0222 468.978 54.6666 469.334z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 83.2 468.8L 83.2 470.4C 84.508 469.964 84.364 470.108 84.8 468.8L 83.2 468.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 197.066 469.334C 197.022 469.378 196.978 470.222 197.334 469.866C 197.378 469.822 197.422 468.978 197.066 469.334z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 84 469.6L 84 470.4L 87.2 470.4C 85.9952 469.854 85.348 469.739 84 469.6M 100.8 469.6L 100.8 470.4L 103.2 470.4C 102.202 469.852 101.962 469.801 100.8 469.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 110.134 469.866C 109.778 470.222 110.622 470.178 110.666 470.134C 111.022 469.778 110.178 469.822 110.134 469.866z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 264.266 470.134C 264.222 470.178 264.178 471.022 264.534 470.666C 264.578 470.622 264.622 469.778 264.266 470.134z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 420 469.6L 420.8 470.4L 420 469.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 55.2 470.4L 55.2 472.8L 56 472.8C 55.799 471.638 55.7478 471.398 55.2 470.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 80.8 470.4L 81.6 471.2L 80.8 470.4M 108 470.4L 108 471.2L 113.6 471.2C 111.734 470.413 110.034 470.415 108 470.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 116 470.4L 116.8 471.2L 116 470.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 117.066 470.934C 117.022 470.978 116.978 471.822 117.334 471.466C 117.378 471.422 117.422 470.578 117.066 470.934z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 196.8 470.4L 197.6 471.2L 196.8 470.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 200.534 470.666C 200.178 471.022 201.022 470.978 201.066 470.934C 201.422 470.578 200.578 470.622 200.534 470.666M 324.8 470.4L 324.8 472.8L 325.6 472.8C 325.399 471.638 325.348 471.398 324.8 470.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 418.4 470.4L 419.2 471.2L 418.4 470.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 41.6 471.2L 41.6 472L 44.8 472C 43.5952 471.454 42.9482 471.339 41.6 471.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 80 471.2L 80.8 472L 80 471.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 92 472.8L 96 472C 94.16 471.267 93.2984 471.297 92 472.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 96.5336 471.466C 96.1776 471.822 97.0224 471.778 97.0664 471.734C 97.4224 471.378 96.5776 471.422 96.5336 471.466z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 53.6 493.6C 53.2671 498.56 49.5229 501.63 48.8 506.4L 58.4 507.2C 58.3368 510.262 56.3493 516.138 58.4222 518.714C 62.4475 523.717 71.9198 514.798 77.2037 521.616C 80.2792 525.584 80.6384 530.066 82.6416 534.4C 87.0832 544.009 90.6632 552.852 93.6 563.2C 98.2576 562.335 105.839 560.09 110.369 560.554C 115.25 561.055 116.77 563.969 122.4 562.841C 132.278 560.862 135.614 552.373 145.6 556.8C 148.745 549.378 147.027 538.349 146.4 530.4C 154.786 530.221 168.626 523.164 172 515.2C 170.231 511.774 172.637 508.038 175.2 505.6C 172.193 493.61 168.145 505.203 161.883 502.927C 156.632 501.018 159.047 491.566 155.018 488.483C 149.343 484.142 149.662 492.269 146.161 492.978C 144.005 493.414 140.878 490.594 138.4 490.4L 138.4 488C 134.151 488.134 126.993 488.898 123.2 490.712C 120.998 491.766 117.372 495.226 114.734 494.158C 104.435 489.989 118.714 479.697 115.903 474.654C 114.234 471.661 109.07 472.994 106.403 473.246C 99.564 473.891 92.0888 471.149 84.8344 472.214C 80.1608 472.901 80.1448 478.494 77.3778 481.393C 70.8838 488.196 63.0965 493.192 53.6 493.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 201.6 471.2L 201.6 472L 204.8 472C 203.595 471.454 202.948 471.339 201.6 471.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 205.334 471.466C 204.978 471.822 205.822 471.778 205.866 471.734C 206.222 471.378 205.378 471.422 205.334 471.466z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 264.8 471.2L 265.6 472L 264.8 471.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 417.866 471.734C 417.822 471.778 417.778 472.622 418.134 472.266C 418.178 472.222 418.222 471.378 417.866 471.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 41.6 472L 41.6 472.8L 44 472.8C 43.0013 472.252 42.7613 472.201 41.6 472z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 88.5336 472.266C 88.1776 472.622 89.0224 472.578 89.0664 472.534C 89.4224 472.178 88.5776 472.222 88.5336 472.266z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 89.6 472L 90.4 472.8L 89.6 472z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 90.9336 472.266C 90.5776 472.622 91.4224 472.578 91.4664 472.534C 91.8224 472.178 90.9776 472.222 90.9336 472.266z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 93.3336 472.266C 92.9776 472.622 93.8224 472.578 93.8664 472.534C 94.2224 472.178 93.3776 472.222 93.3336 472.266z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 101.866 472.534C 101.822 472.578 101.778 473.422 102.134 473.066C 102.178 473.022 102.222 472.178 101.866 472.534z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 102.4 472L 103.2 472.8L 102.4 472z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 103.2 472L 103.2 472.8L 105.6 472.8C 104.602 472.252 104.362 472.201 103.2 472z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 117.6 472L 118.4 472.8L 117.6 472z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 198.4 472L 199.2 472.8L 198.4 472z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 205.334 472.266C 204.978 472.622 205.822 472.578 205.866 472.534C 206.222 472.178 205.378 472.222 205.334 472.266z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 206.4 472C 206.836 473.308 206.692 473.164 208 473.6L 208 472L 206.4 472M 265.6 472L 266.4 472.8L 265.6 472z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 42.9334 473.066C 42.5778 473.422 43.4222 473.378 43.4666 473.334C 43.8222 472.978 42.9778 473.022 42.9334 473.066z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 56 472.8C 56.5469 474.064 56.6438 474.222 57.6 475.2C 57.0531 473.936 56.9562 473.778 56 472.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 102.4 472.8L 102.4 473.6L 107.2 473.6C 105.558 472.901 104.202 472.838 102.4 472.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 266.4 472.8L 267.2 473.6L 266.4 472.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 116 473.6L 116.8 474.4L 116 473.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 208 473.6L 208 476L 208.8 476C 208.599 474.838 208.548 474.598 208 473.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 267.2 473.6L 268 474.4L 267.2 473.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 417.6 473.6L 417.6 476.8L 418.4 476.8C 418.261 475.452 418.146 474.805 417.6 473.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 56 474.4L 56 481.6L 56.8 481.6C 56.7986 479.099 56.9704 476.712 56 474.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 57.0666 475.734C 57.0222 475.778 56.9778 476.622 57.3334 476.266C 57.3778 476.222 57.4222 475.378 57.0666 475.734z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 57.6 475.2L 57.6 481.6L 58.4 481.6C 58.3942 479.331 58.4782 477.29 57.6 475.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 116.8 476L 116.8 478.4L 117.6 478.4C 117.399 477.238 117.348 476.998 116.8 476M 56.8 476.8L 56.8 481.6L 57.6 481.6C 57.5622 479.798 57.4994 478.442 56.8 476.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 116.266 477.334C 116.222 477.378 116.178 478.222 116.534 477.866C 116.578 477.822 116.622 476.978 116.266 477.334z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 206.4 476.8L 207.2 477.6L 206.4 476.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 79.2 477.6L 80 478.4L 79.2 477.6M 266.666 478.134C 266.622 478.178 266.578 479.022 266.934 478.666C 266.978 478.622 267.022 477.778 266.666 478.134z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 116 478.4L 116 480C 117.308 479.564 117.164 479.708 117.6 478.4L 116 478.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 203.2 478.4L 204 479.2L 203.2 478.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 416.266 478.934C 416.222 478.978 416.178 479.822 416.534 479.466C 416.578 479.422 416.622 478.578 416.266 478.934z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 78.6666 479.734C 78.6222 479.778 78.5778 480.622 78.9334 480.266C 78.9778 480.222 79.0222 479.378 78.6666 479.734z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 115.466 479.734C 115.422 479.778 115.378 480.622 115.734 480.266C 115.778 480.222 115.822 479.378 115.466 479.734z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 197.6 481.6L 197.6 482.4C 200.168 481.887 201.475 481.166 203.2 479.2C 201.037 479.694 199.496 480.435 197.6 481.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 206.4 479.2L 207.2 480L 206.4 479.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 266.4 479.2L 266.4 481.6L 267.2 481.6C 266.999 480.438 266.948 480.198 266.4 479.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 71.2 480C 70.0516 481.159 69.508 481.778 68.8 483.2C 70.5148 482.295 71.2789 481.946 71.2 480M 416 480L 416 497.6L 416.8 497.6C 416.8 492.238 418.082 484.962 416 480z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 418.4 480L 418.4 492.8L 419.2 492.8C 419.2 488.728 419.986 483.779 418.4 480z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 53.6 480.8L 54.4 481.6L 53.6 480.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 74.1334 481.066C 73.7778 481.422 74.6222 481.378 74.6666 481.334C 75.0222 480.978 74.1778 481.022 74.1334 481.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 114.4 480.8L 115.2 481.6L 114.4 480.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 265.6 480.8L 265.6 482.4L 267.2 482.4C 266.764 481.092 266.908 481.236 265.6 480.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 53.6 481.6L 54.4 482.4L 53.6 481.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 56 481.6L 56 483.2C 57.3081 482.764 57.164 482.908 57.6 481.6L 56 481.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 69.6 484.8L 73.6 482.4C 71.3473 481.911 70.6602 482.845 69.6 484.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 113.6 481.6C 111.542 484.3 110.506 486.218 111.2 489.6L 112 489.6C 112.136 486.793 113.844 484.284 113.6 481.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 52.8 482.4L 53.6 483.2L 52.8 482.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 265.6 482.4L 265.6 484.8L 266.4 484.8C 266.199 483.638 266.148 483.398 265.6 482.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 266.4 482.4L 266.4 487.2L 267.2 487.2C 267.162 485.398 267.099 484.042 266.4 482.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 201.334 483.466C 200.978 483.822 201.822 483.778 201.866 483.734C 202.222 483.378 201.378 483.422 201.334 483.466z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 52 484L 52.8 484.8L 52 484M 148.8 484.8L 148.8 485.6L 154.4 485.6C 152.411 484.292 151.134 484.356 148.8 484.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 197.334 484.266C 196.978 484.622 197.822 484.578 197.866 484.534C 198.222 484.178 197.378 484.222 197.334 484.266z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 199.734 484.266C 199.378 484.622 200.222 484.578 200.266 484.534C 200.622 484.178 199.778 484.222 199.734 484.266z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 110.666 485.334C 110.622 485.378 110.578 486.222 110.934 485.866C 110.978 485.822 111.022 484.978 110.666 485.334M 154.934 485.066C 154.578 485.422 155.422 485.378 155.466 485.334C 155.822 484.978 154.978 485.022 154.934 485.066z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 192 484.8L 192 488L 192.8 488C 192.661 486.652 192.546 486.005 192 484.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 195.734 485.066C 195.378 485.422 196.222 485.378 196.266 485.334C 196.622 484.978 195.778 485.022 195.734 485.066z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 53.6 485.6L 53.6 491.2L 54.4 491.2C 54.385 489.166 54.3876 487.466 53.6 485.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 136.8 485.6L 137.6 486.4L 136.8 485.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 194.4 485.6L 195.2 486.4L 194.4 485.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 111.466 486.934C 111.422 486.978 111.378 487.822 111.734 487.466C 111.778 487.422 111.822 486.578 111.466 486.934z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 140.534 486.666C 140.178 487.022 141.022 486.978 141.066 486.934C 141.422 486.578 140.578 486.622 140.534 486.666z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 146.666 486.934C 146.622 486.978 146.578 487.822 146.934 487.466C 146.978 487.422 147.022 486.578 146.666 486.934z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 66.4 487.2L 67.2 488L 66.4 487.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 134.4 487.2L 135.2 488L 134.4 487.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 154.4 487.2L 155.2 488L 154.4 487.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 194.4 487.2L 194.4 490.4L 195.2 490.4C 195.061 489.052 194.946 488.405 194.4 487.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 317.6 487.2L 318.4 492L 319.2 492C 318.996 490.009 318.733 488.834 317.6 487.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 65.3334 488.266C 64.9778 488.622 65.8222 488.578 65.8666 488.534C 66.2222 488.178 65.3778 488.222 65.3334 488.266M 121.6 488L 122.4 488.8L 121.6 488z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 132.8 488L 133.6 488.8L 132.8 488z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 145.6 488L 145.6 490.4L 146.4 490.4C 146.199 489.238 146.148 488.998 145.6 488z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 268 488L 268.8 488.8L 268 488M 63.2 488.8L 63.2 489.6L 65.6 489.6C 64.6014 489.052 64.3612 489.001 63.2 488.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 112 488.8L 112 491.2L 112.8 491.2C 112.599 490.038 112.548 489.798 112 488.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 116.8 490.4L 119.2 489.6C 117.778 488.836 117.583 488.987 116.8 490.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 128.8 488.8L 128.8 489.6L 131.2 489.6C 130.202 489.052 129.962 489.001 128.8 488.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 129.6 489.6L 129.6 490.4L 132.8 489.6C 131.473 489.275 131.006 489.353 129.6 489.6M 138.4 490.4L 140.8 489.6C 139.378 488.836 139.183 488.987 138.4 490.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 158.4 488.8L 159.2 489.6L 158.4 488.8M 51.2 489.6L 51.2 491.2L 52.8 491.2C 52.3639 489.892 52.5082 490.036 51.2 489.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 139.2 489.6L 139.2 490.4L 141.6 490.4C 140.602 489.852 140.362 489.801 139.2 489.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 141.6 489.6L 142.4 490.4L 141.6 489.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 52.8 490.4L 53.6 491.2L 52.8 490.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 120 492.8L 123.2 491.2C 121.354 490.754 120.995 491.203 120 492.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 142.4 490.4L 143.2 491.2L 142.4 490.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 159.2 490.4L 160 491.2L 159.2 490.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 50.6666 491.734C 50.6222 491.778 50.5778 492.622 50.9334 492.266C 50.9778 492.222 51.0222 491.378 50.6666 491.734z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 112.8 491.2L 113.6 494.4L 114.4 494.4C 113.949 492.998 113.665 492.366 112.8 491.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 118.4 491.2L 119.2 492L 118.4 491.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 119.2 491.2L 117.6 492L 117.6 492.8C 119.09 492.514 119.795 492.58 119.2 491.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 142.934 491.466C 142.578 491.822 143.422 491.778 143.466 491.734C 143.822 491.378 142.978 491.422 142.934 491.466z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 144 491.2C 145.051 492.494 145.502 492.554 147.2 492.8L 147.2 492L 144 491.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 160 491.2L 160 494.4L 160.8 494.4C 160.661 493.052 160.546 492.405 160 491.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 271.466 491.734C 271.422 491.778 271.378 492.622 271.734 492.266C 271.778 492.222 271.822 491.378 271.466 491.734z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 60 492L 60 492.8L 63.2 492.8C 61.9952 492.254 61.3482 492.139 60 492z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 143.2 492L 144 492.8L 143.2 492z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 147.2 492L 144 492.8L 144 493.6C 145.57 493.566 147.969 493.863 147.2 492z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 157.866 492.534C 157.822 492.578 157.778 493.422 158.134 493.066C 158.178 493.022 158.222 492.178 157.866 492.534z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 318.666 492.534C 318.622 492.578 318.578 493.422 318.934 493.066C 318.978 493.022 319.022 492.178 318.666 492.534z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 116.8 494.4L 119.2 493.6C 117.778 492.836 117.583 492.987 116.8 494.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 192.8 492.8L 193.6 493.6L 192.8 492.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 270.4 492.8L 270.4 495.2L 271.2 495.2C 270.999 494.038 270.948 493.798 270.4 492.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 52.8 493.6L 52 499.2L 52.8 499.2C 53.4252 497.057 53.6523 495.67 52.8 493.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 114.4 493.6L 114.4 494.4L 116.8 494.4C 115.802 493.852 115.562 493.801 114.4 493.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 145.334 493.866C 144.978 494.222 145.822 494.178 145.866 494.134C 146.222 493.778 145.378 493.822 145.334 493.866z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 157.6 493.6L 158.4 494.4L 157.6 493.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 191.2 493.6L 192 494.4L 191.2 493.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 52 494.4L 52 497.6L 52.8 497.6C 52.6607 496.252 52.5464 495.605 52 494.4M 113.6 494.4L 113.6 495.2L 116.8 495.2C 115.595 494.654 114.948 494.539 113.6 494.4M 157.866 494.934C 157.822 494.978 157.778 495.822 158.134 495.466C 158.178 495.422 158.222 494.578 157.866 494.934z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 190.134 494.666C 189.778 495.022 190.622 494.978 190.666 494.934C 191.022 494.578 190.178 494.622 190.134 494.666z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 269.6 494.4L 269.6 496.8L 270.4 496.8C 270.199 495.638 270.148 495.398 269.6 494.4M 188 495.2L 188.8 496L 188 495.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 316.8 495.2L 316 503.2L 316.8 503.2C 317.612 500.451 317.924 497.879 316.8 495.2M 157.866 496.534C 157.822 496.578 157.778 497.422 158.134 497.066C 158.178 497.022 158.222 496.178 157.866 496.534z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 158.4 496L 158.4 498.4L 159.2 498.4C 158.999 497.238 158.948 496.998 158.4 496z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 187.2 496L 188 496.8L 187.2 496M 186.4 496.8L 186.4 499.2L 187.2 499.2C 186.999 498.038 186.948 497.798 186.4 496.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 167.2 497.6L 168 498.4L 167.2 497.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 416 497.6L 416 500.8L 416.8 500.8C 416.661 499.452 416.546 498.805 416 497.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 49.6 498.4L 50.4 499.2L 49.6 498.4M 166.134 498.666C 165.778 499.022 166.622 498.978 166.666 498.934C 167.022 498.578 166.178 498.622 166.134 498.666z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 267.2 498.4L 268 499.2L 267.2 498.4M 47.2 501.6C 48.3653 500.718 48.7173 500.366 49.6 499.2C 47.9011 499.919 47.9194 499.901 47.2 501.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 159.466 499.734C 159.422 499.778 159.378 500.622 159.734 500.266C 159.778 500.222 159.822 499.378 159.466 499.734z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 185.6 499.2L 185.6 501.6L 186.4 501.6C 186.199 500.438 186.148 500.198 185.6 499.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 48.8 500L 49.6 500.8L 48.8 500z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 174.4 500L 174.4 503.2L 175.2 503.2C 175.061 501.852 174.946 501.205 174.4 500z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 48 500.8L 48.8 501.6L 48 500.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 164.8 500.8L 165.6 501.6L 164.8 500.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 271.2 500.8C 271.636 502.108 271.492 501.964 272.8 502.4L 272.8 500.8L 271.2 500.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 46.4 501.6L 47.2 502.4L 46.4 501.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 160 501.6L 160 502.4L 163.2 503.2L 163.2 502.4L 160 501.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 162.4 501.6L 163.2 502.4L 162.4 501.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 163.2 501.6L 163.2 503.2L 164.8 503.2L 164.8 501.6L 163.2 501.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 175.466 502.134C 175.422 502.178 175.378 503.022 175.734 502.666C 175.778 502.622 175.822 501.778 175.466 502.134z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 184.8 501.6L 185.6 502.4L 184.8 501.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 161.066 502.934C 161.022 502.978 160.978 503.822 161.334 503.466C 161.378 503.422 161.422 502.578 161.066 502.934z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 177.6 502.4L 178.4 503.2L 177.6 502.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 182.4 502.4L 183.2 503.2L 182.4 502.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 184.8 502.4L 185.6 503.2L 184.8 502.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 272 502.4L 272.8 503.2L 272 502.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 272.8 502.4L 272.8 505.6L 273.6 505.6C 273.461 504.252 273.346 503.605 272.8 502.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 417.6 502.4L 417.6 504.8L 418.4 504.8C 418.199 503.638 418.148 503.398 417.6 502.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 161.6 503.2L 161.6 504L 164 504C 163.002 503.452 162.762 503.401 161.6 503.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 174.666 503.734C 174.622 503.778 174.578 504.622 174.934 504.266C 174.978 504.222 175.022 503.378 174.666 503.734z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 177.866 503.734C 177.822 503.778 177.778 504.622 178.134 504.266C 178.178 504.222 178.222 503.378 177.866 503.734M 181.6 503.2L 182.4 504L 181.6 503.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 48 504L 48.8 504.8L 48 504z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 180 504L 180.8 504.8L 180 504z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 48 504.8L 48.8 505.6L 48 504.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 174.666 506.134C 174.622 506.178 174.578 507.022 174.934 506.666C 174.978 506.622 175.022 505.778 174.666 506.134z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 265.6 505.6L 265.6 507.2L 268 507.2L 268 505.6L 265.6 505.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 172.8 506.4L 172.8 508C 174.108 507.564 173.964 507.708 174.4 506.4L 172.8 506.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 176.8 506.4L 176.8 507.2L 179.2 507.2C 178.202 506.652 177.962 506.601 176.8 506.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 179.2 506.4L 180 507.2L 179.2 506.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 46.4 507.2L 47.2 508L 46.4 507.2z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 173.6 507.2L 173.6 509.6L 174.4 509.6C 174.199 508.438 174.148 508.198 173.6 507.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 271.2 507.2L 272 508L 271.2 507.2M 48 508L 48 508.8L 52.8 508.8C 51.1583 508.101 49.8022 508.038 48 508z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 172 508L 172 510.4L 172.8 510.4C 172.599 509.238 172.548 508.998 172 508z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 172.8 508L 172.8 510.4L 173.6 510.4C 173.399 509.238 173.348 508.998 172.8 508M 269.6 508L 270.4 508.8L 269.6 508z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 416.8 508L 416.8 511.2L 417.6 511.2C 417.461 509.852 417.346 509.205 416.8 508z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 55.7334 509.066C 55.3778 509.422 56.2222 509.378 56.2666 509.334C 56.6222 508.978 55.7778 509.022 55.7334 509.066z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 216.8 527.2L 216 527.2C 207.94 534.712 207.257 541.992 204.8 552C 213.18 553.828 211.2 564.393 220 562.4C 225.158 571.439 236.166 560.967 232.8 573.6C 234.957 572.753 236.951 571.761 239.2 571.2L 238.4 573.6C 241.985 577.111 240.574 581.857 240 586.4C 244.369 584.53 248.342 580.255 250.4 576L 252 576.8L 252.846 572.795C 255.734 561.069 262.865 578.58 267.749 575.931C 269.801 574.818 270.031 571.489 271.05 569.6C 275.591 561.187 275.172 548.827 275.2 539.2C 282.106 539.826 283.032 544.429 286.4 549.6C 294.701 544.702 297.636 535.25 308.8 536C 308.445 533.513 308.536 531.293 308.8 528.8C 302.846 529.122 297.958 533.003 292 533.6C 292.002 530.445 293.256 525.526 291.714 522.7C 288.346 516.526 283.811 519.414 279.212 517.982C 276.473 517.13 271.791 511.281 270.4 508.8C 264.439 508.994 253.034 514.778 248.25 518.46C 246.405 519.881 246.151 522.568 243.882 523.514C 239.554 525.32 234.245 521.698 229.78 523.682C 225.435 525.613 225.259 539.66 219.212 530.42L 216.8 527.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 262.4 512C 264.099 511.281 264.081 511.299 264.8 509.6C 263.101 510.319 263.119 510.301 262.4 512z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 270.4 509.6L 270.4 511.2L 272 511.2C 271.564 509.892 271.708 510.036 270.4 509.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 315.2 509.6L 315.2 512L 316 512C 315.799 510.838 315.748 510.598 315.2 509.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 172 510.4C 172 515.396 171.761 518.287 168.8 522.4C 173.712 519.922 172.48 515.106 173.6 510.4L 172 510.4M 260.8 510.4L 261.6 511.2L 260.8 510.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 261.6 510.4C 259.292 511.568 256.794 512.356 255.2 514.4C 257.061 513.774 262.453 512.486 261.6 510.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 272 510.4L 272 512L 273.6 512C 273.164 510.692 273.308 510.836 272 510.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 57.8666 511.734C 57.8222 511.778 57.7778 512.622 58.1334 512.266C 58.1778 512.222 58.2222 511.378 57.8666 511.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 171.466 511.734C 171.422 511.778 171.378 512.622 171.734 512.266C 171.778 512.222 171.822 511.378 171.466 511.734z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 416.8 511.2L 416.8 521.6L 417.6 521.6C 417.6 518.19 418.129 514.367 416.8 511.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 257.6 512L 258.4 512.8L 257.6 512z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 259.2 512L 259.2 512.8L 261.6 512.8C 260.602 512.252 260.362 512.201 259.2 512z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 273.6 512L 274.4 512.8L 273.6 512z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 276.8 512L 277.6 512.8L 276.8 512z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 55.2 512.8L 56 513.6L 55.2 512.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 170.4 512.8L 170.4 515.2C 171.356 514.222 171.453 514.064 172 512.8L 170.4 512.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 280 512.8L 280 513.6L 283.2 513.6C 281.995 513.054 281.348 512.939 280 512.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 55.2 513.6L 55.2 519.2L 56 519.2C 55.985 517.166 55.9876 515.466 55.2 513.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 254.4 513.6L 255.2 514.4L 254.4 513.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 256 513.6L 256 515.2C 257.308 514.764 257.164 514.908 257.6 513.6L 256 513.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 277.6 513.6L 278.4 514.4L 277.6 513.6M 280 513.6L 280 514.4L 283.2 515.2C 282.149 513.906 281.698 513.846 280 513.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 283.466 514.134C 283.422 514.178 283.378 515.022 283.734 514.666C 283.778 514.622 283.822 513.778 283.466 514.134z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 54.6666 514.934C 54.6222 514.978 54.5778 515.822 54.9334 515.466C 54.9778 515.422 55.0222 514.578 54.6666 514.934M 171.2 514.4L 172 515.2L 171.2 514.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 254.134 514.666C 253.778 515.022 254.622 514.978 254.666 514.934C 255.022 514.578 254.178 514.622 254.134 514.666z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 255.2 514.4L 253.6 515.2L 253.6 516C 255.09 515.714 255.795 515.78 255.2 514.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 279.2 514.4L 279.2 515.2L 282.4 515.2C 281.195 514.654 280.548 514.539 279.2 514.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 284.534 514.666C 284.178 515.022 285.022 514.978 285.066 514.934C 285.422 514.578 284.578 514.622 284.534 514.666z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 416 514.4L 416 517.6L 416.8 517.6C 416.661 516.252 416.546 515.605 416 514.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 177.334 515.466C 176.978 515.822 177.822 515.778 177.866 515.734C 178.222 515.378 177.378 515.422 177.334 515.466z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 251.2 516.8C 252.464 516.253 252.622 516.156 253.6 515.2C 252.336 515.747 252.178 515.844 251.2 516.8M 286.4 515.2L 287.2 516L 286.4 515.2M 175.2 516L 176 516.8L 175.2 516z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 176 516L 176 516.8L 179.2 516.8C 177.995 516.254 177.348 516.139 176 516z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 316.266 516.534C 316.222 516.578 316.178 517.422 316.534 517.066C 316.578 517.022 316.622 516.178 316.266 516.534z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 171.2 516.8L 171.2 520L 172 520C 171.861 518.652 171.746 518.005 171.2 516.8M 174.4 516.8L 175.2 517.6L 174.4 516.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 175.2 516.8L 175.2 517.6L 179.2 517.6C 177.785 516.977 176.771 516.87 175.2 516.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 250.4 516.8L 251.2 517.6L 250.4 516.8M 277.6 516.8C 278.845 518.25 279.555 518.25 280.8 516.8L 277.6 516.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 278.934 517.066C 278.578 517.422 279.422 517.378 279.466 517.334C 279.822 516.978 278.978 517.022 278.934 517.066z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 71.2 517.6L 71.2 518.4L 74.4 518.4C 73.1951 517.854 72.5482 517.739 71.2 517.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 170.4 517.6L 169.6 520.8L 170.4 520.8C 170.772 519.255 170.859 519.047 170.4 517.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 179.466 518.134C 179.422 518.178 179.378 519.022 179.734 518.666C 179.778 518.622 179.822 517.778 179.466 518.134z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 248 517.6L 248.8 518.4L 248 517.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 316.8 517.6L 316.8 520L 317.6 520C 317.399 518.838 317.348 518.598 316.8 517.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 416 517.6L 416 524.8L 416.8 524.8C 416.798 522.299 416.97 519.912 416 517.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 54.4 518.4L 55.2 519.2L 54.4 518.4M 74.4 518.4L 75.2 519.2L 74.4 518.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 180 518.4L 180.8 519.2L 180 518.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 244 518.4L 244.8 519.2L 244 518.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 278.4 518.4L 278.4 519.2L 280.8 519.2C 279.802 518.652 279.562 518.601 278.4 518.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 287.2 518.4L 288 519.2L 287.2 518.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 415.2 518.4L 416 531.2L 416.8 531.2C 416.789 527.09 416.809 522.198 415.2 518.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 55.2 519.2L 56 520L 55.2 519.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 62.4 519.2L 62.4 520L 65.6 520C 64.3952 519.454 63.7482 519.339 62.4 519.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 174.4 519.2L 175.2 520L 174.4 519.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 180 519.2L 180.8 520L 180 519.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 288 519.2L 288 520C 289.396 520.712 290.5 521.162 292 521.6L 292 520.8C 290.604 520.088 289.5 519.638 288 519.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 70.1334 520.266C 69.7778 520.622 70.6222 520.578 70.6666 520.534C 71.0222 520.178 70.1778 520.222 70.1334 520.266z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 168.8 520L 169.6 520.8L 168.8 520z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 180 520L 180.8 520.8L 180 520z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 188.8 520L 189.6 520.8L 188.8 520z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 235.734 520.266C 235.378 520.622 236.222 520.578 236.266 520.534C 236.622 520.178 235.778 520.222 235.734 520.266M 245.6 520L 245.6 523.2L 246.4 523.2C 246.261 521.852 246.146 521.205 245.6 520z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 293.6 520L 293.6 522.4L 294.4 522.4C 294.199 521.238 294.148 520.998 293.6 520z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 317.6 520L 318.4 520.8L 317.6 520z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 318.4 520L 318.4 523.2L 319.2 523.2C 319.061 521.852 318.946 521.205 318.4 520M 56 520.8L 56.8 521.6L 56 520.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 67.7334 521.066C 67.3778 521.422 68.2222 521.378 68.2666 521.334C 68.6222 520.978 67.7778 521.022 67.7334 521.066z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 167.2 523.2C 168.366 522.318 168.718 521.966 169.6 520.8C 167.901 521.519 167.919 521.501 167.2 523.2M 180.8 520.8L 181.6 521.6L 180.8 520.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 184.8 520.8L 184.8 522.4C 186.108 521.964 185.964 522.108 186.4 520.8L 184.8 520.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 186.4 520.8L 186.4 521.6L 192 523.2L 192 522.4C 190.139 521.696 188.349 521.206 186.4 520.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 188 520.8L 188 521.6L 190.4 521.6C 189.402 521.052 189.162 521.001 188 520.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 227.2 520.8L 227.2 521.6L 229.6 521.6C 228.602 521.052 228.362 521.001 227.2 520.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 56.8 521.6L 57.6 522.4L 56.8 521.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 57.6 521.6L 57.6 522.4L 60 522.4C 59.0013 521.852 58.7613 521.801 57.6 521.6M 61.6 521.6L 62.4 522.4L 61.6 521.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 65.6 521.6L 65.6 522.4L 68 522.4C 67.0013 521.852 66.7613 521.801 65.6 521.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 74.4 521.6L 75.2 522.4L 74.4 521.6M 184 521.6L 184.8 522.4L 184 521.6z\" />\r\n            <path style=\"stroke:none; fill:#ffffff\"\r\n                d=\"M 243.2 521.6L 244 522.4L 243.2 521.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 243.2 524C 244.366 523.118 244.718 522.766 245.6 521.6C 243.901 522.319 243.919 522.301 243.2 524z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 58.4 522.4L 58.4 523.2L 60.8 523.2C 59.8013 522.652 59.5613 522.601 58.4 522.4M 75.2 522.4L 76 523.2L 75.2 522.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 165.6 522.4L 165.6 524C 166.908 523.564 166.764 523.708 167.2 522.4L 165.6 522.4M 231.2 522.4L 231.2 523.2L 236.8 523.2C 234.934 522.412 233.234 522.415 231.2 522.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 236.8 522.4L 236.8 523.2L 240.8 524C 239.369 522.862 238.635 522.642 236.8 522.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 240 522.4L 240 523.2C 241.554 523.522 241.646 523.522 243.2 523.2C 241.995 522.654 241.348 522.539 240 522.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 244.8 522.4L 244 524L 245.6 524C 245.6 522.518 245.84 522.92 244.8 522.4z\" />\r\n            <path style=\"stroke:none; fill:#010101\"\r\n                d=\"M 319.2 522.4C 321.06 525.066 324.489 524.914 326.548 527.423C 330.667 532.44 333.241 546.118 339.2 548C 343.604 538.695 359.803 534.933 366.789 544.047C 369.634 547.759 367.459 554.53 372.115 556.796C 376.33 558.846 385.093 559.847 388.389 555.882C 389.987 553.958 389.883 550.998 391.671 549.282C 393.836 547.205 397.27 548.837 399.518 547.057C 402.266 544.879 400.8 536.779 400.8 533.6L 399.2 533.6C 399.2 536.834 400.465 543.375 397.346 545.457C 395.074 546.973 391.453 545.491 389.61 547.682C 384.774 553.433 384.259 559.643 374.446 555.297C 369.032 552.898 371.501 545.815 368.238 541.782C 366.036 539.062 362.362 539.157 359.2 538.557C 348.91 536.604 344.932 536.997 337.6 544.8C 334.966 534.755 330.082 523.805 319.2 522.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 322.134 522.666C 321.778 523.022 322.622 522.978 322.666 522.934C 323.022 522.578 322.178 522.622 322.134 522.666z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 323.2 522.4L 323.2 523.2L 325.6 523.2C 324.602 522.652 324.362 522.601 323.2 522.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 76 523.2L 76.8 524L 76 523.2M 192 523.2L 192.8 524L 192 523.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 238.934 523.466C 238.578 523.822 239.422 523.778 239.466 523.734C 239.822 523.378 238.978 523.422 238.934 523.466z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 242.4 523.2L 243.2 524L 242.4 523.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 325.6 523.2L 325.6 524L 328 524C 327.002 523.452 326.762 523.401 325.6 523.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 180.534 524.266C 180.178 524.622 181.022 524.578 181.066 524.534C 181.422 524.178 180.578 524.222 180.534 524.266z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 182.4 524.8L 182.4 525.6C 183.902 525.459 184.959 525.25 186.4 524.8C 184.923 524.426 183.946 524.559 182.4 524.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 185.6 525.6C 186.864 525.053 187.022 524.956 188 524C 186.736 524.547 186.578 524.644 185.6 525.6z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 192.8 524L 192.8 524.8C 195.143 526.074 196.326 527.257 197.6 529.6L 198.4 529.6C 197.839 526.052 196.282 524.711 192.8 524z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 195.734 524.266C 195.378 524.622 196.222 524.578 196.266 524.534C 196.622 524.178 195.778 524.222 195.734 524.266M 316 524L 316.8 524.8L 316 524z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 320 524L 320.8 524.8L 320 524z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 328.534 524.266C 328.178 524.622 329.022 524.578 329.066 524.534C 329.422 524.178 328.578 524.222 328.534 524.266z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 76.8 524.8L 77.6 525.6L 76.8 524.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 181.6 524.8L 182.4 525.6L 181.6 524.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 196.8 524.8L 197.6 525.6L 196.8 524.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 313.6 526.4C 314.864 525.853 315.022 525.756 316 524.8C 314.736 525.347 314.578 525.444 313.6 526.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 328.8 524.8C 329.125 526.474 328.974 526.416 330.4 527.2C 329.847 526.09 329.612 525.711 328.8 524.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 329.866 525.334C 329.822 525.378 329.778 526.222 330.134 525.866C 330.178 525.822 330.222 524.978 329.866 525.334z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 76.8 525.6L 76.8 529.6L 77.6 529.6C 77.5299 528.029 77.4231 527.015 76.8 525.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 79.2 525.6L 80 526.4L 79.2 525.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 162.4 525.6L 163.2 526.4L 162.4 525.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 163.2 527.2L 165.6 526.4C 164.178 525.636 163.983 525.787 163.2 527.2M 213.6 525.6L 214.4 526.4L 213.6 525.6M 217.6 525.6L 218.4 526.4L 217.6 525.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 292 525.6L 292 528L 292.8 528C 292.599 526.838 292.548 526.598 292 525.6M 304 525.6L 304 526.4L 307.2 526.4C 305.995 525.854 305.348 525.739 304 525.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 313.6 529.6C 315.81 528.561 316.931 527.558 318.4 525.6C 316.133 526.582 314.858 527.47 313.6 529.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 80.2664 526.934C 80.2224 526.978 80.1776 527.822 80.5336 527.466C 80.5776 527.422 80.6224 526.578 80.2664 526.934z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 159.2 526.4L 159.2 527.2L 163.2 527.2C 161.785 526.577 160.771 526.47 159.2 526.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 164 526.4L 164.8 527.2L 164 526.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 212.8 526.4L 213.6 527.2L 212.8 526.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 304 526.4L 304 527.2L 308.8 527.2C 307.158 526.501 305.802 526.438 304 526.4M 312 526.4L 312 527.2L 315.2 527.2C 313.995 526.654 313.348 526.539 312 526.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 156.8 529.6L 162.4 528C 159.918 527.065 158.601 527.758 156.8 529.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 162.934 527.466C 162.578 527.822 163.422 527.778 163.466 527.734C 163.822 527.378 162.978 527.422 162.934 527.466z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 212.534 527.466C 212.178 527.822 213.022 527.778 213.066 527.734C 213.422 527.378 212.578 527.422 212.534 527.466z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 226.4 527.2L 227.2 528L 226.4 527.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 302.4 527.2L 303.2 528L 302.4 527.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 329.6 527.2L 329.6 529.6L 330.4 529.6C 330.199 528.438 330.148 528.198 329.6 527.2M 77.6 528L 78.4 528.8L 77.6 528z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 80.8 528L 80.8 530.4L 81.6 530.4C 81.3992 529.238 81.348 528.998 80.8 528z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 160.534 528.266C 160.178 528.622 161.022 528.578 161.066 528.534C 161.422 528.178 160.578 528.222 160.534 528.266z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 198.4 528L 198.4 530.4L 199.2 530.4C 198.999 529.238 198.948 528.998 198.4 528z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 211.2 528L 212 528.8L 211.2 528z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 292 528L 292.8 528.8L 292 528z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 301.6 528L 302.4 528.8L 301.6 528z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 77.6 528.8L 77.6 531.2L 78.4 531.2C 78.199 530.038 78.1478 529.798 77.6 528.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 158.934 529.066C 158.578 529.422 159.422 529.378 159.466 529.334C 159.822 528.978 158.978 529.022 158.934 529.066z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 218.4 528.8L 219.2 529.6L 218.4 528.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 292.266 529.334C 292.222 529.378 292.178 530.222 292.534 529.866C 292.578 529.822 292.622 528.978 292.266 529.334z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 300 528.8L 300.8 529.6L 300 528.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 309.066 529.334C 309.022 529.378 308.978 530.222 309.334 529.866C 309.378 529.822 309.422 528.978 309.066 529.334z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 78.4 529.6C 78.9909 532.462 79.2653 535.714 81.6 537.6C 80.8472 534.785 80.0992 531.971 78.4 529.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 151.2 529.6L 152 530.4L 151.2 529.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 156 529.6L 156.8 530.4L 156 529.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 219.2 529.6C 220.302 532.55 221.757 533.659 224.8 534.4L 224.8 533.6L 219.2 529.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 225.866 530.134C 225.822 530.178 225.778 531.022 226.134 530.666C 226.178 530.622 226.222 529.778 225.866 530.134M 146.4 530.4L 146.4 534.4L 147.2 534.4C 147.13 532.829 147.023 531.815 146.4 530.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 147.2 530.4L 147.2 532C 148.508 531.564 148.364 531.708 148.8 530.4L 147.2 530.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 148.8 530.4L 149.6 531.2L 148.8 530.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 150.134 530.666C 149.778 531.022 150.622 530.978 150.666 530.934C 151.022 530.578 150.178 530.622 150.134 530.666M 154.4 530.4L 155.2 531.2L 154.4 530.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 292 530.4L 292.8 531.2L 292 530.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 308.8 530.4L 308.8 534.4L 309.6 534.4C 309.53 532.829 309.423 531.815 308.8 530.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 328 530.4L 328 532.8L 328.8 532.8C 328.599 531.638 328.548 531.398 328 530.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 409.6 530.4L 410.4 531.2L 409.6 530.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 410.4 530.4L 411.2 531.2L 410.4 530.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 400.8 533.6L 400.8 536.8C 405.082 535.055 411.587 534.236 414.4 530.4C 409.542 531.047 405.924 533.582 400.8 533.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 78.4 531.2L 78.4 533.6L 79.2 533.6C 78.999 532.438 78.9478 532.198 78.4 531.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 152 532L 152 532.8L 155.2 532C 153.873 531.675 153.406 531.753 152 532z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 199.2 531.2C 199.636 532.508 199.492 532.364 200.8 532.8L 200.8 531.2L 199.2 531.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 210.4 531.2L 211.2 532L 210.4 531.2M 292 531.2L 292 532.8L 293.6 532.8C 293.164 531.492 293.308 531.636 292 531.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 308 531.2L 308 534.4L 308.8 534.4C 308.661 533.052 308.546 532.405 308 531.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 331.2 531.2L 332 532L 331.2 531.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 408 531.2L 408.8 532L 408 531.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 408.8 531.2L 408.8 532L 411.2 532C 410.202 531.452 409.962 531.401 408.8 531.2M 147.466 532.534C 147.422 532.578 147.378 533.422 147.734 533.066C 147.778 533.022 147.822 532.178 147.466 532.534M 208.8 532L 208 534.4C 209.413 533.617 209.564 533.422 208.8 532z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 209.6 532L 210.4 532.8L 209.6 532M 225.066 532.534C 225.022 532.578 224.978 533.422 225.334 533.066C 225.378 533.022 225.422 532.178 225.066 532.534z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 293.6 532L 293.6 532.8L 297.6 532.8C 296.185 532.177 295.171 532.07 293.6 532z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 328.8 532L 329.6 532.8L 328.8 532z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 332.266 532.534C 332.222 532.578 332.178 533.422 332.534 533.066C 332.578 533.022 332.622 532.178 332.266 532.534z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 406.4 532L 407.2 532.8L 406.4 532z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 407.2 532L 408 532.8L 407.2 532z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 412 532L 412 532.8L 414.4 532.8C 413.402 532.252 413.162 532.201 412 532z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 414.934 532.266C 414.578 532.622 415.422 532.578 415.466 532.534C 415.822 532.178 414.978 532.222 414.934 532.266z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 201.6 532.8L 202.4 533.6L 201.6 532.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 209.6 532.8L 208.8 536.8L 209.6 536.8C 209.949 535.159 210.098 534.354 209.6 532.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 220 532.8C 220.978 533.756 221.136 533.853 222.4 534.4C 221.422 533.444 221.264 533.347 220 532.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 292 532.8L 292 533.6L 296 533.6C 294.585 532.977 293.571 532.87 292 532.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 333.334 533.066C 332.978 533.422 333.822 533.378 333.866 533.334C 334.222 532.978 333.378 533.022 333.334 533.066M 399.734 533.066C 399.378 533.422 400.222 533.378 400.266 533.334C 400.622 532.978 399.778 533.022 399.734 533.066z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 403.734 533.066C 403.378 533.422 404.222 533.378 404.266 533.334C 404.622 532.978 403.778 533.022 403.734 533.066z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 404.8 532.8L 404.8 533.6L 408 533.6C 406.795 533.054 406.148 532.939 404.8 532.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 78.4 533.6L 79.2 536.8L 80 536.8C 79.5914 535.238 79.4134 534.834 78.4 533.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 202.4 533.6L 203.2 534.4L 202.4 533.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 333.334 533.866C 332.978 534.222 333.822 534.178 333.866 534.134C 334.222 533.778 333.378 533.822 333.334 533.866z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 398.666 534.134C 398.622 534.178 398.578 535.022 398.934 534.666C 398.978 534.622 399.022 533.778 398.666 534.134M 203.2 534.4L 204 535.2L 203.2 534.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 204.266 534.934C 204.222 534.978 204.178 535.822 204.534 535.466C 204.578 535.422 204.622 534.578 204.266 534.934M 208 534.4L 208 536.8L 208.8 536.8C 208.599 535.638 208.548 535.398 208 534.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 309.066 534.934C 309.022 534.978 308.978 535.822 309.334 535.466C 309.378 535.422 309.422 534.578 309.066 534.934M 332.8 534.4L 332.8 535.2C 334.078 536.385 334.486 536.849 335.2 538.4L 336 538.4C 335.498 536.051 335.082 535.19 332.8 534.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 403.2 535.2L 403.2 536L 407.2 535.2C 405.646 534.702 404.841 534.851 403.2 535.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 148.8 535.2L 148.8 540L 149.6 540C 149.562 538.198 149.499 536.842 148.8 535.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 207.2 535.2L 206.4 537.6C 207.813 536.817 207.964 536.622 207.2 535.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 302.4 535.2L 302.4 536L 305.6 536C 304.395 535.454 303.748 535.339 302.4 535.2M 310.666 535.734C 310.622 535.778 310.578 536.622 310.934 536.266C 310.978 536.222 311.022 535.378 310.666 535.734M 345.6 535.2L 345.6 536L 348 536C 347.002 535.452 346.762 535.401 345.6 535.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 398.4 535.2L 398.4 537.6L 399.2 537.6C 398.999 536.438 398.948 536.198 398.4 535.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 149.6 536L 149.6 538.4L 150.4 538.4C 150.199 537.238 150.148 536.998 149.6 536M 300.8 536.8L 300.8 537.6C 303.49 537.1 306.062 536.822 308.8 536.8C 306.121 535.676 303.549 535.988 300.8 536.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 334.666 536.534C 334.622 536.578 334.578 537.422 334.934 537.066C 334.978 537.022 335.022 536.178 334.666 536.534z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 344.8 537.6C 346.474 537.275 346.416 537.426 347.2 536C 345.936 536.547 345.778 536.644 344.8 537.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 347.2 536L 347.2 536.8L 351.2 536.8C 349.785 536.177 348.771 536.07 347.2 536z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 84 536.8L 84.8 537.6L 84 536.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 352 536.8L 352 537.6L 355.2 537.6C 353.995 537.054 353.348 536.939 352 536.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 355.2 536.8L 356 537.6L 355.2 536.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 81.6 537.6L 82.4 538.4L 81.6 537.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 85.0664 538.134C 85.0224 538.178 84.9776 539.022 85.3336 538.666C 85.3776 538.622 85.4224 537.778 85.0664 538.134z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 206.4 537.6L 206.4 539.2C 207.708 538.764 207.564 538.908 208 537.6L 206.4 537.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 299.2 537.6L 299.2 538.4L 302.4 538.4C 301.195 537.854 300.548 537.739 299.2 537.6z\" />\r\n            <path style=\"stroke:none; fill:#010101\"\r\n                d=\"M 286.4 549.6C 285.034 546.659 281.946 537.545 277.21 540.826C 274.137 542.956 275.345 548.84 275.128 552C 274.588 559.894 273.482 567.598 268.813 574.266C 264.566 580.333 260.629 567.077 255.534 569.298C 253.026 570.392 252.531 574.665 251.204 576.8C 248.123 581.758 243.495 585.865 237.6 586.4L 237.6 588C 248.385 587.903 253.042 579.647 256 570.4C 259.218 572.982 261.103 577.567 265.597 578.202C 270.443 578.886 270.953 574.522 272.769 571.2C 277.569 562.422 276.819 551.495 277.6 541.6C 281.636 543.711 281.856 549.195 285.841 551.131C 290.933 553.604 296.545 543.646 300.012 541.39C 302.336 539.879 304.756 539.938 306.4 537.6C 297.105 538.781 293.97 544.927 286.4 549.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 309.6 537.6L 310.4 538.4L 309.6 537.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 356 537.6L 356 538.4L 359.2 538.4C 357.995 537.854 357.348 537.739 356 537.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 400.8 537.6L 400.8 540L 401.6 540C 401.399 538.838 401.348 538.598 400.8 537.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 298.134 538.666C 297.778 539.022 298.622 538.978 298.666 538.934C 299.022 538.578 298.178 538.622 298.134 538.666z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 308.534 538.666C 308.178 539.022 309.022 538.978 309.066 538.934C 309.422 538.578 308.578 538.622 308.534 538.666z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 336.266 538.934C 336.222 538.978 336.178 539.822 336.534 539.466C 336.578 539.422 336.622 538.578 336.266 538.934z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 360 538.4L 360 539.2L 363.2 539.2C 361.995 538.654 361.348 538.539 360 538.4z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 363.734 538.666C 363.378 539.022 364.222 538.978 364.266 538.934C 364.622 538.578 363.778 538.622 363.734 538.666z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 401.6 538.4L 401.6 541.6L 402.4 541.6C 402.261 540.252 402.146 539.605 401.6 538.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 85.6 539.2L 86.4 540L 85.6 539.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 203.2 539.2L 204 540L 203.2 539.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 275.466 539.734C 275.422 539.778 275.378 540.622 275.734 540.266C 275.778 540.222 275.822 539.378 275.466 539.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 276 539.2L 276 540L 279.2 540C 277.995 539.454 277.348 539.339 276 539.2M 294.4 542.4C 295.802 541.336 296.536 540.602 297.6 539.2C 295.801 540.123 295.323 540.601 294.4 542.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 345.6 539.2L 346.4 540L 345.6 539.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 365.6 539.2L 366.4 540L 365.6 539.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 366.4 539.2L 367.2 540L 366.4 539.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 85.6 540L 86.4 540.8L 85.6 540z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 146.4 540L 146.4 542.4L 147.2 542.4C 146.999 541.238 146.948 540.998 146.4 540z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 204 540L 204.8 540.8L 204 540z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 276 540L 276.8 540.8L 276 540M 344.8 540L 345.6 540.8L 344.8 540z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 367.2 540L 368 540.8L 367.2 540z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 400.8 540L 400.8 546.4L 401.6 546.4C 401.594 544.131 401.678 542.09 400.8 540z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 86.6664 541.334C 86.6224 541.378 86.5776 542.222 86.9336 541.866C 86.9776 541.822 87.0224 540.978 86.6664 541.334M 275.2 540.8L 275.2 543.2L 276 543.2C 275.799 542.038 275.748 541.798 275.2 540.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 334.666 541.334C 334.622 541.378 334.578 542.222 334.934 541.866C 334.978 541.822 335.022 540.978 334.666 541.334z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 337.066 541.334C 337.022 541.378 336.978 542.222 337.334 541.866C 337.378 541.822 337.422 540.978 337.066 541.334z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 344 540.8L 344.8 541.6L 344 540.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 344.8 540.8L 345.6 541.6L 344.8 540.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 363.734 541.066C 363.378 541.422 364.222 541.378 364.266 541.334C 364.622 540.978 363.778 541.022 363.734 541.066M 83.2 541.6L 84 542.4L 83.2 541.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 277.6 541.6L 276.8 546.4L 277.6 546.4C 278.15 544.465 278.338 543.458 277.6 541.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 282.4 541.6L 283.2 542.4L 282.4 541.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 344 541.6L 344 543.2C 345.308 542.764 345.164 542.908 345.6 541.6L 344 541.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 364.8 541.6L 365.6 542.4L 364.8 541.6M 84.2664 542.934C 84.2224 542.978 84.1776 543.822 84.5336 543.466C 84.5776 543.422 84.6224 542.578 84.2664 542.934z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 87.2 542.4C 87.3408 543.902 87.5504 544.959 88 546.4L 88.8 546.4C 88.3592 544.94 87.9392 543.718 87.2 542.4M 146.4 542.4L 147.2 543.2L 146.4 542.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 205.6 542.4L 204.8 549.6L 205.6 549.6C 206.073 547.046 206.594 544.838 205.6 542.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 292.8 544.8C 293.966 543.918 294.318 543.566 295.2 542.4C 293.501 543.119 293.519 543.101 292.8 544.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 334.666 542.934C 334.622 542.978 334.578 543.822 334.934 543.466C 334.978 543.422 335.022 542.578 334.666 542.934z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 337.066 542.934C 337.022 542.978 336.978 543.822 337.334 543.466C 337.378 543.422 337.422 542.578 337.066 542.934z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 343.2 542.4C 342.488 543.796 342.038 544.9 341.6 546.4L 342.4 546.4C 343.046 544.834 343.415 544.018 343.2 542.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 365.6 542.4L 366.4 543.2L 365.6 542.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 368.8 542.4L 369.6 543.2L 368.8 542.4z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 146.4 543.2C 146.725 544.874 146.574 544.816 148 545.6C 147.447 544.49 147.212 544.111 146.4 543.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 341.6 543.2L 342.4 544L 341.6 543.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 366.4 543.2L 367.2 544L 366.4 543.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 84.8 544L 85.6 544.8L 84.8 544z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 88.2664 544.534C 88.2224 544.578 88.1776 545.422 88.5336 545.066C 88.5776 545.022 88.6224 544.178 88.2664 544.534z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 289.6 547.2C 291.399 546.277 291.877 545.799 292.8 544C 291.001 544.923 290.523 545.401 289.6 547.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 293.6 544L 294.4 544.8L 293.6 544z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 340.8 544C 340.391 545.562 340.214 545.966 339.2 547.2L 339.2 548C 341.054 546.894 341.57 546.01 342.4 544L 340.8 544z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 367.2 544L 368 544.8L 367.2 544z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 369.866 544.534C 369.822 544.578 369.778 545.422 370.134 545.066C 370.178 545.022 370.222 544.178 369.866 544.534z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 389.6 544L 389.6 544.8L 394.4 544.8C 392.758 544.101 391.402 544.038 389.6 544z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 394.4 544L 394.4 544.8L 399.2 544.8C 397.558 544.101 396.202 544.038 394.4 544z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 84.8 544.8L 85.6 545.6L 84.8 544.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 206.4 544.8L 205.6 548.8L 206.4 548.8C 206.874 547.076 207.019 546.435 206.4 544.8z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 292.8 544.8L 293.6 545.6L 292.8 544.8M 340 544.8L 339.2 547.2C 340.613 546.417 340.764 546.222 340 544.8z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 388.8 544.8L 388.8 547.2L 389.6 547.2C 389.399 546.038 389.348 545.798 388.8 544.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 389.6 544.8L 389.6 546.4C 392.89 546.4 395.986 546.365 399.2 545.6C 396.242 544.358 392.786 544.8 389.6 544.8M 87.2 545.6C 87.2208 548.098 87.4208 550.369 88 552.8L 88.8 552.8C 88.7912 550.027 88.9 547.843 87.2 545.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 146.666 546.134C 146.622 546.178 146.578 547.022 146.934 546.666C 146.978 546.622 147.022 545.778 146.666 546.134z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 147.2 545.6L 147.2 549.6L 148 549.6C 147.93 548.029 147.823 547.015 147.2 545.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 274.666 546.134C 274.622 546.178 274.578 547.022 274.934 546.666C 274.978 546.622 275.022 545.778 274.666 546.134z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 295.466 546.134C 295.422 546.178 295.378 547.022 295.734 546.666C 295.778 546.622 295.822 545.778 295.466 546.134z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 339.2 545.6L 340 546.4L 339.2 545.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 281.6 546.4L 282.4 547.2L 281.6 546.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 368.266 546.934C 368.222 546.978 368.178 547.822 368.534 547.466C 368.578 547.422 368.622 546.578 368.266 546.934z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 273.6 547.2L 273.6 554.4L 274.4 554.4C 274.398 551.899 274.57 549.512 273.6 547.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 274.4 547.2L 275.2 548L 274.4 547.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 294.134 547.466C 293.778 547.822 294.622 547.778 294.666 547.734C 295.022 547.378 294.178 547.422 294.134 547.466z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 336 547.2L 336.8 548L 336 547.2z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 340.8 547.2C 339.586 547.966 338.93 548.31 337.6 548.8L 337.6 549.6C 339.49 549.38 341.15 549.294 340.8 547.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 370.4 547.2L 370.4 551.2L 371.2 551.2C 371.13 549.629 371.023 548.615 370.4 547.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 274.4 548L 274.4 555.2L 275.2 555.2C 275.198 552.699 275.37 550.312 274.4 548M 282.4 548L 282.4 553.6L 285.6 552.8C 284.796 550.732 284.016 549.517 282.4 548M 336.8 548L 336.8 548.8L 340 548.8C 338.795 548.254 338.148 548.139 336.8 548M 148.266 549.334C 148.222 549.378 148.178 550.222 148.534 549.866C 148.578 549.822 148.622 548.978 148.266 549.334z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 287.2 548.8L 288 549.6L 287.2 548.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 390.4 548.8L 390.4 551.2L 391.2 551.2C 390.999 550.038 390.948 549.798 390.4 548.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 147.2 549.6L 147.2 552.8L 148 552.8C 147.861 551.452 147.746 550.805 147.2 549.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 204 549.6L 204 552L 204.8 552C 204.599 550.838 204.548 550.598 204 549.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 284 549.6L 284.8 550.4L 284 549.6z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 203.466 550.934C 203.422 550.978 203.378 551.822 203.734 551.466C 203.778 551.422 203.822 550.578 203.466 550.934z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 388.266 550.934C 388.222 550.978 388.178 551.822 388.534 551.466C 388.578 551.422 388.622 550.578 388.266 550.934z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 391.2 550.4L 391.2 553.6L 392 553.6C 391.861 552.252 391.746 551.605 391.2 550.4M 85.0664 551.734C 85.0224 551.778 84.9776 552.622 85.3336 552.266C 85.3776 552.222 85.4224 551.378 85.0664 551.734z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 89.0664 551.734C 89.0224 551.778 88.9776 552.622 89.3336 552.266C 89.3776 552.222 89.4224 551.378 89.0664 551.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 89.6 551.2L 90.4 555.2L 91.2 555.2C 90.8912 553.486 90.604 552.6 89.6 551.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 390.666 551.734C 390.622 551.778 390.578 552.622 390.934 552.266C 390.978 552.222 391.022 551.378 390.666 551.734z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 387.466 552.534C 387.422 552.578 387.378 553.422 387.734 553.066C 387.778 553.022 387.822 552.178 387.466 552.534z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 368.266 553.334C 368.222 553.378 368.178 554.222 368.534 553.866C 368.578 553.822 368.622 552.978 368.266 553.334z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 368.8 552.8C 368.851 555.194 368.757 556.277 371.2 556.8L 371.2 556L 368.8 552.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 389.6 552.8L 389.6 554.4C 390.908 553.964 390.764 554.108 391.2 552.8L 389.6 552.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 200.8 555.2L 205.6 554.4C 203.577 553.569 202.259 553.526 200.8 555.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 390.4 553.6L 391.2 554.4L 390.4 553.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 135.2 554.4L 136 555.2L 135.2 554.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 136 554.4L 136.8 555.2L 136 554.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 141.334 554.666C 140.978 555.022 141.822 554.978 141.866 554.934C 142.222 554.578 141.378 554.622 141.334 554.666z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 203.2 554.4L 203.2 555.2L 208.8 555.2C 206.934 554.412 205.234 554.415 203.2 554.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 368 554.4L 368 556.8L 368.8 556.8C 368.599 555.638 368.548 555.398 368 554.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 134.4 555.2L 135.2 556L 134.4 555.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 142.4 555.2L 143.2 556L 142.4 555.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 145.6 555.2L 146.4 556L 145.6 555.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 374.4 555.2L 374.4 556L 377.6 556C 376.395 555.454 375.748 555.339 374.4 555.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 385.6 555.2L 386.4 556L 385.6 555.2z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 88 556C 88.5472 557.264 88.644 557.422 89.6 558.4C 89.0528 557.136 88.956 556.978 88 556z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 133.6 556L 134.4 556.8L 133.6 556z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 138.4 556L 139.2 556.8L 138.4 556z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 143.2 556L 144 556.8L 143.2 556z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 144 556L 144.8 556.8L 144 556z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 378.934 556.266C 378.578 556.622 379.422 556.578 379.466 556.534C 379.822 556.178 378.978 556.222 378.934 556.266z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 384 556L 384.8 556.8L 384 556z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 133.6 556.8L 134.4 557.6L 133.6 556.8z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 209.6 556.8L 209.6 560.8L 210.4 560.8C 210.33 559.229 210.223 558.215 209.6 556.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 276 556.8L 276 564.8L 276.8 564.8C 276.8 562.069 277.062 559.33 276 556.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 369.6 556.8L 369.6 557.6L 372 557.6C 371.002 557.052 370.762 557.001 369.6 556.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 372 556.8L 372.8 557.6L 372 556.8M 375.2 557.6L 375.2 558.4L 377.6 558.4C 376.602 557.852 376.362 557.801 375.2 557.6z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 143.2 558.4L 143.2 560L 144.8 560C 144.364 558.692 144.508 558.836 143.2 558.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 144 558.4C 144.978 559.356 145.136 559.453 146.4 560C 145.616 558.574 145.674 558.725 144 558.4M 379.2 558.4L 379.2 559.2L 383.2 559.2C 381.785 558.577 380.771 558.47 379.2 558.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 382.4 559.2L 382.4 560L 385.6 559.2C 384.153 558.741 383.945 558.828 382.4 559.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 108.534 560.266C 108.178 560.622 109.022 560.578 109.066 560.534C 109.422 560.178 108.578 560.222 108.534 560.266z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 111.2 560L 112 560.8L 111.2 560M 132 560L 132.8 560.8L 132 560z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 134.4 560L 135.2 560.8L 134.4 560z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 112.8 560.8L 113.6 561.6L 112.8 560.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 129.334 561.066C 128.978 561.422 129.822 561.378 129.866 561.334C 130.222 560.978 129.378 561.022 129.334 561.066z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 131.2 560.8L 132 561.6L 131.2 560.8z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 134.4 560.8L 135.2 561.6L 134.4 560.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 210.666 561.334C 210.622 561.378 210.578 562.222 210.934 561.866C 210.978 561.822 211.022 560.978 210.666 561.334z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 92.8 561.6L 92.8 564L 93.6 564C 93.3992 562.838 93.348 562.598 92.8 561.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 112.8 561.6L 113.6 562.4L 112.8 561.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 117.6 563.2L 117.6 564C 121.428 563.921 125.054 563.126 128.8 562.4C 125.356 561.168 121.242 563.042 117.6 563.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 128.8 561.6L 128.8 562.4L 131.2 562.4C 130.202 561.852 129.962 561.801 128.8 561.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 95.7336 562.666C 95.3776 563.022 96.2224 562.978 96.2664 562.934C 96.6224 562.578 95.7776 562.622 95.7336 562.666z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 96.8 562.4L 97.6 563.2L 96.8 562.4z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 108.8 564L 111.2 563.2C 109.778 562.436 109.583 562.587 108.8 564M 113.6 562.4L 114.4 563.2L 113.6 562.4M 126.4 562.4L 127.2 563.2L 126.4 562.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 211.466 562.934C 211.422 562.978 211.378 563.822 211.734 563.466C 211.778 563.422 211.822 562.578 211.466 562.934z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 218.4 562.4C 219.378 563.356 219.536 563.453 220.8 564C 219.822 563.044 219.664 562.947 218.4 562.4M 93.6 563.2C 94.1472 564.464 94.244 564.622 95.2 565.6L 95.2 563.2L 93.6 563.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 95.2 563.2L 96 564L 95.2 563.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 105.6 563.2L 106.4 564L 105.6 563.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 106.4 563.2L 106.4 564L 108.8 564C 107.802 563.452 107.562 563.401 106.4 563.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 114.4 563.2L 115.2 564L 114.4 563.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 122.4 563.2L 122.4 564L 125.6 564C 124.395 563.454 123.748 563.339 122.4 563.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 132 563.2L 132.8 564L 132 563.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 215.2 563.2L 215.2 564L 219.2 564C 217.785 563.377 216.771 563.27 215.2 563.2z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 276.8 563.2L 276 568L 276.8 568C 277.35 566.065 277.538 565.058 276.8 563.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 97.6 565.6C 99.2736 565.275 99.216 565.426 100 564C 98.736 564.547 98.5784 564.644 97.6 565.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 100 564L 100 565.6C 101.308 565.164 101.164 565.308 101.6 564L 100 564z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 102.134 564.266C 101.778 564.622 102.622 564.578 102.666 564.534C 103.022 564.178 102.178 564.222 102.134 564.266z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 106.4 564L 106.4 564.8L 108.8 564.8C 107.802 564.252 107.562 564.201 106.4 564z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 112 564L 112 567.2L 116 566.4L 116 565.6C 114.442 565.237 113.385 564.805 112 564M 128.8 564L 129.6 564.8L 128.8 564z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 130.4 564L 130.4 564.8L 132.8 564.8C 131.802 564.252 131.562 564.201 130.4 564z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 212 564L 212.8 564.8L 212 564M 217.6 564L 218.4 564.8L 217.6 564z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 218.4 564L 219.2 564.8L 218.4 564z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 219.734 564.266C 219.378 564.622 220.222 564.578 220.266 564.534C 220.622 564.178 219.778 564.222 219.734 564.266z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 93.6 564.8L 94.4 565.6L 93.6 564.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 101.334 565.066C 100.978 565.422 101.822 565.378 101.866 565.334C 102.222 564.978 101.378 565.022 101.334 565.066z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 213.6 564.8L 214.4 565.6L 213.6 564.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 276.266 565.334C 276.222 565.378 276.178 566.222 276.534 565.866C 276.578 565.822 276.622 564.978 276.266 565.334z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 99.7336 565.866C 99.3776 566.222 100.222 566.178 100.266 566.134C 100.622 565.778 99.7776 565.822 99.7336 565.866z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 116 565.6L 116 566.4L 118.4 566.4C 117.402 565.852 117.162 565.801 116 565.6z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 230.4 565.6L 230.4 566.4L 233.6 567.2C 232.549 565.906 232.098 565.846 230.4 565.6z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 233.6 565.6L 233.6 570.4C 235.358 568.806 234.869 567.469 233.6 565.6z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 114.4 566.4L 115.2 567.2L 114.4 566.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 115.2 566.4L 115.2 567.2L 117.6 567.2C 116.602 566.652 116.362 566.601 115.2 566.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 219.2 566.4C 220.703 568.854 221.949 569.382 224.8 569.6L 224.8 568.8L 219.2 566.4z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 228.8 566.4L 228.8 567.2L 232.8 567.2C 231.385 566.577 230.371 566.47 228.8 566.4z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 275.466 566.934C 275.422 566.978 275.378 567.822 275.734 567.466C 275.778 567.422 275.822 566.578 275.466 566.934M 93.6 567.2L 93.6 568L 96 568C 95.0016 567.452 94.7616 567.401 93.6 567.2M 225.6 567.2L 225.6 568C 228.121 568.492 230.262 568.3 232.8 568C 230.97 570.708 230.438 572.74 230.4 576L 239.2 575.2C 237.27 572.994 234.654 573.77 232 574.4L 233.6 567.2L 225.6 567.2z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 233.866 568.534C 233.822 568.578 233.778 569.422 234.134 569.066C 234.178 569.022 234.222 568.178 233.866 568.534z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 256 568L 256 568.8L 259.2 568.8C 257.995 568.254 257.348 568.139 256 568z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 271.2 568L 272 568.8L 271.2 568z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 274.4 568L 275.2 568.8L 274.4 568z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 253.6 568.8C 252.811 569.983 252.8 569.762 252.8 571.2C 253.831 570.046 253.921 570.213 253.6 568.8M 270.4 568.8L 271.2 569.6L 270.4 568.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 233.066 570.134C 233.022 570.178 232.978 571.022 233.334 570.666C 233.378 570.622 233.422 569.778 233.066 570.134z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 256.8 570.4L 257.6 571.2L 256.8 570.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 235.2 572L 235.2 572.8L 239.2 572.8C 237.854 571.284 237.17 571.508 235.2 572z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 253.066 571.734C 253.022 571.778 252.978 572.622 253.334 572.266C 253.378 572.222 253.422 571.378 253.066 571.734z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 257.6 571.2L 258.4 572L 257.6 571.2z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 232 572C 232.325 573.674 232.174 573.616 233.6 574.4C 233.047 573.29 232.812 572.911 232 572z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 237.334 572.266C 236.978 572.622 237.822 572.578 237.866 572.534C 238.222 572.178 237.378 572.222 237.334 572.266z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 257.6 572L 258.4 575.2L 259.2 575.2C 258.749 573.798 258.465 573.166 257.6 572z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 258.666 572.534C 258.622 572.578 258.578 573.422 258.934 573.066C 258.978 573.022 259.022 572.178 258.666 572.534z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 234.4 572.8L 234.4 573.6L 236.8 573.6C 235.802 573.052 235.562 573.001 234.4 572.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 237.334 573.066C 236.978 573.422 237.822 573.378 237.866 573.334C 238.222 572.978 237.378 573.022 237.334 573.066z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 271.2 572.8C 270.807 577.882 267.766 578.358 263.2 578.4L 263.2 579.2C 267.806 580.52 273.483 578.463 271.2 572.8z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 272 572.8L 272 575.2L 272.8 575.2C 272.599 574.038 272.548 573.798 272 572.8z\" />\r\n            <path style=\"stroke:none; fill:#8a8a8a\"\r\n                d=\"M 239.2 573.6L 238.4 576.8L 239.2 576.8C 239.572 575.255 239.659 575.047 239.2 573.6z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 240.266 574.934C 240.222 574.978 240.178 575.822 240.534 575.466C 240.578 575.422 240.622 574.578 240.266 574.934z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 259.2 574.4L 260 575.2L 259.2 574.4z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 237.866 575.734C 237.822 575.778 237.778 576.622 238.134 576.266C 238.178 576.222 238.222 575.378 237.866 575.734z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 260 575.2C 260.749 576.759 261.114 577.24 262.4 578.4C 261.651 576.841 261.286 576.36 260 575.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 239.2 576C 238.904 580.462 236.842 584.234 236.8 588.8L 243.2 588.8L 243.2 588L 237.6 588C 239.155 584.046 242.102 579.854 239.2 576z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 240 576L 240.8 576.8L 240 576z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 250.4 576L 251.2 576.8L 250.4 576z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 270.666 576.534C 270.622 576.578 270.578 577.422 270.934 577.066C 270.978 577.022 271.022 576.178 270.666 576.534z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 238.4 576.8L 238.4 579.2L 239.2 579.2C 238.999 578.038 238.948 577.798 238.4 576.8z\" />\r\n            <path style=\"stroke:none; fill:#555555\"\r\n                d=\"M 250.4 576.8L 249.6 579.2C 250.631 578.046 250.721 578.213 250.4 576.8z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 253.6 576.8L 254.4 577.6L 253.6 576.8z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 249.6 577.6L 250.4 578.4L 249.6 577.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 262.934 577.866C 262.578 578.222 263.422 578.178 263.466 578.134C 263.822 577.778 262.978 577.822 262.934 577.866z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 249.066 578.934C 249.022 578.978 248.978 579.822 249.334 579.466C 249.378 579.422 249.422 578.578 249.066 578.934z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 238.666 579.734C 238.622 579.778 238.578 580.622 238.934 580.266C 238.978 580.222 239.022 579.378 238.666 579.734z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 248 579.2C 246.614 580.606 246.127 581.314 245.6 583.2C 247.212 581.885 248.078 581.27 248 579.2z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 240 581.6L 240.8 582.4L 240 581.6z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 239.2 582.4L 240 583.2L 239.2 582.4z\" />\r\n            <path style=\"stroke:none; fill:#dfdfdd\"\r\n                d=\"M 240.266 582.934C 240.222 582.978 240.178 583.822 240.534 583.466C 240.578 583.422 240.622 582.578 240.266 582.934z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 248.8 582.4L 249.6 583.2L 248.8 582.4z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 239.466 583.734C 239.422 583.778 239.378 584.622 239.734 584.266C 239.778 584.222 239.822 583.378 239.466 583.734z\" />\r\n            <path style=\"stroke:none; fill:#9e9e9e\"\r\n                d=\"M 244.8 583.2L 245.6 584L 244.8 583.2z\" />\r\n            <path style=\"stroke:none; fill:#393939\"\r\n                d=\"M 248 583.2L 248.8 584L 248 583.2z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 243.2 584L 243.2 585.6C 244.508 585.164 244.364 585.308 244.8 584L 243.2 584M 238.666 585.334C 238.622 585.378 238.578 586.222 238.934 585.866C 238.978 585.822 239.022 584.978 238.666 585.334z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 239.466 585.334C 239.422 585.378 239.378 586.222 239.734 585.866C 239.778 585.822 239.822 584.978 239.466 585.334z\" />\r\n            <path style=\"stroke:none; fill:#b3b3b3\"\r\n                d=\"M 242.4 584.8L 243.2 585.6L 242.4 584.8M 236 585.6L 236.8 586.4L 236 585.6z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 235.466 586.934C 235.422 586.978 235.378 587.822 235.734 587.466C 235.778 587.422 235.822 586.578 235.466 586.934z\" />\r\n            <path style=\"stroke:none; fill:#6d6d6d\"\r\n                d=\"M 236.266 586.934C 236.222 586.978 236.178 587.822 236.534 587.466C 236.578 587.422 236.622 586.578 236.266 586.934z\" />\r\n            <path style=\"stroke:none; fill:#ced2d4\"\r\n                d=\"M 244.8 586.4L 243.2 587.2L 243.2 588C 244.69 587.714 245.395 587.78 244.8 586.4z\" />\r\n            <path style=\"stroke:none; fill:#c7c7c6\"\r\n                d=\"M 236 588L 236.8 588.8L 236 588z\" />\r\n        </g>\r\n    </svg>    `;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-content\">\r\n                <div className=\"main-content_container\">\r\n                    <div className=\"main-content_container_slide-menu\">\r\n                        <div className=\"main-content_container_slide-menu__humans\">\r\n                            <h3>Люди</h3>\r\n                            <div className=\"main-content_container_slide-menu__humans_container\">\r\n                                <div className=\"main-content_container_slide-menu__humans_container_input-row\">\r\n                                    <button>\r\n                                        <img src={lupa} alt=\"лупа\" />\r\n                                    </button>\r\n                                    <input type=\"text\" />\r\n                                </div>\r\n                                <div className=\"main-content_container_slide-menu__humans_container_user\">\r\n                                    <img src={logoUser} alt=\"user\" />\r\n                                    <div className=\"main-content_container_slide-menu__humans_container_user__text\">\r\n                                        <h4>К. АЛИХАНОВ</h4>\r\n                                        <span>С 10.09.1941Г. МОБИЛИЗОВАН В РЯДЫ РАБОЧЕ...</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"main-content_container_slide-menu__humans_container_user\">\r\n                                    <img src={logoUser} alt=\"user\" />\r\n                                    <div className=\"main-content_container_slide-menu__humans_container_user__text\">\r\n                                        <h4>К. АЛИХАНОВ</h4>\r\n                                        <span>С 10.09.1941Г. МОБИЛИЗОВАН В РЯДЫ РАБОЧЕ...</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"main-content_container_slide-menu__cities\">\r\n                            <h3>Города</h3>\r\n                            <div className=\"main-content_container_slide-menu__cities_container\">\r\n                                {arrayRegions.map((element: any, index: number) => (\r\n                                    <span>{element}</span>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"main-content_map\" dangerouslySetInnerHTML={{ __html:  ryazanRegionSVG  }}>\r\n                    </div>\r\n                </div>\r\n                <div className=\"slide-menu-container\">\r\n                    <button onClick={handlerOnClickSideMenuButton}>Книги победы <img src={book} alt=\"книга\" /></button>\r\n                </div>\r\n                {stateViewBooks && <div className=\"slide-menu-container_hrefs\">\r\n                    <button>\r\n                        <img src={book} alt=\"\" />\r\n                        <span> 75 лет книга победы</span>\r\n                    </button>\r\n                    <button>\r\n                        <img src={book} alt=\"\" />\r\n                        <span>70 лет книга победы</span>\r\n\r\n                    </button>\r\n                    <button>\r\n                        <img src={book} alt=\"\" />\r\n                        <span>Года ВОВ в Рязанской области</span>\r\n                    </button>\r\n                </div>}\r\n            </div >\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Header } from '../Header';\r\nimport { Footer } from '../Footer';\r\nimport { MainContent } from '../MainContent';\r\nimport './css/style.css';\r\n\r\n/**\r\n * Приложениеы\r\n * @returns компонент \"Приложение\"\r\n */\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <MainContent />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import type { Location, Path, To } from \"./history\";\nimport { warning, invariant, parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on <Form>,\n * useSubmit(), <fetcher.Form>, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\";\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport interface Submission {\n  formMethod: FormMethod | V7_FormMethod;\n  formAction: string;\n  formEncType: FormEncType;\n  formData: FormData;\n}\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n  context?: any;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    formData?: Submission[\"formData\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<Omit<R, ImmutableRouteKey>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        const starParam = params[star];\n\n        // Apply the splat\n        return starParam;\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n\n        if (optional === \"?\") {\n          return param == null ? \"\" : param;\n        }\n\n        if (param == null) {\n          invariant(false, `Missing \":${key}\" param`);\n        }\n\n        return param;\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, null, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  error?: Error;\n  internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  DataResult,\n  DeferredData,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  DetectErrorBoundaryFunction,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n  ShouldRevalidateFunction,\n  RouteManifest,\n  ImmutableRouteKey,\n  ActionFunction,\n  LoaderFunction,\n  V7_MutationFormMethod,\n  V7_FormMethod,\n  HTMLFormMethod,\n  MutationFormMethod,\n  MapRoutePropertiesFunction,\n} from \"./utils\";\nimport {\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterNavigateOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_normalizeFormMethod: boolean;\n  v7_prependBasename: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\ntype BaseNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  fromRouteId?: string;\n};\n\n/**\n * Options for a navigate() call for a Link navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a Form navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n  formData: FormData;\n};\n\n/**\n * Options to pass to navigate() for either a Link or Form navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions =\n  | Omit<LinkNavigateOptions, \"replace\">\n  | Omit<SubmissionNavigateOptions, \"replace\">;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: FormMethod | V7_FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: FormMethod | V7_FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: FormMethod | V7_FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: FormMethod | V7_FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              deleteBlocker(blockerKey!);\n              updateState({ blockers: new Map(router.state.blockers) });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers: new Map(state.blockers),\n    });\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          deleteBlocker(blockerKey!);\n          updateState({ blockers: new Map(state.blockers) });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a mutation submission.\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".\n    // For example, on /page#hash and submit a <Form method=\"post\"> which will\n    // default to a navigation to /page\n    if (\n      state.initialized &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        ...opts.submission,\n      };\n      loadingNavigation = navigation;\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts?: { replace?: boolean }\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation: NavigationStates[\"Submitting\"] = {\n      state: \"submitting\",\n      location,\n      ...submission,\n    };\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n    if (!loadingNavigation) {\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        ...submission,\n      };\n      loadingNavigation = navigation;\n    }\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission || fetcherSubmission\n        ? submission || fetcherSubmission\n        : loadingNavigation.formMethod &&\n          loadingNavigation.formAction &&\n          loadingNavigation.formData &&\n          loadingNavigation.formEncType\n        ? {\n            formMethod: loadingNavigation.formMethod,\n            formAction: loadingNavigation.formAction,\n            formData: loadingNavigation.formData,\n            formEncType: loadingNavigation.formEncType,\n          }\n        : undefined;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n        ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach((rf) => {\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath })\n      );\n      return;\n    }\n\n    let { path, submission } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher: FetcherStates[\"Submitting\"] = {\n      state: \"submitting\",\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher: FetcherStates[\"Loading\"] = {\n        state: \"loading\",\n        ...submission,\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, loadingFetcher);\n      updateState({ fetchers: new Map(state.fetchers) });\n\n      return startRedirectNavigation(state, actionResult, {\n        submission,\n        isFetchActionRedirect: true,\n      });\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      data: actionResult.data,\n      ...submission,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: existingFetcher && existingFetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      fetchRedirectIds.add(key);\n      await startRedirectNavigation(state, result);\n      return;\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      replace,\n      isFetchActionRedirect,\n    }: {\n      submission?: Submission;\n      replace?: boolean;\n      isFetchActionRedirect?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(\n      state.location,\n      redirect.location,\n      // TODO: This can be removed once we get rid of useTransition in Remix v2\n      {\n        _isRedirect: true,\n        ...(isFetchActionRedirect ? { _isFetchActionRedirect: true } : {}),\n      }\n    );\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n    // Check if this an absolute external redirect that goes to a new origin\n    if (\n      ABSOLUTE_URL_REGEX.test(redirect.location) &&\n      isBrowser &&\n      typeof window?.location !== \"undefined\"\n    ) {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename = stripBasename(url.pathname, basename) == null;\n\n      if (window.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          window.location.replace(redirect.location);\n        } else {\n          window.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType, formData } = state.navigation;\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData,\n      };\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      submission &&\n      isMutationMethod(submission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...submission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n        },\n        fetcherSubmission: submission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    state.blockers.set(key, newBlocker);\n    updateState({ blockers: new Map(state.blockers) });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || ((location) => location.key);\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        true,\n        isRouteRequest,\n        requestContext\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          true,\n          isRouteRequest,\n          requestContext\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return opts != null && \"formData\" in opts;\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: RouterNavigateOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  // Create a Submission on non-GET navigations\n  let submission: Submission | undefined;\n  if (opts.formData) {\n    let formMethod = opts.formMethod || \"get\";\n    submission = {\n      formMethod: normalizeFormMethod\n        ? (formMethod.toUpperCase() as V7_FormMethod)\n        : (formMethod.toLowerCase() as FormMethod),\n      formAction: stripHashFromPath(path),\n      formEncType:\n        (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n      formData: opts.formData,\n    };\n\n    if (isMutationMethod(submission.formMethod)) {\n      return { path, submission };\n    }\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  let searchParams = convertFormDataToSearchParams(opts.formData);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // hit a static href, so they _always_ check shouldRevalidate and the\n    // default is strictly if a revalidation is explicitly required (action\n    // submissions, useRevalidator, X-Remix-Revalidate).\n    let shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n      currentUrl,\n      currentParams: state.matches[state.matches.length - 1].params,\n      nextUrl,\n      nextParams: matches[matches.length - 1].params,\n      ...submission,\n      actionResult,\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      defaultShouldRevalidate: isRevalidationRequired,\n    });\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: Parameters<ShouldRevalidateFunction>[0]\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  isStaticRequest: boolean = false,\n  isRouteRequest: boolean = false,\n  requestContext?: unknown\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({ request, params: match.params, context: requestContext }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([\n          runHandler(handler),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location\n        );\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result,\n      };\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType, formData } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    init.body =\n      formEncType === \"application/x-www-form-urlencoded\"\n        ? convertFormDataToSearchParams(formData)\n        : formData;\n  }\n\n  // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, value instanceof File ? value.name : value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponse(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results: DataResult[]): RedirectResult | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(\n    () => () => router.deleteBlocker(blockerKey),\n    [router, blockerKey]\n  );\n\n  // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n  return state.blockers.get(blockerKey) || blocker;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  To,\n  LazyRouteFunction,\n  RelativeRoutingType,\n  RouterState,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n  useRoutesImpl,\n  useLocation,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setState] = React.useState(router.state);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={router.basename}\n            location={router.state.location}\n            navigationType={router.state.historyAction}\n            navigator={navigator}\n          >\n            {router.state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<FutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(\n  fetcherKey?: string,\n  fetcherRouteId?: string\n): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { action, method, encType, formData } = getFormSubmissionInfo(\n        target,\n        options,\n        basename\n      );\n\n      // Base options shared between fetch() and navigate()\n      let opts = {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        formMethod: method as HTMLFormMethod,\n        formEncType: encType as FormEncType,\n      };\n\n      if (fetcherKey) {\n        invariant(\n          fetcherRouteId != null,\n          \"No routeId available for useFetcher()\"\n        );\n        router.fetch(fetcherKey, fetcherRouteId, action, opts);\n      } else {\n        router.navigate(action, {\n          ...opts,\n          replace: options.replace,\n          fromRouteId: currentRouteId,\n        });\n      }\n    },\n    [router, basename, fetcherKey, fetcherRouteId, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace/preventScrollReset because they are not\n    // navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"preventScrollReset\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './assets/components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '../src/assets/css/reset.css'\r\nimport '../src/assets/css/index.css';\r\nimport '../src/assets/css/IncludeFonts.css'\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"names":["aa","require","ca","p","a","b","c","arguments","length","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","createElement","ja","Object","prototype","hasOwnProperty","ka","la","ma","v","d","e","f","g","this","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","type","sanitizeURL","removeEmptyString","z","split","forEach","toLowerCase","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","call","test","oa","removeAttribute","setAttribute","setAttributeNS","replace","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","Symbol","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","Error","stack","trim","match","Na","Oa","prepareStackTrace","defineProperty","set","Reflect","construct","l","h","k","displayName","includes","name","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","constructor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","value","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","Array","isArray","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","toString","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","keys","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","apply","m","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","Math","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","key","String","fromCharCode","code","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","concat","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","bind","capture","passive","n","t","J","x","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","defaultProps","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","context","memoizedValue","next","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","payload","callback","dh","K","eh","fh","gh","q","r","y","hh","ih","jh","Component","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","contextType","state","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","props","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","ref","_owner","_stringRef","th","join","uh","vh","index","wh","xh","yh","implementation","zh","Ah","done","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","P","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","hi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","create","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","message","digest","Li","Mi","console","error","Ni","WeakMap","Oi","Pi","Qi","Ri","getDerivedStateFromError","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","compare","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Bj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","src","Wk","mk","ceil","nk","ok","pk","Y","Z","qk","rk","sk","tk","uk","Infinity","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","cache","pendingSuspenseBoundaries","el","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","version","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","exports","createPortal","dl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","module","__self","__source","Fragment","jsx","jsxs","setState","forceUpdate","escape","_status","_result","default","Children","map","count","toArray","only","Profiler","PureComponent","StrictMode","Suspense","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","o","chunkId","all","reduce","promises","miniCssF","obj","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","i","s","getAttribute","charset","timeout","nc","onScriptComplete","prev","onerror","onload","doneFns","fn","head","toStringTag","installedChunks","j","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","HeaderInformation","_jsxs","_Fragment","className","_jsx","logo","alt","formHref","Header","Footer","_arrayLikeToArray","arr","len","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","minLen","from","TypeError","MainContent","_useState2","_slicedToArray","stateViewBooks","setStateViewBooks","lupa","logoUser","ryazanRegion","book","Action","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Constructor","_typeof","_toPropertyKey","arg","hint","prim","toPrimitive","res","Number","_defineProperties","descriptor","writable","protoProps","staticProps","_setPrototypeOf","setPrototypeOf","__proto__","_inherits","subClass","superClass","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","sham","Proxy","Boolean","_possibleConstructorReturn","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","_construct","Parent","args","Class","_wrapNativeSuper","_cache","Wrapper","ResultType","PopStateEventType","invariant","getHistoryState","usr","idx","createLocation","to","pathname","hash","parsePath","substr","_ref$search","_ref$hash","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","_options2$window","_options2$v5Compat","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","delta","createURL","origin","createPath","URL","replaceState","listen","encodeLocation","Push","historyState","pushState","Replace","go","basename","startsWith","startIndex","endsWith","nextChar","AbortedDeferredError","_classCallCheck","validMutationMethodsArr","validRequestMethodsArr","AwaitContext","React","NavigationContext","LocationContext","RouteContext","outlet","matches","isDataRoute","RouteErrorContext","useInRouterContext","DataRouterHook","DataRouterStateHook","AwaitRenderStatus","Router","_ref5","basenameProp","_ref5$children","locationProp","_ref5$navigationType","navigationType","NavigationType","_ref5$static","static","staticProp","navigationContext","_locationProp$pathnam","_locationProp$search","_locationProp$hash","_locationProp$state","_locationProp$key","locationContext","trailingPathname","stripBasename","neverSettledPromise","BrowserRouter","historyRef","_React$useState2","ReactDOM","getElementById","App","reportWebVitals"],"sourceRoot":""}